Private Sub LoadPVT(well As CWell)
    Set PVT = NewCPVT()
    ' читаем исходные данные PVT модели дл€ проведени€ расчетов
    sheet_name = "PVT"
          
    PVT.gamma_g = Range(sheet_name & "!gamma_gas_").Value2
    PVT.gamma_o = Range(sheet_name & "!gamma_oil_").Value2
    PVT.gamma_w = Range(sheet_name & "!gamma_w_").Value2
    
    PVT.Tres_C = Range(sheet_name & "!Tres_C_").Value2
    Call PVT.SetRpRsb(Range(sheet_name & "!Rp_m3m3_").Value2, Range(sheet_name & "!Rsb_m3m3_").Value2)
    PVT.Pb_atma = Range(sheet_name & "!Pb_atma_").Value2
    
    PVT.PVT_CORRELATION = Range(sheet_name & "!PVT_correlation_").Value2
    
    PVT.Qliq_scm3day = Range(sheet_name & "!Ql_scm3day_").Value2
    PVT.wc_perc = Range(sheet_name & "!wc_perc_").Value2
    PVT.Bob_m3m3 = Range(sheet_name & "!Bob_m3m3_").Value2
    PVT.Muob_cP = Range(sheet_name & "!mu_cP_").Value2
    ' считываем Ksep и при необходимости модифицируем флюид
    Ksep = Range(sheet_name & "!Ksep_").Value2
    Psep = Range(sheet_name & "!Psep_atma_").Value2
    Tsep = Range(sheet_name & "!Tsep_C_").Value2
    If Ksep > 0 And Ksep <= 1 And Psep > 0 And Tsep > 0 Then
        Call PVT.ModifyFluidTubPVTafterSeparation(Psep, Tsep, Ksep, GasGoesIntoSolution)
    End If
    Set well.Fluid = PVT
End Sub
'Private Sub LoadWell(well As CWell)
'
'    Hperf_ = Range("Hperf_m_").Value2
'    Htub_ = Range("Htub_m_").Value2
'    dcas_ = Range("dcas_mm_").Value2
'    dtub_ = Range("dtub_mm_").Value2
'    dchoke_ = Range("dchoke_mm_").Value2
'    tbh_ = Range("Tbh_C_").Value2
'    twh_ = Range("Twh_C_").Value2
'
'
'    Set Incl_Hmes_ = Range("Hmes_Incl_m_")
'    Set Incl_Hvert_ = Range("Hvert_Incl_m_")
'    Call well.InitWellRange(Incl_Hmes_, Incl_Hvert_, Hperf_, Htub_, dcas_, dtub_, tbh_, twh_)
'
'    well.HFlowCorrelation = hydrCorr
'    well.TempCorrelation = StartEndTemp ' AmbientTemp
'
'    well.choke.Dchoke_m = dchoke_ / 1000
'    well.choke.Ddown_m = dtub_ / 1000
'    well.choke.Dup_m = dtub_ / 1000
'
'    Pbuf_ = Range("Pbuf_atma_").Value2
'
'End Sub
Private Sub LoadWellAll(well As CWell)
    Hperf_ = Range("Hperf_m_").Value2
    Htub_ = Range("Htub_m_").Value2
    dcas_ = Range("dcas_mm_").Value2
    dtub_ = Range("dtub_mm_").Value2
    dchoke_ = Range("dchoke_mm_").Value2
    tbh_ = Range("Tbh_C_").Value2
    twh_ = Range("Twh_C_").Value2
    
 
    Set Incl_Hmes_ = Range("Hmes_Incl_m_")
    Set Incl_Hvert_ = Range("Hvert_Incl_m_")
    
    Call well.InitWellConstruction(Hperf_, Htub_, _
                                   hmes_incl_range_m_:=Range("Hmes_Incl_m_"), _
                                   hvert_incl_range_m_:=Range("Hvert_Incl_m_"), _
                                   hmes_dcas_range_m_:=Range("hmes_dcas_m_"), _
                                   dcas_range_mm_:=Range("dcas_arr_mm_"), _
                                   hmes_dtub_range_m_:=Range("hmes_dtub_m_"), _
                                   dtub_range_mm_:=Range("dtub_arr_mm_") _
                                   )
    Call well.InitWellTemperature(hmes_tamb_arr_m_:=Range("hmes_tamb_m_"), _
                                   tamb_arr_C_:=Range("tamb_C_"))
    
                            
                        
    well.HFlowCorrelation = Range("correlation_MF_fontan_").Value2
    well.Fluid.PVT_CORRELATION = Range("correlation_PVT_fontan_").Value2
    well.TempCorrelation = Range("correlation_T_fontan_").Value2
    
'    If well.TempCorrelation = StartEndTemp Then
'        Call well.InitTempLinear(tbh_, twh_)
'    End If
'   well.FastCalc = False
    
    well.choke.Dchoke_m = dchoke_ / 1000
    well.choke.Ddown_m = dtub_ / 1000
    well.choke.Dup_m = dtub_ / 1000
    
    Pbuf_ = Range("Pbuf_atma_").Value2
    Pcas_ = Range("Pcas_atma_").Value2
    Call well.Set_Pcas(Pcas_)
    
    Call ReadMes
    
    numpt = Range("hmes_tamb_out_m_").Rows.Count
 '   well.AmbientForm.AmbTempCurve.xName = "hmes tamb"
 '   well.AmbientForm.AmbTempCurve.yName = "tamb"
 '   Call well.AmbientForm.AmbTempCurve.ClonePointsToNum(NumPt).WriteToVertRange(Range("hmes_tamb_out_m_"), Range("tamb_out_C_"))
    
    
    
    well.betta_grav = [betta_grav_].Value2
    well.betta_fric = [betta_fric_].Value2
End Sub
Sub Button_calc_from_bottom()
' чтение данных по скважине с ”Ё÷Ќ
    
    Dim well As CWell
    Dim PVT As CPVT
    
    getLogObject.ClearAll
    addLogMsg_debug "запуск расчета снизу вверх"
    
    Set well = NewWell()
    Call LoadPVT(well)
    Call LoadWellAll(well)
    
    Pwf_ = Range("Pwf_atma_").Value2
    tbh_ = Range("Tbh_C_").Value2
    'Dim i As Integer
    ' прочитаем все про ”Ё÷Ќ
    Dim ESP As CESPsystemSimple
    Set ESP = NewESPsys()
     
    ESP_ID = Range("ESP_ID_").Value2
    Set ESP.ESPpump = getESP(ESP_ID)
    ESP.ESPpump.StageNum = Range("ESP_stages_").Value2
    ESP.ESPpump.freq_Hz = Range("ESP_freq_").Value2
    ESP.HmesTop_m = Range("Hpump_").Value2
    Set ESP.Fluid = well.Fluid
    Set well.ESP = ESP
    addLogMsg_debug "все прочитали"
    tt = Timer
    
    'For i = 1 To 100
    well.isCalcCasing = True
    Call well.Calc_Plin_Pwf_atma(Pwf_, saveCurve:=allCurves)
    'Next i
    addLogMsg_debug "все подсчитали ", Str((Timer - tt))
    'MsgBox (Timer - tt)
    Call ResPlot(well)
    
    addLogMsg_debug "все записали ", Str((Timer - tt))
    getLogObject.SaveToFile
End Sub
Sub Button_calc_from_top()
' чтение данных по фонтанных скважинах
    
    getLogObject.ClearAll
    addLogMsg_debug "запуск расчета cверху вниз"
    tt = Timer
    Dim well As CWell
        
    Set well = NewWell()
    Call LoadPVT(well)
    Call LoadWellAll(well)
        ' прочитаем все про ”Ё÷Ќ
    Dim ESP As CESPsystemSimple
    Set ESP = NewESPsys()
     
    ESP_ID = Range("ESP_ID_").Value2
    Set ESP.ESPpump = getESP(ESP_ID)
    ESP.ESPpump.StageNum = Range("ESP_stages_").Value2
    ESP.ESPpump.freq_Hz = Range("ESP_freq_").Value2
    ESP.HmesTop_m = Range("Hpump_").Value2
    Set ESP.Fluid = well.Fluid
    Set well.ESP = ESP
    
    addLogMsg_debug "все прочитали"
    Pbuf_ = Range("Pline_atma_").Value2
    tbh_ = Range("Tbh_C_").Value2
    well.isCalcCasing = True
    Call well.Calc_Pwf_Plin_atma(Pbuf_, tbh_, fast:=True, saveCurve:=allCurves)
    
    addLogMsg_debug "все подсчитали ", Str((Timer - tt))
    Call ResPlot(well)
    
    addLogMsg_debug "все записали ", Str((Timer - tt))
    getLogObject.SaveToFile
    
End Sub
Private Sub ResPlot(well As CWell)
    numpt = Range("Tout_Hmes_m_").Rows.Count
    Call well.Curve(str_PtubHmes_curve).WriteToRange(Range("Pout_Hmes_m_"), Range("Pout_atma_"), numpt)
    Call well.Curve(str_TtubHmes_curve).WriteToRange(Range("Tout_Hmes_m_"), Range("Tout_C_"), numpt)
    Call well.Curve(str_HlHmes_curve).WriteToRange(Range("Hlout_Hmes_m_"), Range("Hlout_"), numpt)
    Call well.Curve(str_TambHmes_curve).WriteToRange(Range("hmes_tamb_out_m_"), Range("tamb_out_C_"), numpt)
    Call well.Curve(str_PcasHmes_curve).WriteToRange(Range("Pcas_hmes_"), Range("Pcas_out_atma_"), numpt)
    [Pline_out_atma_] = well.Pline_atma
    [Pbuf_out_atma_] = well.Pbuf_atma
    [Pwf_out_atma_] = well.Pwf_atma
    [Tline_out_C_] = well.Tline_C
    [Tbuf_out_C_] = well.Twh_C
    [Twf_out_C_] = well.Tbh_C
End Sub
Private Sub LoadMes(ByVal pmes_curve As TInterpolation, ByVal tmes_curve As TInterpolation)
    Call pmes_curve.LoadFromVertRange(Range("Hmes_mes_m_"), Range("P_mes_atma_"))
    Call tmes_curve.LoadFromVertRange(Range("Hmes_mes_m_"), Range("T_mes_C_"))
End Sub
Sub ReadMes()
' процедура чтени€ данных замеров давлени€ и температуры и подготовки дл€ отображени€
    Dim pmes_curve As TInterpolation
    Dim tmes_curve As TInterpolation
    
    Set pmes_curve = NewCurve()
    Set tmes_curve = NewCurve()
    
    Call LoadMes(pmes_curve, tmes_curve)
    numpt = Range("Hmes_out_").Rows.Count
    Call pmes_curve.WriteToRange(Range("hmes_out_"), Range("Pmes_out_"), numpt)
    Call tmes_curve.WriteToRange(Range("hmes_out_"), Range("tmes_out_"), numpt)
    
    
End Sub
Sub ѕроверка_конструкции_фонтан()
    Dim incl_curve As TInterpolation
    Dim incl1_curve As TInterpolation
    Dim incl_udl_curve As TInterpolation
    Dim tamb_curve As TInterpolation
    Dim dcas_curve As TInterpolation
    Dim dtub_curve As TInterpolation
    
On Error GoTo er1:
    
    Set incl_curve = NewCurve()
    Set incl1_curve = NewCurve()
    Set tamb_curve = NewCurve()
    Set dcas_curve = NewCurve()
    dcas_curve.isStepFunction = True
    Set dtub_curve = NewCurve()
    dtub_curve.isStepFunction = True
    
    
    numpt = Range("hmes_incl_out_m_").Rows.Count
    Call incl_curve.LoadFromVertRange(Range("Hmes_Incl_m_"), Range("Hvert_Incl_m_"))
    Call incl1_curve.LoadFromVertRange(Range("Hmes_Incl_m_"), Range("Hmes_Incl_m_"))
    Set incl_udl_curve = SubtractCurve(incl1_curve, incl_curve)
    
    incl_udl_curve.xName = "hmes"
    incl_udl_curve.yName = "udl"
    Call incl_curve.WriteToRange(Range("hmes_incl_out_m_"), Range("hvert_incl_out_m_"), numpt)
    incl_curve.xName = "hmes"
    incl_curve.yName = "hvert"
    Call incl_udl_curve.WriteToRange(Range("hmes_incl_out_m_"), Range("udl_out_m_"), numpt)
    numpt = Range("hmes_tamb_out_m_").Rows.Count
    Call tamb_curve.LoadFromVertRange(Range("hmes_tamb_m_"), Range("tamb_C_"))
    tamb_curve.xName = "hvert"
    tamb_curve.yName = "tamb"
    Call tamb_curve.WriteToRange(Range("hmes_tamb_out_m_"), Range("tamb_out_C_"), numpt)
    numpt = Range("hmes_dcas_out_m_").Rows.Count
    Call dcas_curve.LoadFromVertRange(Range("hmes_dcas_m_"), Range("dcas_arr_mm_"))
    dcas_curve.xName = "hmes"
    dcas_curve.yName = "dcas"
    Call dcas_curve.WriteToRange(Range("hmes_dcas_out_m_"), Range("dcas_out_mm_"), numpt)
    
    numpt = Range("hmes_dtub_out_m_").Rows.Count
    Call dtub_curve.LoadFromVertRange(Range("hmes_dtub_m_"), Range("dtub_arr_mm_"))
    dtub_curve.xName = "hmes"
    dtub_curve.yName = "dtub"
    Call dtub_curve.WriteToRange(Range("hmes_dtub_out_m_"), Range("dtub_out_mm_"), numpt)
    
    Exit Sub
er1:
    MsgBox "что то не так пошло"
    Resume Next
    
End Sub
