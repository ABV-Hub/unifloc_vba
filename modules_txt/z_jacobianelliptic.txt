''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Cephes Math Library Release 2.8:  June, 2000
'Copyright 1984, 1987, 2000 by Stephen L. Moshier
'
'Contributors:
'    * Sergey Bochkanov (ALGLIB project). Translation from C to
'      pseudocode.
'
'See subroutines comments for additional copyrights.
'
'>>> SOURCE LICENSE >>>
'This program is free software; you can redistribute it and/or modify
'it under the terms of the GNU General Public License as published by
'the Free Software Foundation (www.fsf.org); either version 2 of the
'License, or (at your option) any later version.
'
'This program is distributed in the hope that it will be useful,
'but WITHOUT ANY WARRANTY; without even the implied warranty of
'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'GNU General Public License for more details.
'
'A copy of the GNU General Public License is available at
'http://www.fsf.org/licensing/licenses
'
'>>> END OF LICENSE >>>
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Routines
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Jacobian Elliptic Functions
'
'Evaluates the Jacobian elliptic functions sn(u|m), cn(u|m),
'and dn(u|m) of parameter m between 0 and 1, and real
'argument u.
'
'These functions are periodic, with quarter-period on the
'real axis equal to the complete elliptic integral
'ellpk(1.0-m).
'
'Relation to incomplete elliptic integral:
'If u = ellik(phi,m), then sn(u|m) = sin(phi),
'and cn(u|m) = cos(phi).  Phi is called the amplitude of u.
'
'Computation is by means of the arithmetic-geometric mean
'algorithm, except when m is within 1e-9 of 0 or 1.  In the
'latter case with m close to 1, the approximation applies
'only for phi < pi/2.
'
'ACCURACY:
'
'Tested at random points with u between 0 and 10, m between
'0 and 1.
'
'           Absolute error (* = relative error):
'arithmetic   function   # trials      peak         rms
'   IEEE      phi         10000       9.2e-16*    1.4e-16*
'   IEEE      sn          50000       4.1e-15     4.6e-16
'   IEEE      cn          40000       3.6e-15     4.4e-16
'   IEEE      dn          10000       1.3e-12     1.8e-14
'
' Peak error observed in consistency check using addition
'theorem for sn(u+v) was 4e-16 (absolute).  Also tested by
'the above relation to the incomplete elliptic integral.
'Accuracy deteriorates when u is large.
'
'Cephes Math Library Release 2.8:  June, 2000
'Copyright 1984, 1987, 2000 by Stephen L. Moshier
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub JacobianEllipticFunctions(ByVal U As Double, _
         ByVal M As Double, _
         ByRef SN As Double, _
         ByRef CN As Double, _
         ByRef DN As Double, _
         ByRef ph As Double)
    Dim ai As Double
    Dim B As Double
    Dim phi As Double
    Dim T As Double
    Dim twon As Double
    Dim A() As Double
    Dim C() As Double
    Dim i As Long
    ReDim A(0# To 8#)
    ReDim C(0# To 8#)
    If M < 0.000000001 Then
        T = Sin(U)
        B = Cos(U)
        ai = 0.25 * M * (U - T * B)
        SN = T - ai * B
        CN = B + ai * T
        ph = U - ai
        DN = 1# - 0.5 * M * T * T
        Exit Sub
    End If
    If M >= 0.9999999999 Then
        ai = 0.25 * (1# - M)
        B = CosH(U)
        T = TanH(U)
        phi = 1# / B
        twon = B * SinH(U)
        SN = T + ai * (twon - U) / (B * B)
        ph = 2# * Atn(Exp(U)) - 1.5707963267949 + ai * (twon - U) / B
        ai = ai * T * phi
        CN = phi - ai * (twon - U)
        DN = phi + ai * (twon + U)
        Exit Sub
    End If
    A(0#) = 1#
    B = Sqr(1# - M)
    C(0#) = Sqr(M)
    twon = 1#
    i = 0#
    Do While Abs(C(i) / A(i)) > MachineEpsilon
        If i > 7# Then
            Exit Do
        End If
        ai = A(i)
        i = i + 1#
        C(i) = 0.5 * (ai - B)
        T = Sqr(ai * B)
        A(i) = 0.5 * (ai + B)
        B = T
        twon = twon * 2#
    Loop
    phi = twon * A(i) * U
    Do
        T = C(i) * Sin(phi) / A(i)
        B = phi
        phi = (ArcSin(T) + phi) / 2#
        i = i - 1#
    Loop Until i = 0#
    SN = Sin(phi)
    T = Cos(phi)
    CN = T
    DN = T / Cos(phi - B)
    ph = phi
End Sub

