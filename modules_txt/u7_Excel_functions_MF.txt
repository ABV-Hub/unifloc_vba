'=======================================================================================
'Unifloc 7.13  Lepus                                      khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
'функции для проведения расчетов из интерфейса Excel
'многофазный поток в трубах и элементах инфраструктуры
Option Explicit
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета коэффициента Джоуля Томсона
Public Function MF_CJT_Katm( _
             ByVal p_atma As Double, _
             ByVal t_C As Double, _
    Optional ByVal str_PVT As String = PVT_DEFAULT, _
    Optional ByVal qliq_sm3day As Double = 10, _
    Optional ByVal fw_perc As Double = 0)
' обязательные аргументы функции
' p_atma      - давление, атм
' Т_C         - температура, С.
' опциональные аргументы функции
' str_PVT      - encoded to string PVT properties of fluid
' qliq_sm3day - liquid rate (at surface)
' fw_perc     - water fraction (watercut)
' output - number
'description_end
On Error GoTo err1:
    Dim PVT As New CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.qliq_sm3day = qliq_sm3day
    PVT.fw_perc = fw_perc
    Call PVT.calc_PVT(CDbl(p_atma), CDbl(t_C))
    MF_CJT_Katm = PVT.cJT_Katm
    Exit Function
err1:
    MF_CJT_Katm = -1
    addLogMsg "Error:MF_CJT_Katm:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет объемного расхода газожидкостной смеси
' для заданных термобарических условий
Public Function MF_q_mix_rc_m3day( _
             ByVal qliq_sm3day As Double, _
             ByVal fw_perc As Double, _
             ByVal p_atma As Double, _
             ByVal t_C As Double, _
    Optional ByVal str_PVT As String = "")
' обязательные аргументы функции
' qliq_sm3day- дебит жидкости на поверхности
' fw_perc    - объемная обводненность
' p_atma     - давление, атм
' Т_C        - температура, С.
' опциональные аргументы функции
' str_PVT     - закодированная строка с параметрами PVT.
'              если задана - перекрывает другие значения
' результат  - число - плотность ГЖС, кг/м3.
'description_end
On Error GoTo err1:
    Dim PVT As CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.fw_perc = fw_perc
    PVT.qliq_sm3day = qliq_sm3day
    Call PVT.calc_PVT(p_atma, t_C)
    MF_q_mix_rc_m3day = PVT.q_mix_rc_m3day
    Exit Function
err1:
    MF_q_mix_rc_m3day = -1
    addLogMsg "Error:MF_q_mix_rc_m3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет плотности газожидкостной смеси для заданных  условий
Public Function MF_rho_mix_kgm3( _
             ByVal qliq_sm3day As Double, _
             ByVal fw_perc As Double, _
             ByVal p_atma As Double, _
             ByVal t_C As Double, _
    Optional ByVal str_PVT As String = "")
' обязательные аргументы функции
' qliq_sm3day- дебит жидкости на поверхности
' fw_perc    - объемная обводненность
' p_atma     - давление, атм
' Т_C        - температура, С.
' опциональные аргументы функции
' str_PVT     - закодированная строка с параметрами PVT.
'              если задана - перекрывает другие значения
' результат  - число - плотность ГЖС, кг/м3.
'description_end
On Error GoTo err1:
    Dim PVT As CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.fw_perc = fw_perc
    PVT.qliq_sm3day = qliq_sm3day
    Call PVT.calc_PVT(CDbl(p_atma), CDbl(t_C))
    MF_rho_mix_kgm3 = PVT.rho_mix_rc_kgm3
    Exit Function
err1:
    MF_rho_mix_kgm3 = -1
    addLogMsg "Error:MF_rho_mix_kgm3:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет вязкости газожидкостной смеси
' для заданных термобарических условий
Public Function MF_mu_mix_cP( _
            ByVal qliq_sm3day As Double, _
            ByVal fw_perc As Double, _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
   Optional ByVal str_PVT As String = "")
' обязательные аргументы функции
' qliq_sm3day - дебит жидкости на поверхности
' fw_perc     - объемная обводненность
' p_atma      - давление, атм
' Т_C         - температура, С.
' опциональные аргументы функции
' str_PVT      - закодированная строка с параметрами PVT.
'              если задана - перекрывает другие значения
' результат   - число - вязкость ГЖС, м3/сут.
'description_end
On Error GoTo err1:
    Dim PVT As CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.fw_perc = fw_perc
    PVT.qliq_sm3day = qliq_sm3day
    Call PVT.calc_PVT(CDbl(p_atma), CDbl(t_C))
    MF_mu_mix_cP = PVT.mu_mix_cP
    Exit Function
err1:
    MF_mu_mix_cP = -1
    addLogMsg "Error:MF_mu_mix_cP:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет доли газа в потоке
Public Function MF_gas_fraction_d( _
              ByVal p_atma As Double, _
              ByVal t_C As Double, _
     Optional ByVal fw_perc = 0, _
     Optional ByVal str_PVT As String = PVT_DEFAULT _
                                 )
' обязательные аргументы функции
' p_atma   - давление, атм
' Т_C      - температура, С.
' опциональные аргументы функции
' fw_perc  - обводненность объемная
' str_PVT   - закодированная строка с параметрами PVT.
'            если задана - перекрывает другие значения
' результат - число - доля газа в потоке
'              (расходная без проскальзования)
'description_end
On Error GoTo err1:
    Dim PVT As CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.fw_perc = fw_perc
    Call PVT.calc_PVT(CDbl(p_atma), CDbl(t_C))
    MF_gas_fraction_d = PVT.gas_fraction_d(0)
    Exit Function
err1:
    MF_gas_fraction_d = -1
    addLogMsg "Error:MF_gas_fraction_d:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет давления при котором
' достигается заданная доля газа в потоке
Public Function MF_p_gas_fraction_atma( _
               ByVal FreeGas_d As Double, _
               ByVal t_C As Double, _
               ByVal fw_perc As Double, _
      Optional ByVal str_PVT As String = PVT_DEFAULT)
' обязательные аргументы функции
' FreeGas_d - допустимая доля газа в потоке;
' Т_C       - температура, С;
' fw_perc   - объемная обводненность, проценты %;
' опциональные аргументы функции
' str_PVT    - закодированная строка с параметрами PVT.
'             Если задана - перекрывает другие значения.
' результат - число - давление, атма.
'description_end
On Error GoTo err1:
    Dim PVT As CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.fw_perc = fw_perc
    MF_p_gas_fraction_atma = PVT.p_gas_fraction_atma(FreeGas_d, t_C)
    Exit Function
err1:
    MF_p_gas_fraction_atma = -1
    addLogMsg "Error:MF_p_gas_fraction_atma:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет газового фактора
' при котором достигается заданная доля газа в потоке
Public Function MF_rp_gas_fraction_m3m3( _
                ByVal FreeGas_d As Double, _
                ByVal p_atma As Double, _
                ByVal t_C As Double, _
                ByVal fw_perc As Double, _
       Optional ByVal str_PVT As String = PVT_DEFAULT)
' обязательные аргументы функции
' FreeGas_d  - допустимая доля газа в потоке
' p_atma     - давление, атм
' Т_C        - температура, С.
' fw_perc   - объемная обводненность, проценты %;
' опциональные аргументы функции
' str_PVT     - закодированная строка с параметрами PVT.
'              если задана - перекрывает другие значения
' результат  - число - газовый фактор, м3/м3.
'description_end
On Error GoTo err1:
    Dim PVT As CPVT
    Set PVT = PVT_decode_string(str_PVT)
    PVT.fw_perc = fw_perc
    MF_rp_gas_fraction_m3m3 = PVT.rp_gas_fraction_m3m3(FreeGas_d, p_atma, t_C)
    Exit Function
err1:
    MF_rp_gas_fraction_m3m3 = -1
    addLogMsg "Error:MF_rp_gas_fraction_m3m3:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет натуральной сепарации газа на приеме насоса
Public Function MF_ksep_natural_d( _
             ByVal qliq_sm3day As Double, _
             ByVal fw_perc As Double, _
             ByVal p_intake_atma As Double, _
    Optional ByVal t_intake_C As Double = 50, _
    Optional ByVal d_intake_mm As Double = 90, _
    Optional ByVal d_cas_mm As Double = 120, _
    Optional ByVal str_PVT As String = PVT_DEFAULT)
'----------------------------------------------------------------
' qliq_sm3day   - дебит жидкости в поверхностных условиях
' fw_perc       - обводненность
' p_intake_atma      - давление сепарации
' t_intake_C         - температура сепарации
' d_intake_mm    - диаметр приемной сетки
' d_cas_mm       - диаметр эксплуатационной колонны
' str_PVT    - закодированная строка с параметрами PVT.
'             если задана - перекрывает другие значения
' результат     - число - естественная сепарация
'description_end
On Error GoTo err1:
    Dim fluid As New CPVT
    Set fluid = PVT_decode_string(str_PVT)
    fluid.qliq_sm3day = qliq_sm3day
    fluid.fw_perc = fw_perc
    Call fluid.calc_PVT(p_intake_atma, t_intake_C)
    With fluid
        MF_ksep_natural_d = unf_calc_natural_separation(d_intake_mm / 1000, d_cas_mm / 1000, .qliq_sm3day, .q_gas_sm3day, .bo_m3m3, .bg_m3m3, .sigma_oil_gas_Nm, .rho_oil_sckgm3, .rho_gas_sckgm3, .fw_perc)
    End With
    Exit Function
err1:
    MF_ksep_natural_d = -1
    addLogMsg "Error:MF_ksep_natural_d:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет общей сепарации на приеме насоса
Public Function MF_ksep_total_d( _
        ByVal SepNat As Double, _
        ByVal SepGasSep As Double)
' SepNat        - естественная сепарация
' SepGasSep     - искусственная сепарация (газосепаратор)
    MF_ksep_total_d = SepNat + (1 - SepNat) * SepGasSep
End Function
'description_end
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'расчет градиента давления
'с использованием многофазных корреляций
Public Function MF_dpdl_atmm(ByVal d_m As Double, _
             ByVal p_atma As Double, _
             ByVal Ql_rc_m3day As Double, _
             ByVal Qg_rc_m3day As Double, _
    Optional ByVal mu_oil_cP As Double = const_mu_o, _
    Optional ByVal mu_gas_cP As Double = const_mu_g, _
    Optional ByVal sigma_oil_gas_Nm As Double = const_sigma_oil_Nm, _
    Optional ByVal gamma_oil As Double = const_go_, _
    Optional ByVal gamma_gas As Double = const_gg_, _
    Optional ByVal eps_m As Double = 0.0001, _
    Optional ByVal theta_deg As Double = 90, _
    Optional ByVal ZNLF As Boolean = False)
' расчет градиента давления по одной из корреляций
' объемные коэффициенты по умолчанию
' заданы равными единицам - если их не трогать,
' значит дебиты в рабочих условиях
' газосодержание равно нулю по умолчанию
'  - значит весь газ который указан идет в потоке
' пока только для Ансари - потом можно
' распространить и на другие методы
' d_m - диаметр трубы в которой идет поток
' p_atma - давление в точке расчета
' Ql_rc_m3day - дебит жидкости в рабочих условиях
' Qg_rc_m3day - дебит газа в рабочих условиях
' mu_oil_cP - вязкость нефти в рабочих условиях
' mu_gas_cP - вязкость газа в рабочих условиях
' sigma_oil_gas_Nm - поверхностное натяжение
'              жидкость газ
' gamma_oil - удельная плотность нефти
' gamma_gas - удельная плотность газа
' eps_m    - шероховатость
' theta_deg - угол от горизонтали
' ZNLF  - флаг для расчета барботажа
'description_end
    Dim rho_osc_kgm3 As Double
    Dim rho_gsc_kgm3 As Double
    Dim dPdLg_out_atmm As Double
    Dim dPdLf_out_atmm As Double
    Dim Vsl_out_msec As Double
    Dim Vsg_out_msec As Double
    Dim Hl_out_fr As Double
    Dim fpat_out_num
    Dim dPdLa_out_atmm As Double
    Dim PrGrad
    
On Error GoTo er1:
    rho_osc_kgm3 = gamma_oil * const_rho_ref
    rho_gsc_kgm3 = gamma_gas * const_rho_air
    PrGrad = unf_AnsariGradient(d_m, theta_deg, eps_m, _
                                Ql_rc_m3day, Qg_rc_m3day, _
                                mu_oil_cP, mu_gas_cP, _
                                sigma_oil_gas_Nm, _
                                rho_osc_kgm3, _
                                rho_gsc_kgm3, _
                                p_atma)
    MF_dpdl_atmm = PrGrad
    Exit Function
er1:
    MF_dpdl_atmm = -1
    addLogMsg "Error:MF_dpdl_atmm:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'  подбор параметров потока через трубу при известном
'  перепаде давления с использованием многофазных корреляций
Public Function MF_calibr_pipe_m3day( _
        ByVal qliq_sm3day As Double, _
        ByVal fw_perc As Double, _
        ByVal length_m As Double, _
        ByVal pin_atma As Double, _
        ByVal pout_atma As Double, _
        Optional ByVal str_PVT As String = PVT_DEFAULT, _
        Optional ByVal theta_deg As Double = 90, _
        Optional ByVal d_mm As Double = 60, _
        Optional ByVal hydr_corr As H_CORRELATION = 0, _
        Optional ByVal t_in_C As Double = 50, _
        Optional ByVal t_out_C As Double = -1, _
        Optional ByVal c_calibr_grav = 1, _
        Optional ByVal c_calibr_fric = 1, _
        Optional ByVal roughness_m As Double = 0.0001, _
        Optional ByVal calibr_type As Integer = 0)
' Обязательные параметры
' qliq_sm3day - дебит жидкости в поверхностных условиях
' fw_perc     - обводненность
' Length_m    - Длина трубы, измеренная, м
' pin_atma    - давление на входе потока в трубу, атм
'               граничное значение для проведения расчета
' pout_atma   - давление на выходе потока из трубы, атм
'               граничное значение для проведения расчета
' Необязательные параметры
' стандартные набор PVT параметров
' str_PVT      - закодированная строка с параметрами PVT.
'               если задана - перекрывает другие значения
' theta_deg   - угол направления потока к горизонтали
'               (90 - вертикальная труба поток вверх
'                -90 - вертикальная труба поток вниз)
'               может принимать отрицательные значения
' d_mm        - внутрнний диаметр трубы
' hydr_corr    - гидравлическая корреляция, H_CORRELATION
'                  BeggsBrill = 0
'                  Ansari = 1
'                  Unified = 2
'                  Gray = 3
'                  HagedornBrown = 4
'                  SakharovMokhov = 5
' t_in_C       - температура на входе потока в трубу, С
' t_out_C      - температура на выходе потока из трубы, С
'               по умолчанию температура вдоль трубы постоянна
'               если задано то меняется линейно по трубе
' c_calibr_grav  - поправка на гравитационную составляющую
'               перепада давления
' c_calibr_fric  - поправка на трение в перепаде давления
' roughness_m - шероховатость трубы
' calibr_type - тип калибровки
'             0 - подбор параметра c_calibr_grav
'             1 - подбор параметра c_calibr_fric
'             2 - подбор газового фактор
'             3 - подбор обводненности
' результат   - число - давление на другом конце трубы atma.
'description_end
    
    
    Dim pipe As New CPipe
    Dim PTin As PTtype, PTout As PTtype
    Dim TM As TEMP_CALC_METHOD
    Dim prm As New CSolveParam
    Dim coeffA(0 To 2)
On Error GoTo err1:
    
    length_m = Abs(length_m) ' length must be positive
    
    If length_m = 0 Then ' check trivial initial data
        MF_calibr_pipe_m3day = "error. length_m = 0"
        Exit Function
    End If
    
    Set pipe.fluid = PVT_decode_string(str_PVT) ' initialize PVT properties
    With pipe.fluid
    
        .qliq_sm3day = qliq_sm3day ' set liquid rate and watercut
        .fw_perc = fw_perc
    End With
    ' initialize boundary conditions
    If t_out_C < 0 Then t_out_C = t_in_C
'    ' initialize geometry
    Call pipe.init_pipe(d_mm, length_m, theta_deg, roughness_m)
    With pipe
        .param = set_calc_flow_param(calc_along_coord:=False, _
                                             flow_along_coord:=False, _
                                             hcor:=hydr_corr, _
                                             temp_method:=StartEndTemp)
        .InitTlinear t_in_C, t_out_C
        .c_calibr_grav = c_calibr_grav
    End With
    ' prepare solution function
    Set coeffA(0) = pipe
        coeffA(1) = pin_atma
        coeffA(2) = pout_atma
    Dim func As String
    Dim val_min As Double, val_max As Double
    Select Case calibr_type
        Case 0
            func = "calc_pipe_dp_error_calibr_grav_atm"
            val_min = 0.5
            val_max = 1.5
        Case 1
            func = "calc_pipe_dp_error_calibr_fric_atm"
            val_min = 0.5
            val_max = 1.5
        Case 2
            func = "calc_pipe_dp_error_rp_atm"
            val_min = pipe.fluid.rp_m3m3 * 0.5
            val_max = pipe.fluid.rp_m3m3 * 2
        Case 3
            func = "calc_pipe_dp_error_fw_atm"
            val_min = pipe.fluid.fw_fr * 0.5
            val_max = pipe.fluid.fw_fr * 2
            If val_max > 1 Then val_max = 1
    End Select
    If solve_equation_bisection(func, val_min, val_max, coeffA, prm) Then
        MF_calibr_pipe_m3day = Array(prm.x_solution, _
                                     prm.y_solution, _
                                     prm.iterations, _
                                     prm.msg)
        
    Else
       MF_calibr_pipe_m3day = Array("no solution", _
                                    prm.y_solution, _
                                    prm.iterations, _
                                    prm.msg)
    End If
    
    Exit Function
err1:
    MF_calibr_pipe_m3day = Array(-1, "error")
    addLogMsg "Error:MF_calibr_pipe_m3day:" & Err.Description
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'  подбор параметров потока через трубу при известном
'  перепаде давления с использованием многофазных корреляций
Public Function MF_fit_pipe_m3day( _
        ByVal qliq_sm3day As Double, _
        ByVal fw_perc As Double, _
        ByVal length_m As Double, _
        ByVal pcalc_atma As Double, _
        ByVal calc_along_flow As Boolean, _
        Optional ByVal str_PVT As String = PVT_DEFAULT, _
        Optional ByVal theta_deg As Double = 90, _
        Optional ByVal d_mm As Double = 60, _
        Optional ByVal hydr_corr As H_CORRELATION = 0, _
        Optional ByVal t_in_C As Double = 50, _
        Optional ByVal t_out_C As Double = -1, _
        Optional ByVal c_calibr_grav = 1, _
        Optional ByVal c_calibr_fric = 1, _
        Optional ByVal roughness_m As Double = 0.0001, _
        Optional ByVal calibr_type As Integer = 0)
' Обязательные параметры
' qliq_sm3day - дебит жидкости в поверхностных условиях
' fw_perc     - обводненность
' Length_m    - Длина трубы, измеренная, м
' calc_along_flow - флаг направления расчета относительно потока
'     если = 1 то расчет по потоку
'     если = 0 то расчет против потока
' Pcalc_atma  - давление с которого начинается расчет, атм
'               граничное значение для проведения расчета
' str_PVT      - закодированная строка с параметрами PVT.
'               если задана - перекрывает другие значения
' theta_deg   - угол направления потока к горизонтали
'               (90 - вертикальная труба поток вверх
'                -90 - вертикальная труба поток вниз)
'               может принимать отрицательные значения
' d_mm        - внутрнний диаметр трубы
' hydr_corr    - гидравлическая корреляция, H_CORRELATION
'                  BeggsBrill = 0
'                  Ansari = 1
'                  Unified = 2
'                  Gray = 3
'                  HagedornBrown = 4
'                  SakharovMokhov = 5
' t_in_C       - температура на входе потока в трубу, С
' t_out_C      - температура на выходе потока из трубы, С
'               по умолчанию температура вдоль трубы постоянна
'               если задано то меняется линейно по трубе
' c_calibr_grav  - поправка на гравитационную составляющую
'               перепада давления
' c_calibr_fric  - поправка на трение в перепаде давления
' roughness_m - шероховатость трубы
' calibr_type - тип калибровки
'             0 - подбор параметра c_calibr_grav
'             1 - подбор параметра c_calibr_fric
'             2 - подбор газового фактор
'             3 - подбор обводненности
' результат   - число - давление на другом конце трубы atma.
'description_end
    
    
    Dim pipe As New CPipe
    Dim PTin As PTtype, PTout As PTtype
    Dim TM As TEMP_CALC_METHOD
    Dim prm As New CSolveParam
    Dim coeffA(0 To 2)
On Error GoTo err1:
    
    Exit Function
err1:
    MF_fit_pipe_m3day = Array(-1, "error")
    addLogMsg "Error:MF_fit_pipe_m3day:" & Err.Description
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'  расчет распределения давления и температуры в трубопроводе
'  с использованием многофазных корреляций
Public Function MF_p_pipeline_atma( _
                 ByVal qliq_sm3day As Double, _
                 ByVal fw_perc As Double, _
                 ByVal h_list_m As Variant, _
                 ByVal pcalc_atma As Double, _
        Optional ByVal tcalc_C As Double = 50, _
        Optional ByVal calc_along_coord As Boolean = False, _
        Optional ByVal flow_along_coord As Boolean = False, _
        Optional ByVal str_PVT As String = PVT_DEFAULT, _
        Optional ByVal diam_list_mm As Variant, _
        Optional ByVal hydr_corr As H_CORRELATION = 0, _
        Optional ByVal temp_C As Variant, _
        Optional ByVal temp_method As TEMP_CALC_METHOD = StartEndTemp, _
        Optional ByVal c_calibr_grav = 1, _
        Optional ByVal c_calibr_fric = 1, _
        Optional ByVal roughness_m As Double = 0.0001, _
        Optional ByVal q_gas_sm3day As Double = 0)
' Обязательные параметры
' qliq_sm3day - дебит жидкости в поверхностных условиях
' fw_perc     - обводненность
' h_list_m    - траектория трубы. range или таблица [0..N,0..1]
' calc_along_coord - флаг направления расчета относительно потока
'     если = 1 то расчет по потоку
'     если = 0 то расчет против потока
' Pcalc_atma  - давление с которого начинается расчет, атм
'               граничное значение для проведения расчета
' Необязательные параметры
' стандартные набор PVT параметров
' str_PVT      - закодированная строка с параметрами PVT.
'               если задана - перекрывает другие значения
' d_mm        - внутрнний диаметр трубы
' hydr_corr    - гидравлическая корреляция, H_CORRELATION
'                  BeggsBrill = 0
'                  Ansari = 1
'                  Unified = 2
'                  Gray = 3
'                  HagedornBrown = 4
'                  SakharovMokhov = 5
' t_calc_C     - температура в точке где задано давление, С
' Tother_C    - температура на другом конце трубы
'               по умолчанию температура вдоль трубы постоянна
'               если задано то меняется линейно по трубе
' c_calibr_grav  - поправка на гравитационную составляющую
'               перепада давления
' c_calibr_fric  - поправка на трение в перепаде давления
' roughness_m - шероховатость трубы
' q_gas_sm3day - свободный газ поступающие в трубу.
' результат   - число - давление на другом конце трубы atma.
'description_end
    Dim pipe As New CPipe
    Dim PVT As New CPVT
    Dim PTcalc As PTtype
    Dim TM As TEMP_CALC_METHOD
    Dim angle As Double
    Dim tr As New CPipeTrajectory
    Dim amb As New CAmbientFormation
    Dim temp_crv As New CInterpolation
On Error GoTo err1:
    
    
    Call tr.init_from_vert_range(h_list_m, diam_list_mm)
    
    Call pipe.init_pipe_constr_by_trajectory(tr)
   
    
    Set PVT = PVT_decode_string(str_PVT) ' initialize PVT properties
    
    PVT.qliq_sm3day = qliq_sm3day ' set liquid rate and watercut
    PVT.fw_perc = fw_perc
    PVT.q_gas_free_sm3day = q_gas_sm3day
    Set pipe.fluid = PVT
    
    pipe.param = set_calc_flow_param(calc_along_coord, _
                                     flow_along_coord, _
                                     hcor:=hydr_corr, _
                                     temp_method:=StartEndTemp)
    pipe.InitTlinear tcalc_C, tcalc_C
    pipe.t_calc_C = tcalc_C
    
    If Not IsMissing(temp_C) Then
        Call temp_crv.load_from_range(temp_C)
        Set amb.amb_temp_curve = temp_crv
        Set pipe.ambient_formation = amb
        pipe.param.temp_method = temp_method
    End If
    
    ' set calibration properties
    pipe.c_calibr_grav = c_calibr_grav
    pipe.c_calibr_fric = c_calibr_fric
    ' calc pressure distribution
    Dim res(), res1()
    res1 = PT_to_array(pipe.calc_dPipe(pcalc_atma, tcalc_C, allCurves))
    
    res = pipe.array_out
    res(0, 0) = res1(0)
    MF_p_pipeline_atma = res
    Exit Function
err1:
    MF_p_pipeline_atma = Array(-1, "error")
    addLogMsg "Error:MF_p_pipeline_atma:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'  расчет распределения давления и температуры в трубе
'  с использованием многофазных корреляций
Public Function MF_p_pipe_atma( _
        ByVal qliq_sm3day As Double, _
        ByVal fw_perc As Double, _
        ByVal length_m As Double, _
        ByVal pcalc_atma As Double, _
        ByVal calc_along_flow As Boolean, _
        Optional ByVal str_PVT As String = PVT_DEFAULT, _
        Optional ByVal theta_deg As Double = 90, _
        Optional ByVal d_mm As Double = 60, _
        Optional ByVal hydr_corr As H_CORRELATION = 0, _
        Optional ByVal t_calc_C As Double = 50, _
        Optional ByVal tother_C As Double = -1, _
        Optional ByVal c_calibr_grav = 1, _
        Optional ByVal c_calibr_fric = 1, _
        Optional ByVal roughness_m As Double = 0.0001, _
        Optional ByVal q_gas_sm3day As Double = 0)
' Обязательные параметры
' qliq_sm3day - дебит жидкости в поверхностных условиях
' fw_perc     - обводненность
' Length_m    - Длина трубы, измеренная, м
' calc_along_flow - флаг направления расчета относительно потока
'     если = 1 то расчет по потоку
'     если = 0 то расчет против потока
' Pcalc_atma  - давление с которого начинается расчет, атм
'               граничное значение для проведения расчета
' Необязательные параметры
' стандартные набор PVT параметров
' str_PVT      - закодированная строка с параметрами PVT.
'               если задана - перекрывает другие значения
' theta_deg   - угол направления потока к горизонтали
'               (90 - вертикальная труба поток вверх
'                -90 - вертикальная труба поток вниз)
'               может принимать отрицательные значения
' d_mm        - внутрнний диаметр трубы
' hydr_corr    - гидравлическая корреляция, H_CORRELATION
'                  BeggsBrill = 0
'                  Ansari = 1
'                  Unified = 2
'                  Gray = 3
'                  HagedornBrown = 4
'                  SakharovMokhov = 5
' t_calc_C     - температура в точке где задано давление, С
' Tother_C    - температура на другом конце трубы
'               по умолчанию температура вдоль трубы постоянна
'               если задано то меняется линейно по трубе
' c_calibr_grav  - поправка на гравитационную составляющую
'               перепада давления
' c_calibr_fric  - поправка на трение в перепаде давления
' roughness_m - шероховатость трубы
' q_gas_sm3day - свободный газ поступающие в трубу.
' результат   - число - давление на другом конце трубы atma.
'description_end
    Dim pipe As New CPipe
    Dim PVT As New CPVT
    Dim PTcalc As PTtype
    Dim TM As TEMP_CALC_METHOD
On Error GoTo err1:
    length_m = Abs(length_m)     ' length must be positive
    If length_m = 0 Then
        MF_p_pipe_atma = Array(pcalc_atma, t_calc_C)
        Exit Function
    End If
    Set PVT = PVT_decode_string(str_PVT)
    PVT.qliq_sm3day = qliq_sm3day
    PVT.fw_perc = fw_perc
    PVT.q_gas_free_sm3day = q_gas_sm3day
    Set pipe.fluid = PVT
    If tother_C < 0 Then tother_C = t_calc_C
    ' initialize geometry
    Call pipe.init_pipe(d_mm, length_m, theta_deg, roughness_m)
    ' check flow direction
    ' Pcalc and Tcalc position depends on calc_along_flow
    pipe.param = set_calc_flow_param(calc_along_coord:=Not calc_along_flow, _
                                     flow_along_coord:=theta_deg < 0, _
                                     hcor:=hydr_corr, _
                                     temp_method:=StartEndTemp)
    If calc_along_flow Then
        pipe.InitTlinear tother_C, t_calc_C
    Else
        pipe.InitTlinear t_calc_C, tother_C
    End If
    ' set calibration properties
    pipe.c_calibr_grav = c_calibr_grav
    pipe.c_calibr_fric = c_calibr_fric
    ' calc pressure distribution
    MF_p_pipe_atma = PT_to_array(pipe.calc_dPipe(pcalc_atma, , nocurves))
    Exit Function
err1:
    MF_p_pipe_atma = Array(-1, "error")
    addLogMsg "Error:MF_p_pipe_atma:" & Err.Description
End Function
' ==============  функции для расчета штуцера ==========================
' =====================================================================
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет давления в штуцере
Public Function MF_p_choke_atma( _
            ByVal qliq_sm3day As Double, _
            ByVal fw_perc As Double, _
            ByVal dchoke_mm As Double, _
            Optional ByVal pcalc_atma As Double = -1, _
            Optional ByVal calc_along_flow As Boolean = True, _
            Optional ByVal d_pipe_mm As Double = 70, _
            Optional ByVal t_choke_C As Double = 20, _
            Optional ByVal c_calibr_fr As Double = 1, _
            Optional ByVal str_PVT As String = PVT_DEFAULT _
            )
'@qliq_sm3day   - дебит жидкости в поверхностных условиях
'@fw_perc       - обводненность
'@dchoke_mm     - диаметр штуцера (эффективный)
''опциональные аргументы функции
'@pcalc_atma    - давление с которого начинается расчет, атм
'                 граничное значение для проведения расчета
'                 либо давление на входе, либое на выходе
'@calc_along_flow - флаг направления расчета относительно потока
'     если = 1 то расчет по потоку
'     ищется давление на выкиде по известному давлению на входе,
'     ищется линейное давление по известному буферному
'     если = 0 то расчет против потока
'     ищется давление на входе по известному давлению на выходе,
'     ищется буферное давление по известному линейному
'@d_pipe_mm      - диаметр трубы до и после штуцера
'@t_choke_C      - температура, С.
'@c_calibr_fr   - поправочный коэффициент на штуцер
'                 1 - отсутсвие поправки
'                 Q_choke_real = c_calibr_fr * Q_choke_model
'@str_PVT        - закодированная строка с параметрами PVT.
'                 если задана - перекрывает другие значения
''результат     - число - давления на штуцере на расчетной стороне.
''                массив значений с параметрами штуцера
'description_end
On Error GoTo err1:
    Dim choke As New Cchoke
    Dim pt As PTtype
    Dim PVT As CPVT
    Dim out, out_desc
    Dim p_in_atma As Double
    Dim p_out_atma As Double
    
    
    Set PVT = PVT_decode_string(str_PVT)
    Set choke.fluid = PVT
    choke.fluid.qliq_sm3day = qliq_sm3day
    choke.fluid.fw_perc = fw_perc
    choke.d_down_m = d_pipe_mm / 1000
    choke.d_up_m = d_pipe_mm / 1000
    choke.d_choke_m = dchoke_mm / 1000
    choke.c_calibr_fr = c_calibr_fr
    
    If calc_along_flow Then
        p_in_atma = pcalc_atma
        pt = choke.calc_choke_p_lin(set_PT(p_in_atma, t_choke_C))
        out = pt.p_atma
        p_out_atma = out
        out_desc = "Pout, atma"
    Else
        p_out_atma = pcalc_atma
        pt = choke.calc_choke_p_buf(set_PT(p_out_atma, t_choke_C))
        out = pt.p_atma
        p_in_atma = out
        out_desc = "Pin, atma"
    End If
    MF_p_choke_atma = Array(Array(out, p_in_atma, p_out_atma, t_choke_C, choke.c_calibr_fr), _
                           Array(out_desc, "p_intake_atma", "p_out_atma", "t_choke_C", "c_calibr_fr"))  ' на выходе выдаем массив
    Exit Function
err1:
    MF_p_choke_atma = -1
    addLogMsg "Error:MF_p_choke_atma:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет корректирующего фактора (множителя) модели штуцера под замеры
Public Function MF_calibr_choke_fr( _
            ByVal qliq_sm3day As Double, _
            ByVal fw_perc As Double, _
            ByVal dchoke_mm As Double, _
            Optional ByVal p_in_atma As Double = -1, _
            Optional ByVal p_out_atma As Double = -1, _
            Optional ByVal d_pipe_mm As Double = 70, _
            Optional ByVal t_choke_C As Double = 20, _
            Optional ByVal str_PVT As String = PVT_DEFAULT _
            )
' qliq_sm3day    - дебит жидкости в пов условиях
' fw_perc       - обводненность
' dchoke_mm     - диаметр штуцера (эффективный)
' опциональные аргументы функции
' p_in_atma      - давление на входе (высокой стороне)
' p_out_atma     - давление на выходе (низкой стороне)
' d_pipe_mm      - диаметр трубы до и после штуцера
' t_choke_C      - температура, С.
' str_PVT        - закодированная строка с параметрами PVT.
'                 если задана - перекрывает другие значения
' результат     - число - калибровочный коэффициент для модели.
'                 штуцера  - множитель на дебит через штуцер
'description_end
On Error GoTo err1:
    Dim choke As New Cchoke
    Dim pt As PTtype
    Dim PVT As CPVT
    Dim out, out_desc
    
    Set PVT = PVT_decode_string(str_PVT)
    Set choke.fluid = PVT
    choke.fluid.qliq_sm3day = qliq_sm3day
    choke.fluid.fw_perc = fw_perc
    choke.d_down_m = d_pipe_mm / 1000
    choke.d_up_m = d_pipe_mm / 1000
    choke.d_choke_m = dchoke_mm / 1000
    
    If p_in_atma > p_out_atma And p_out_atma >= 1 Then
        Call choke.calc_choke_calibration(p_in_atma, p_out_atma, t_choke_C)
        out = choke.c_calibr_fr
        out_desc = "c_calibr_fr"
    End If
    MF_calibr_choke_fr = Array(Array(out, p_in_atma, p_out_atma, t_choke_C, choke.c_calibr_fr), _
                         Array(out_desc, "p_intake_atma", "p_out_atma", "t_choke_C", "c_calibr_fr"))  ' на выходе выдаем массив
    Exit Function
err1:
    MF_calibr_choke_fr = -1
    addLogMsg "Error:MF_calibr_choke_fr:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
 ' функция расчета дебита жидкости через штуцер
 ' при заданном входном и выходном давлениях
Public Function MF_qliq_choke_sm3day( _
        ByVal fw_perc As Double, _
        ByVal dchoke_mm As Double, _
        ByVal p_in_atma As Double, _
        ByVal p_out_atma As Double, _
        Optional ByVal d_pipe_mm As Double = 70, _
        Optional ByVal t_choke_C = 20, _
        Optional ByVal c_calibr_fr As Double = 1, _
        Optional ByVal str_PVT As String = PVT_DEFAULT)
' fw_perc      - обводненность
' dchoke_mm    - диаметр штуцера (эффективный)
' p_in_atma     - давление на входе (высокой стороне)
' p_out_atma    - давление на выходе (низкой стороне)
' опциональные аргументы функции
' d_pipe_mm      - диаметр трубы до и после штуцера
' t_choke_C      - температура, С.
' c_calibr_fr       - поправочный коэффициент на штуцер
'                 1 - отсутсвие поправки (по умолчанию)
'                 Q_choke_real = c_calibr_fr * Q_choke_model
' str_PVT        - закодированная строка с параметрами PVT.
'                 если задана - перекрывает другие значения
'description_end
On Error GoTo err1:
    Dim choke As New Cchoke
    Dim PVT As CPVT
    Dim Qliq As Double
    
    Set PVT = PVT_decode_string(str_PVT)
    Set choke.fluid = PVT
    choke.d_down_m = d_pipe_mm / 1000
    choke.d_up_m = d_pipe_mm / 1000
    choke.d_choke_m = dchoke_mm / 1000
    choke.fluid.fw_perc = fw_perc
    choke.c_calibr_fr = c_calibr_fr
    Qliq = choke.calc_choke_qliq_sm3day(p_in_atma, p_out_atma, t_choke_C)
    
    MF_qliq_choke_sm3day = Array(Array(Qliq, p_in_atma, p_out_atma, t_choke_C, c_calibr_fr), _
                           Array("Qliq", "p_intake_atma", "p_out_atma", "t_choke_C", "c_calibr_fr"))
    Exit Function
err1:
    MF_qliq_choke_sm3day = -1
    addLogMsg "Error:MF_qliq_choke_sm3day:" & Err.Description
End Function

