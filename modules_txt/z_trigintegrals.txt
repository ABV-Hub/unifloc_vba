''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Cephes Math Library Release 2.8:  June, 2000
'Copyright by Stephen L. Moshier
'
'Contributors:
'    * Sergey Bochkanov (ALGLIB project). Translation from C to
'      pseudocode.
'
'See subroutines comments for additional copyrights.
'
'>>> SOURCE LICENSE >>>
'This program is free software; you can redistribute it and/or modify
'it under the terms of the GNU General Public License as published by
'the Free Software Foundation (www.fsf.org); either version 2 of the
'License, or (at your option) any later version.
'
'This program is distributed in the hope that it will be useful,
'but WITHOUT ANY WARRANTY; without even the implied warranty of
'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'GNU General Public License for more details.
'
'A copy of the GNU General Public License is available at
'http://www.fsf.org/licensing/licenses
'
'>>> END OF LICENSE >>>
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Routines
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Sine and cosine integrals
'
'Evaluates the integrals
'
'                         x
'                         -
'                        |  cos t - 1
'  Ci(x) = eul + ln x +  |  --------- dt,
'                        |      t
'                       -
'                        0
'            x
'            -
'           |  sin t
'  Si(x) =  |  ----- dt
'           |    t
'          -
'           0
'
'where eul = 0.57721566490153286061 is Euler's constant.
'The integrals are approximated by rational functions.
'For x > 8 auxiliary functions f(x) and g(x) are employed
'such that
'
'Ci(x) = f(x) sin(x) - g(x) cos(x)
'Si(x) = pi/2 - f(x) cos(x) - g(x) sin(x)
'
'
'ACCURACY:
'   Test interval = [0,50].
'Absolute error, except relative when > 1:
'arithmetic   function   # trials      peak         rms
'   IEEE        Si        30000       4.4e-16     7.3e-17
'   IEEE        Ci        30000       6.9e-16     5.1e-17
'
'Cephes Math Library Release 2.1:  January, 1989
'Copyright 1984, 1987, 1989 by Stephen L. Moshier
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub SineCosineIntegrals(ByVal X As Double, _
         ByRef SI As Double, _
         ByRef CI As Double)
    Dim z As Double
    Dim C As Double
    Dim S As Double
    Dim F As Double
    Dim G As Double
    Dim sg As Long
    Dim SN As Double
    Dim SD As Double
    Dim CN As Double
    Dim CD As Double
    Dim FN As Double
    Dim FD As Double
    Dim GN As Double
    Dim GD As Double
    If X < 0# Then
        sg = -1#
        X = -X
    Else
        sg = 0#
    End If
    If X = 0# Then
        SI = 0#
        CI = -MaxRealNumber
        Exit Sub
    End If
    If X > 1000000000# Then
        SI = 1.5707963267949 - Cos(X) / X
        CI = Sin(X) / X
        Exit Sub
    End If
    If X <= 4# Then
        z = X * X
        SN = -8.39167827910304E-11
        SN = SN * z + 4.62591714427013E-08
        SN = SN * z - 9.75759303843633E-06
        SN = SN * z + 9.76945438170435E-04
        SN = SN * z - 4.13470316229407E-02
        SN = SN * z + 1#
        SD = 2.03269266195952E-12
        SD = SD * z + 1.27997891179943E-09
        SD = SD * z + 4.41827842801219E-07
        SD = SD * z + 9.96412122043876E-05
        SD = SD * z + 0.014208523932615
        SD = SD * z + 1#
        S = X * SN / SD
        CN = 2.02524002389102E-11
        CN = CN * z - 1.35249504915791E-08
        CN = CN * z + 3.59325051419993E-06
        CN = CN * z - 4.74007206873408E-04
        CN = CN * z + 2.89159652607555E-02
        CN = CN * z - 1#
        CD = 4.07746040061881E-12
        CD = CD * z + 3.06780997581888E-09
        CD = CD * z + 1.23210355685883E-06
        CD = CD * z + 3.17442024775033E-04
        CD = CD * z + 5.10028056236446E-02
        CD = CD * z + 4#
        C = z * CN / CD
        If sg <> 0# Then
            S = -S
        End If
        SI = S
        CI = 0.577215664901533 + Log(X) + C
        Exit Sub
    End If
    S = Sin(X)
    C = Cos(X)
    z = 1# / (X * X)
    If X < 8# Then
        FN = 4.23612862892217
        FN = FN * z + 5.45937717161813
        FN = FN * z + 1.62083287701538
        FN = FN * z + 0.167006611831323
        FN = FN * z + 6.81020132472518E-03
        FN = FN * z + 1.08936580650329E-04
        FN = FN * z + 5.48900223421374E-07
        FD = 1#
        FD = FD * z + 8.16496634205391
        FD = FD * z + 7.30828822505565
        FD = FD * z + 1.86792257950184
        FD = FD * z + 0.17879205296315
        FD = FD * z + 7.0171066832279E-03
        FD = FD * z + 1.10034357153916E-04
        FD = FD * z + 5.48900252756256E-07
        F = FN / (X * FD)
        GN = 8.71001698973114E-02
        GN = GN * z + 0.611379109952219
        GN = GN * z + 0.397180296392337
        GN = GN * z + 7.48527737628469E-02
        GN = GN * z + 5.38868681462177E-03
        GN = GN * z + 1.61999794598934E-04
        GN = GN * z + 1.97963874140964E-06
        GN = GN * z + 7.8257904074409E-09
        GD = 1#
        GD = GD * z + 1.64402202413355
        GD = GD * z + 0.666296701268988
        GD = GD * z + 9.88771761277689E-02
        GD = GD * z + 6.22396345441768E-03
        GD = GD * z + 1.73221081474177E-04
        GD = GD * z + 2.02659182086344E-06
        GD = GD * z + 7.82579218933535E-09
        G = z * GN / GD
    Else
        FN = 0.455880873470465
        FN = FN * z + 0.713715274100147
        FN = FN * z + 0.160300158222319
        FN = FN * z + 1.16064229408124E-02
        FN = FN * z + 3.49556442447859E-04
        FN = FN * z + 4.86215430826455E-06
        FN = FN * z + 3.20092790091005E-08
        FN = FN * z + 9.41779576128513E-11
        FN = FN * z + 9.70507110881952E-14
        FD = 1#
        FD = FD * z + 0.917463611873684
        FD = FD * z + 0.178685545332075
        FD = FD * z + 1.22253594771971E-02
        FD = FD * z + 3.58696481881852E-04
        FD = FD * z + 4.92435064317882E-06
        FD = FD * z + 3.21956939101046E-08
        FD = FD * z + 9.43720590350277E-11
        FD = FD * z + 9.70507110881952E-14
        F = FN / (X * FD)
        GN = 0.697359953443276
        GN = GN * z + 0.330410979305632
        GN = GN * z + 3.84878767649974E-02
        GN = GN * z + 1.71718239052348E-03
        GN = GN * z + 3.48941165502279E-05
        GN = GN * z + 3.47131167084117E-07
        GN = GN * z + 1.70404452782045E-09
        GN = GN * z + 3.85945925430277E-12
        GN = GN * z + 3.14040098946363E-15
        GD = 1#
        GD = GD * z + 1.68548898811012
        GD = GD * z + 0.487852258695305
        GD = GD * z + 4.67913194259626E-02
        GD = GD * z + 0.001902844266744
        GD = GD * z + 3.68475504442561E-05
        GD = GD * z + 3.57043223443741E-07
        GD = GD * z + 1.72693748966316E-09
        GD = GD * z + 3.87830166023955E-12
        GD = GD * z + 3.14040098946363E-15
        G = z * GN / GD
    End If
    SI = 1.5707963267949 - F * C - G * S
    If sg <> 0# Then
        SI = -SI
    End If
    CI = F * S - G * C
End Sub
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Hyperbolic sine and cosine integrals
'
'Approximates the integrals
'
'                           x
'                           -
'                          | |   cosh t - 1
'  Chi(x) = eul + ln x +   |    -----------  dt,
'                        | |          t
'                         -
'                         0
'
'              x
'              -
'             | |  sinh t
'  Shi(x) =   |    ------  dt
'           | |       t
'            -
'            0
'
'where eul = 0.57721566490153286061 is Euler's constant.
'The integrals are evaluated by power series for x < 8
'and by Chebyshev expansions for x between 8 and 88.
'For large x, both functions approach exp(x)/2x.
'Arguments greater than 88 in magnitude return MAXNUM.
'
'
'ACCURACY:
'
'Test interval 0 to 88.
'                     Relative error:
'arithmetic   function  # trials      peak         rms
'   IEEE         Shi      30000       6.9e-16     1.6e-16
'       Absolute error, except relative when |Chi| > 1:
'   IEEE         Chi      30000       8.4e-16     1.4e-16
'
'Cephes Math Library Release 2.8:  June, 2000
'Copyright 1984, 1987, 2000 by Stephen L. Moshier
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub HyperbolicSineCosineIntegrals(ByVal X As Double, _
         ByRef Shi As Double, _
         ByRef Chi As Double)
    Dim K As Double
    Dim z As Double
    Dim C As Double
    Dim S As Double
    Dim A As Double
    Dim sg As Long
    Dim b0 As Double
    Dim b1 As Double
    Dim b2 As Double
    If X < 0# Then
        sg = -1#
        X = -X
    Else
        sg = 0#
    End If
    If X = 0# Then
        Shi = 0#
        Chi = -MaxRealNumber
        Exit Sub
    End If
    If X < 8# Then
        z = X * X
        A = 1#
        S = 1#
        C = 0#
        K = 2#
        Do
            A = A * z / K
            C = C + A / K
            K = K + 1#
            A = A / K
            S = S + A / K
            K = K + 1#
        Loop Until Abs(A / S) < MachineEpsilon
        S = S * X
    Else
        If X < 18# Then
            A = (576# / X - 52#) / 10#
            K = Exp(X) / X
            b0 = 1.83889230173399E-17
            b1 = 0#
            Call ChebIterationShiChi(A, -9.55485532279656E-17, b0, b1, b2)
            Call ChebIterationShiChi(A, 2.0432610598088E-16, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.09896949074905E-15, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.31313534344093E-14, b0, b1, b2)
            Call ChebIterationShiChi(A, 5.93976226264314E-14, b0, b1, b2)
            Call ChebIterationShiChi(A, -3.47197010497749E-14, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.40059764613117E-12, b0, b1, b2)
            Call ChebIterationShiChi(A, 9.49044626224224E-12, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.61596181145435E-11, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.7789978443643E-10, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.35455469767247E-09, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.03257121792819E-09, b0, b1, b2)
            Call ChebIterationShiChi(A, -3.56699611114983E-08, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.44818877384267E-07, b0, b1, b2)
            Call ChebIterationShiChi(A, 7.82018215184051E-07, b0, b1, b2)
            Call ChebIterationShiChi(A, -5.39919118403805E-06, b0, b1, b2)
            Call ChebIterationShiChi(A, -3.1245820216896E-05, b0, b1, b2)
            Call ChebIterationShiChi(A, 8.90136741950728E-05, b0, b1, b2)
            Call ChebIterationShiChi(A, 2.02558474743847E-03, b0, b1, b2)
            Call ChebIterationShiChi(A, 2.96064440855633E-02, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.11847751047257, b0, b1, b2)
            S = K * 0.5 * (b0 - b2)
            b0 = -8.12435385225864E-18
            b1 = 0#
            Call ChebIterationShiChi(A, 2.17586413290339E-17, b0, b1, b2)
            Call ChebIterationShiChi(A, 5.22624394924072E-17, b0, b1, b2)
            Call ChebIterationShiChi(A, -9.48812110591691E-16, b0, b1, b2)
            Call ChebIterationShiChi(A, 5.35546311647465E-15, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.21009970113733E-14, b0, b1, b2)
            Call ChebIterationShiChi(A, -6.00865178553447E-14, b0, b1, b2)
            Call ChebIterationShiChi(A, 7.16339649156029E-13, b0, b1, b2)
            Call ChebIterationShiChi(A, -2.934960726076E-12, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.40359438136491E-12, b0, b1, b2)
            Call ChebIterationShiChi(A, 8.76302288609055E-11, b0, b1, b2)
            Call ChebIterationShiChi(A, -4.40092476213282E-10, b0, b1, b2)
            Call ChebIterationShiChi(A, -1.87992075640569E-10, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.31458150989475E-08, b0, b1, b2)
            Call ChebIterationShiChi(A, -4.75513930924765E-08, b0, b1, b2)
            Call ChebIterationShiChi(A, -2.21775018801849E-07, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.94635531373273E-06, b0, b1, b2)
            Call ChebIterationShiChi(A, 4.33505889257316E-06, b0, b1, b2)
            Call ChebIterationShiChi(A, -6.13387001076494E-05, b0, b1, b2)
            Call ChebIterationShiChi(A, -3.13085477492997E-04, b0, b1, b2)
            Call ChebIterationShiChi(A, 4.97164789823116E-04, b0, b1, b2)
            Call ChebIterationShiChi(A, 2.64347496031375E-02, b0, b1, b2)
            Call ChebIterationShiChi(A, 1.11446150876699, b0, b1, b2)
            C = K * 0.5 * (b0 - b2)
        Else
            If X <= 88# Then
                A = (6336# / X - 212#) / 70#
                K = Exp(X) / X
                b0 = -1.05311574154851E-17
                b1 = 0#
                Call ChebIterationShiChi(A, 2.62446095596355E-17, b0, b1, b2)
                Call ChebIterationShiChi(A, 8.82090135625368E-17, b0, b1, b2)
                Call ChebIterationShiChi(A, -3.38459811878103E-16, b0, b1, b2)
                Call ChebIterationShiChi(A, -8.30608026366936E-16, b0, b1, b2)
                Call ChebIterationShiChi(A, 3.9339787543705E-15, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.01765565969729E-14, b0, b1, b2)
                Call ChebIterationShiChi(A, -4.21128170307641E-14, b0, b1, b2)
                Call ChebIterationShiChi(A, -1.60818204519802E-13, b0, b1, b2)
                Call ChebIterationShiChi(A, 3.34714954175994E-13, b0, b1, b2)
                Call ChebIterationShiChi(A, 2.72600352129153E-12, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.66894954752839E-12, b0, b1, b2)
                Call ChebIterationShiChi(A, -3.49278141024731E-11, b0, b1, b2)
                Call ChebIterationShiChi(A, -1.58580661666483E-10, b0, b1, b2)
                Call ChebIterationShiChi(A, -1.79289437183356E-10, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.76281629144265E-09, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.69050228879421E-08, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.25391771228487E-07, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.16229947068677E-06, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.61038260117376E-05, b0, b1, b2)
                Call ChebIterationShiChi(A, 3.49810375601054E-04, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.28478065259648E-02, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.03665722588798, b0, b1, b2)
                S = K * 0.5 * (b0 - b2)
                b0 = 8.06913408255156E-18
                b1 = 0#
                Call ChebIterationShiChi(A, -2.08074168180148E-17, b0, b1, b2)
                Call ChebIterationShiChi(A, -5.98111329658272E-17, b0, b1, b2)
                Call ChebIterationShiChi(A, 2.68533951085946E-16, b0, b1, b2)
                Call ChebIterationShiChi(A, 4.52313941698905E-16, b0, b1, b2)
                Call ChebIterationShiChi(A, -3.10734917335299E-15, b0, b1, b2)
                Call ChebIterationShiChi(A, -4.42823207332532E-15, b0, b1, b2)
                Call ChebIterationShiChi(A, 3.49639695410807E-14, b0, b1, b2)
                Call ChebIterationShiChi(A, 6.63406731718912E-14, b0, b1, b2)
                Call ChebIterationShiChi(A, -3.71902448093119E-13, b0, b1, b2)
                Call ChebIterationShiChi(A, -1.27135418132338E-12, b0, b1, b2)
                Call ChebIterationShiChi(A, 2.74851141935315E-12, b0, b1, b2)
                Call ChebIterationShiChi(A, 2.33781843985453E-11, b0, b1, b2)
                Call ChebIterationShiChi(A, 2.71436006377612E-11, b0, b1, b2)
                Call ChebIterationShiChi(A, -2.56600180000356E-10, b0, b1, b2)
                Call ChebIterationShiChi(A, -1.61021375163803E-09, b0, b1, b2)
                Call ChebIterationShiChi(A, -4.72543064876272E-09, b0, b1, b2)
                Call ChebIterationShiChi(A, -3.00095178028682E-09, b0, b1, b2)
                Call ChebIterationShiChi(A, 7.79387474390915E-08, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.06942765566402E-06, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.59503164802313E-05, b0, b1, b2)
                Call ChebIterationShiChi(A, 3.49592575153778E-04, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.28475387530065E-02, b0, b1, b2)
                Call ChebIterationShiChi(A, 1.03665693917934, b0, b1, b2)
                C = K * 0.5 * (b0 - b2)
            Else
                If sg <> 0# Then
                    Shi = -MaxRealNumber
                Else
                    Shi = MaxRealNumber
                End If
                Chi = MaxRealNumber
                Exit Sub
            End If
        End If
    End If
    If sg <> 0# Then
        S = -S
    End If
    Shi = S
    Chi = 0.577215664901533 + Log(X) + C
End Sub
Private Sub ChebIterationShiChi(ByVal X As Double, _
         ByVal C As Double, _
         ByRef b0 As Double, _
         ByRef b1 As Double, _
         ByRef b2 As Double)
    b2 = b1
    b1 = b0
    b0 = X * b1 - b2 + C
End Sub
