'=======================================================================================
'Unifloc 7.7  Vulpes zerda                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' class for calc general well production system
' production system includes well and Reservoir (IPR)
' main functions
'           nodal analysis - liquid rate estimation for specific GL condition
'                            either gas injection rate or gas injection pressure
'           gas lift curve building - liquid rate vs gas injection rate
'           potential estimation
'                          - liquid production potential with given gas cost function
'                          - minimal gas injection for given liquid rate
Option Explicit
 ' reservoir
 Public Reservoir As New IReservoir
 Public well As IWell                       '  can be any CWellESP class with sufficient interface
 ' параметры решения системы
 Public Qsol_scm3day As Double
 Public Pwfsol_atma As Double
 
' набор кривых для описания системы добычи нефти
 Private Curve As New CCurves     ' коллекция кривых с результатами расчетов
 Public Event ReportProgress(msg As String)
 
 
  ' конструктор класса
  ' вызывается при создании класса - гарантирует что все объекты будут созданы
Private Sub Class_Initialize()
   ' создадим объекты скважин чтобы они были готовы
  ' Set p_Fluid = New CPVT
  Qsol_scm3day = 0
  Pwfsol_atma = 0
End Sub
 
' =================================================
' properties
' =================================================
 
' ==================================================
' general fuctions
' ==================================================
Public Function Nodal_Qgas_inj_scm3day()
End Function
Public Sub Build_Curves()
End Sub
 Public Sub BuildNodalWHCurve_PI(Optional Pwh_targ_atma As Double = 1)
'  метод для расчета кривой узлового анализа системы добычи на поверхности для заданной продуктивности
' Pwh_targ_atma целевое значение устьевого давления, которое надо точнее найти
'
' цель построения кривой - иметь возможность по ней восстановить пересечение с заданным значением устьевого давления
' поэтому, чтобы избежать числовой ошибки надо точнее нарисовать кривую около этих точек.
    Dim i As Integer, j As Integer
    Dim MinPwf As Double, MaxPwf As Double
    Dim Pwf_0 As Double, Pwh_0 As Double
    Dim Pwf_1 As Double, Pwh_1 As Double
    Dim Pwh_atma As Double
    Dim Q As Double, Pwf As Double, Pwfstep As Double, Pintake As Double
    Dim NumIntervals As Integer
    Dim Done As Boolean
    Dim PointDone As Boolean
    Dim FirstPointDone As Boolean
    Dim errmsg As String
    
 On Error GoTo err1:
    PointDone = False
    Done = False
    FirstPointDone = False
    NumIntervals = 10
    MinPwf = 1
    MaxPwf = Reservoir.Pres * 0.99  ' для максимальной границы расчета берем 0.99 от пластового чтобы не натыкаться на нулевой дебит
 ' первую точку все равно надо считать, сделаем это вне основного цикла
    Pwf = MaxPwf
    Curve("c_PlinQl_curve").ClearPoints
    Pwfstep = (MaxPwf - MinPwf) / NumIntervals
    Q = Reservoir.calcQliq(Pwf)
    
  '  Me.Qliq_scm3day = Q
  '  well.isCalcCasing = False
    well.Qliq = Q
    Pwh_atma = well.CalcUp(Pwf)
    
    Pintake = well.Pintake          ' вытаскиваем значение из скважины
    Curve("c_PlinQl_curve").AddPoint Q, Pwh_atma
    Pwf_0 = Pwf
    Pwh_0 = Pwh_atma
    i = 0
    RaiseEvent ReportProgress("BuildNodalWHCurve_PI: start WH nodal curve build for Plin = " & s(Pwh_targ_atma))
    Do
         If Pintake = 1 And i > 0 Then Exit Do
         Pwf = Pwf - Pwfstep
         If Pwf < 1 Then Pwf = 1
         Q = Reservoir.calcQliq(Pwf)                          ' нашли точку по индикаторной кривой
         well.Qliq = Q                                      ' установили дебит для расчета
        ' well.isCalcCasing = False
         Pwh_atma = well.CalcUp(Pwf)
         If Pwh_atma > 1 Then FirstPointDone = True
         If Pwh_atma > Pwh_targ_atma And Pwf = 1 Then
         ' значит даже при атмосферном давлении устьевое будет выше необходимого
             Curve("c_PlinQl_curve").AddPoint Q - 0.0001, Pwh_atma
             Curve("c_PlinQl_curve").AddPoint Q, Pwh_targ_atma
             Exit Sub
         End If
         Curve("c_PlinQl_curve").AddPoint Q, Pwh_atma
         
         RaiseEvent ReportProgress("BuildNodalWHCurve_PI: point i = " & i & ":  Pwf = " & s(Pwf) & ":  Pwh_atma =" & s(Pwh_atma))
         ' фиксируем вторую точку
         Pwf_1 = Pwf
         Pwh_1 = Pwh_atma
         j = 0
         If isBetween(Pwh_targ_atma, Pwh_0, Pwh_1) Then
         ' здесь надо точнее найти точку пересения кривой, для этого используем метод дихотомии
             Do
                 j = j + 1
                 Pwf = (Pwf_0 + Pwf_1) / 2
                 well.Qliq = Reservoir.calcQliq(Pwf)
                ' well.isCalcCasing = False
                 Pwh_atma = well.CalcUp(Pwf)
                 Curve("c_PlinQl_curve").AddPoint Q, Pwh_atma
                 
                 RaiseEvent ReportProgress("BuildNodalWHCurve_PI: Looking for intersection. Points i = " & i & " j = " & j & ":  Pwf = " & s(Pwf) & ":  Pwh_atma =" & s(Pwh_atma))
                 If isBetween(Pwh_targ_atma, Pwh_0, Pwh_atma) Then
                     Pwf_1 = Pwf
                     Pwh_1 = Pwh_atma
                 Else
                     Pwf_0 = Pwf
                     Pwh_0 = Pwh_atma
                 End If
             Loop Until j > 100 Or Abs(Pwf_1 - Pwf_0) < 0.1
             If FirstPointDone And j < 100 Then Done = True    ' можно вместо  Pwh_atma поставить Pwh_1 и сократить 1 расчет
        End If
        Pwf_0 = Pwf_1
        Pwh_0 = Pwh_1
        
        i = i + 1
    Loop Until i > 100 Or Done
    
    RaiseEvent ReportProgress("BuildNodalWHCurve_PI: Готово для Рлин = " & s(Pwh_targ_atma))
    
'                Me.Qliq_scm3day = Curve("c_PlinQl_curve").FindMaxOneSolution(Pwh_targ_atma)
'                Pwf = Reservoir.Calc_Pwf_atma(Me.Qliq_scm3day)
'                Pwh_atma = well.Calc_Plin_Pwf_atma(SetPT(Pwf, well.tbh_C), CalcCasing:=False)
    
    Exit Sub
err1:
    errmsg = "CProdSystem_old.BuildNodalWHCurve_PI: Ошибка при построении кривой узлового анализа на устье " & sDELIM & Err.Description
    RaiseEvent ReportProgress("CProdSystem_old.BuildNodalWHCurve_PI: ошибка какая то: " & errmsg)
'    Err.Raise Err.Number, Err.Source, Err.Description
    Err.Raise kErrBuildCurve, Err.Source, errmsg
    
 End Sub
 Public Sub nodal_Qliq_scm3day(ByVal Plin_atma As Double)
 ' поиск решения задачи узлового анализа по заданной продуктивности скважины
 '
 Dim errmsg As String
 On Error GoTo err1:
    Dim numPoints As Integer
    Call BuildNodalWHCurve_PI(Plin_atma)          'после построения кривой можно найти параметры
    numPoints = Curve("c_PlinQl_curve").FindSolutions(Plin_atma)
    If numPoints >= 1 Then
        Qsol_scm3day = Curve("c_PlinQl_curve").FindMaxOneSolution(Plin_atma)
        Pwfsol_atma = Reservoir.calcPwf(Qsol_scm3day)
    Else
        Qsol_scm3day = 0
        Pwfsol_atma = Reservoir.calcPwf(Qsol_scm3day)
    End If
    
    Exit Sub
err1:
    errmsg = "CProdSystem_old.Calc_Nodal_PI: Nodal solution error " & sDELIM & Err.Description
    RaiseEvent ReportProgress("CProdSystem_old.Calc_Nodal_PI: Решение не найдено:" & errmsg)
'    Err.Raise Err.Number, Err.Source, Err.Description
    Err.Raise kErrNodalCalc, Err.Source, errmsg
 End Sub
