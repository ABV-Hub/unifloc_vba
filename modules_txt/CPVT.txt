'=======================================================================================
'Unifloc 7.13  Lepus                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
'class_description_to_manual_eng  - class description - for auto generated manual
' CPVT class describes the properties of reservoir fluids - oil, gas and water
' on the basis of the black oil model, as well as fluid flow parameters - flow rate q_liq and watercut f_w.
' Allows to define all the necessary parameters for the calculations for the given thermobaric conditions,
' such as: gas content in oil, free gas fraction in flow, fluid density and viscosity,
' formation volume factors of fluids and mixtures and others.
' Key function calc_PVT. Its call guarantees recalculation of all flow parameters that can be accessed
' through the appropriate properties.
'description_end_eng
'class_description_to_manual_rus      - для автогенерации описания - помещает комментарии в мануал (со след строки)
' Класс CPVT описывает свойства пластовых флюидов - нефти, газа и воды
' на основе модели нелетучей нефти (black oil), а также параметры потока флюидов - дебита q_liq и обводненности f_w.
' Позволяет для заданных термобарических условий определить все необходимые для проведения расчетов параметры,
' такие как: газосодержание в нефти, долю свободного газа в потоке, плотности и вязкости флюидов,
' объемный расход флюидов и смеси и другие.
' Ключевая функция calc_PVT. Ее вызов гарантирует пересчет всех параметров потока, к которым можно получить доступ
' через соответствующие свойства.
'description_end_rus
Option Explicit
 Private class_name_ As String                     ' имя класса для унифицированной генерации сообщений об ошибках
 Private PT_calc_ As PTtype                        ' термобарические условия при которых был проведен расчет
 ' базовые параметры флюида
 Private gamma_o_ As Double                        ' плотность нефти удельная
 Private gamma_g_ As Double                        ' плотность газа удельная
 Private gamma_w_ As Double                        ' плотность воды удельная
 Private rsb_m3m3_ As Double                       ' газосодержание при давлении насыщения
 ' калибровочные параметры нефти
 Private pb_atma_ As Double                        ' давление насыщения  (калибровочное значение)
 Private muob_cP_ As Double                        ' вязкость нефти при давлении насыщения (калибровочное значение)
 Private bob_m3m3_ As Double                       ' объемный коэффициент при давлении насыщения
 Private tres_C_ As Double                         ' пластовая температура при которой заданые значения давления насыщения и объемного коэффициента
 ' расчетные параметры нефти
 Private pb_calc_atma_ As Double                   ' расчетное значение давления насыщения по корреляции
 Private rs_m3m3_ As Double                        ' расчетное значение газосодержания в нефти при текущих условиях
 Private bo_m3m3_ As Double                        ' объемный коэффициент нефти при рабочих условиях
 Private mu_oil_cP_ As Double                      ' вязкость нефти при рабочих условиях
 Private mu_deadoil_cP_ As Double                  ' вязкость дегазированной нефти
 Private copmressibility_o_1atm_ As Double         ' сжимаемость нефти
 Private ST_oilgas_dyncm_ As Double                ' поверхностное натяжение нефть газ
 Private ST_watgas_dyncm_ As Double                ' поверхностное натяжение вода газ
 Private ST_liqgas_dyncm_ As Double
 ' расчетные параметры газа
 Private z_ As Double                              ' расчетное значение коэффициента сверхсжимаемости
 Private bg_m3m3_ As Double                        ' объемный коэффициент газа
 Private mu_gas_cP_ As Double                      ' вязкость газа при рабочих условиях
 ' расчетные параметры воды
 Private bw_m3m3_ As Double                        ' расчетное значение объемного коэффициента воды
 Private bw_sc_m3m3_ As Double
 Private mu_wat_cP_ As Double                      ' вязкость воды
 Private salinity_ppm_ As Double                   ' соленость воды
 ' параметры потока
 Private rp_m3m3_ As Double                        ' газовый фактор добычной (приведенный к стандартным условиям)
 Private fw_fr_ As Double                          ' объемная доля воды в флюиде
 Private qliq_sm3day_ As Double                    ' задаем для флюида также и дебиты, это упрощает дальнейшие расчеты расходов в разных условиях
 Private q_oil_rc_m3day_ As Double
 Private q_wat_rc_m3day_ As Double
 Private q_gas_rc_m3day_ As Double
 Private qliq_rc_m3day_ As Double
 Private gas_fraction_d_ As Double
 Private mu_mix_cP_ As Double
 Private rho_oil_rc_kgm3_ As Double
 Private rho_wat_rc_kgm3_ As Double
 Private rho_liq_rc_kgm3_ As Double
 Private rho_mix_rc_kgm3_ As Double
 Private q_gas_free_sm3day_ As Double              ' дебит газа, вернее добавка для значения Qgas, в исследовательских целях
 ' набор параметров для температурных расчетов
 Private co_JkgC_ As Double                        ' oil heat capacity   теплоемкость нефти  Дж/кг/С
 Private cw_JkgC_ As Double                        ' water heat capacity  теплоемкость воды
 Private cg_JkgC_ As Double                        ' теплоемкость газа gas heat capacity
 ' настройка модели
 Private PVT_correlation_ As PVT_CORRELATION       ' PVT correlation
 Public zCorr As Z_CORRELATION
 Private ZNLF_ As Boolean                          ' флаг показывает что флюид в режиме барботажа
 Private t_wh_C_ As Double                         ' температура для которой строятся кривые
                                                   '  в режиме барботажа газ вспплывает через неподвижный столб жидкости (нефти )
                                                   '  задается дополнительно расход свободного газа через столб жидкости
                                                   '  при этом газ не выделяется из жидкости
                                                   '  корректируется обводненность - в неподвижном потоке может остаться только нефть
 Public gas_only As Boolean
 Public Property Get ZNLF() As Boolean
    ZNLF = ZNLF_
 End Property
  
 Public Property Let ZNLF(ByVal val As Boolean)
    ZNLF_ = val
    If ZNLF_ Then
        fw_fr = 0      ' обнуляем содержание воды
        qliq_sm3day = const_ZNLF_rate ' зануляем поток жидкости - ничего не движется. Это занулит поток газа из скважины
    End If
 End Property
  
 Public Property Get fw_fr() As Double
   fw_fr = fw_fr_
 End Property
  
 Public Property Let fw_fr(val As Double)
    If val >= 0 And val <= 1 Then
        fw_fr_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "fw_fr"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
 Public Property Get fw_perc() As Double
   fw_perc = fw_fr_ * 100
 End Property
  
 Public Property Let fw_perc(val As Double)
   fw_fr = val / 100    ' вызываем свойство, чтобы поменять все зависимые флюиды
 End Property
  
 Public Property Get qliq_sm3day() As Double
    qliq_sm3day = qliq_sm3day_
 End Property
 
 Public Property Let qliq_sm3day(val As Double)
    If val >= 0 And val <= 100000 Then
        ' not ready for too high liquid rates here - 100000
        qliq_sm3day_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "qliq_sm3day"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
  
 Private Sub calc_wc()
    If qliq_sm3day > 0 Then
        fw_fr = q_wat_sm3day / qliq_sm3day
    Else
        fw_fr = 0
    End If
 End Sub
 
 Public Property Get q_wat_sm3day() As Double
   q_wat_sm3day = qliq_sm3day_ * fw_fr_
 End Property
  
 Public Property Get q_gas_sm3day() As Double
   q_gas_sm3day = q_oil_sm3day * rp_m3m3 + q_gas_free_sm3day    ' учитываем наличие свободного газа в потоке
   ' при барботаже будет все корректно
 End Property
 Public Property Get q_gas_insitu_sm3day() As Double
 ' расход газа в заданных термобарических условиях приведенный к стандартным условиям
   q_gas_insitu_sm3day = (q_gas_sm3day - rs_m3m3 * q_oil_sm3day)
   If q_gas_insitu_sm3day < 0 Then
        
       If q_gas_insitu_sm3day < -1 Then
           ' сообщение генерируем только если большая разница
            addLogMsg "CPVT.q_gas_insitu_sm3day: warning: q_gas_insitu_sm3day < 0,  q_gas_sm3day = " & S(q_gas_sm3day) & _
                  ", rs_m3m3 = " & S(rs_m3m3) & _
                  ", q_oil_sm3day = " & S(q_oil_sm3day) & _
                  "  q_gas_insitu_sm3day set to 0"
        End If
        q_gas_insitu_sm3day = 0
   End If
   ' при барботаже будет все как надо - свободный газ уже учтен в дебите газа в стандартных условиях
 End Property
 Public Property Get q_gas_rc_m3day() As Double
   q_gas_rc_m3day = q_gas_insitu_sm3day * bg_m3m3_
   If q_gas_rc_m3day < 0 Then q_gas_rc_m3day = 0
 End Property
 Public Property Get q_oil_sm3day() As Double
   q_oil_sm3day = qliq_sm3day_ * (1 - fw_fr_)
 End Property
 Public Property Get q_oil_rc_m3day() As Double
   q_oil_rc_m3day = q_oil_sm3day * bo_m3m3_
 End Property
 Public Property Get q_wat_rc_m3day() As Double
   q_wat_rc_m3day = q_wat_sm3day * bw_m3m3_
 End Property
 
 Public Property Get qliq_rc_m3day() As Double
   qliq_rc_m3day = q_wat_rc_m3day + q_oil_rc_m3day
 End Property
   
 Public Property Get q_mix_rc_m3day() As Double
   q_mix_rc_m3day = q_wat_rc_m3day_ + q_oil_rc_m3day_ + q_gas_rc_m3day_
 End Property
 Public Property Get q_gas_free_sm3day() As Double
   q_gas_free_sm3day = q_gas_free_sm3day_
 End Property
 Public Property Let q_gas_free_sm3day(ByVal val As Double)
    If val >= 0 And val <= 1000000000 Then
        ' not ready for too high liquid rates here - 1 000 000 000
        q_gas_free_sm3day_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "q_gas_free_sm3day"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
  
 Public Property Get wm_kgsec() As Double
   wm_kgsec = wg_kgsec + wo_kgsec + wwat_kgsec
 End Property
  
 Public Property Get compressibility_oil_1atm() As Double
    compressibility_oil_1atm = copmressibility_o_1atm_
 End Property
  
 Public Property Get co_JkgC() As Double  ' oil heat capacity   теплоемкость нефти  Дж/кг/С
    co_JkgC = co_JkgC_
 End Property
 
 Public Property Get cw_JkgC() As Double   ' water heat capacity  теплоемкость воды
    cw_JkgC = cw_JkgC_
 End Property
 
 Public Property Get cg_JkgC() As Double  ' теплоемкость газа gas heat capacity
    cg_JkgC = cg_JkgC_
 End Property
 ' массовый расход газа при заданных термобарических условиях
 Public Property Get wg_kgsec() As Double
    wg_kgsec = rho_gas_rc_kgm3 * q_gas_rc_m3day * const_conver_sec_day
 End Property
 ' массовый расход нефти при заданных термобарических условиях
 Public Property Get wo_kgsec() As Double
    wo_kgsec = rho_oil_rc_kgm3 * q_oil_rc_m3day * const_conver_sec_day
 End Property
 
 ' массовый расход воды при заданных термобарических условиях
 Public Property Get wwat_kgsec() As Double
    wwat_kgsec = rho_wat_rc_kgm3 * q_wat_rc_m3day * const_conver_sec_day
 End Property
 
 ' массовый расход жидкости при заданных термобарических условиях
 Public Property Get wliq_kgsec() As Double
    wliq_kgsec = wo_kgsec + wwat_kgsec * const_conver_sec_day
 End Property
 
 Public Property Get cliq_JkgC() As Double  ' mixture heat capacity   теплоемкость жидкости  Дж/кг/С
    If q_mix_rc_m3day > 0 Then
         cliq_JkgC = (co_JkgC * wo_kgsec + cw_JkgC * wwat_kgsec) / (wwat_kgsec + wo_kgsec)
    Else
        cliq_JkgC = co_JkgC
    End If
 End Property
 Public Property Get cmix_JkgC() As Double  ' mixture heat capacity   теплоемкость жидкости  Дж/кг/С
    If q_mix_rc_m3day > 0 Then
         cmix_JkgC = (cliq_JkgC * wliq_kgsec + cg_JkgC * wg_kgsec) / (wliq_kgsec + wg_kgsec)
    Else
        cmix_JkgC = co_JkgC
    End If
 End Property
 
 Public Property Get cJT_Katm() As Double
 ' коэффциент Джоуля Томсона для многофазной смеси
    Dim x As Double
    Dim wm As Double
    Dim Z1 As Double, Z2 As Double
    Dim dTz As Double
    Dim dZdT As Double
    Dim TZdZdT As Double
    wm = wm_kgsec
    ' здесь необходима производная по сверхсжимаемости, здесь ее и считаем, чтобы ускорить расчет немного
    dTz = 5
      ' расчет производной увеличивает время счета довольно сильно - пока отключен, надо решить, что делать дальше
    Z1 = unf_calc_Zgas_d(t_calc_K, pcalc_MPaa, gamma_g_)
    Z2 = unf_calc_Zgas_d(t_calc_K + dTz, pcalc_MPaa, gamma_g_)
    z_ = Z1
    dZdT = (Z2 - Z1) / dTz
    TZdZdT = t_calc_K / z_ * dZdT
    If wm > 0 Then
        x = wg_kgsec / wm_kgsec    ' массовая доля газа в потоке
    Else
        x = 0
    End If
    cJT_Katm = 1 / cmix_JkgC * (x / rho_gas_rc_kgm3 * (-TZdZdT) + (1 - x) / rho_liq_rc_kgm3) * const_convert_atma_Pa
 End Property
 
 Public Property Get oil_API() As Double
    oil_API = 141.5 / gamma_o_ - 131.5
 End Property
 
 Public Property Get rho_oil_rc_kgm3() As Double
    Dim msg As String
    If bo_m3m3_ > 0 Then
        rho_oil_rc_kgm3 = 1000 * (gamma_o_ + rs_m3m3_ * gamma_g_ * const_rho_air / 1000) / bo_m3m3_
    Else
        ' странная обработка ошибок не при ввода а при расчета - потом надо будет убрать наверное
        msg = "CPVT.rho_oil_rc_kgm3: расчет плотности с неположительным значением Bo_m3m3" & bo_m3m3 & "Значение Bo проигнорировано"
        addLogMsg msg
        rho_oil_rc_kgm3 = 1000 * (gamma_o_ + rs_m3m3_ * gamma_g_ * const_rho_air / 1000)
        'Err.Raise kErrPVTinput, , msg
    End If
 End Property
 
 Public Property Get rho_wat_rc_kgm3() As Double
    Dim msg As String
    If bw_m3m3_ > 0 Then
        rho_wat_rc_kgm3 = 1000 * (gamma_w_) / bw_m3m3_
    Else
        ' странная обработка ошибок не при ввода а при расчета - потом надо будет убрать наверное
        msg = "CPVT.rho_wat_rc_kgm3: расчет плотности с неположительным значением Bw_m3m3" & bw_m3m3_ & "Значение Bw проигнорировано"
        addLogMsg msg
        rho_wat_rc_kgm3 = 1000 * (gamma_w)
       ' Err.Raise kErrPVTinput, , msg
    End If
 End Property
 Public Property Get rho_liq_rc_kgm3() As Double
    rho_liq_rc_kgm3 = rho_liq_rc_kgm3_ '(1 - fw_fr) * rho_oil_rc_kgm3 + fw_fr * rho_wat_rc_kgm3
 End Property
 
 Public Property Get rho_gas_rc_kgm3() As Double
    Dim msg As String
    If bg_m3m3_ > 0 Then
        rho_gas_rc_kgm3 = gamma_g_ * const_rho_air / bg_m3m3_
    Else
        ' странная обработка ошибок не при ввода а при расчета - потом надо будет убрать наверное
        msg = "CPVT.rho_gas_rc_kgm3: расчет плотности с неположительным значением Bg_m3m3" & bg_m3m3 & "Значение Bg проигнорировано"
        addLogMsg msg
        rho_gas_rc_kgm3 = gamma_g * const_rho_air
       ' Err.Raise kErrPVTinput, , msg
    End If
 End Property
 Public Property Get f_g() As Double
    If q_mix_rc_m3day > 0 Then
       f_g = q_gas_rc_m3day / q_mix_rc_m3day
    Else
       f_g = 0
    End If
 End Property
 Public Property Get rho_mix_rc_kgm3() As Double
    rho_mix_rc_kgm3 = rho_mix_rc_kgm3_  ' rho_liq_rc_kgm3 * (1 - f_g) + rho_gas_rc_kgm3 * f_g
 End Property
 
 Public Property Get sigma_liq_Nm() As Double
    'sigma_liq_Nm = p_sigma_oil_gas_Nm * (1 - fw_fr) + p_sigma_wat_gas_Nm * fw_fr
    sigma_liq_Nm = ST_liqgas_dyncm_ * 0.001
 End Property
 Public Property Get sigma_oil_gas_Nm() As Double
    'sigma_oil_gas_Nm = p_sigma_oil_gas_Nm
    sigma_oil_gas_Nm = ST_oilgas_dyncm_ * 0.001
 End Property
 
 Public Property Let sigma_oil_gas_Nm(val As Double)
    If val >= 0 And val <= 0.5 Then
        ' поверхностное натяжение ртути и воздуха 486 e-3 H/м - вряд ли где то будет больше
        ST_oilgas_dyncm_ = val / 0.001
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "sigma_oil_gas_Nm"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
 
 Public Property Get sigma_wat_gas_Nm() As Double
    'sigma_wat_gas_Nm = p_sigma_wat_gas_Nm
    sigma_wat_gas_Nm = ST_watgas_dyncm_ * 0.001
 End Property
 
 Public Property Let sigma_wat_gas_Nm(val As Double)
    If val >= 0 And val <= 0.5 Then
        ' поверхностное натяжение ртути и воздуха 486 e-3 H/м - вряд ли где то будет больше
        ST_watgas_dyncm_ = val / 0.001
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "sigma_wat_gas_Nm"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
  
 Public Property Get tres_C() As Double
    tres_C = tres_C_
 End Property
 
 Public Property Get t_res_K() As Double
    t_res_K = tres_C_ + const_t_K_min
 End Property
 
 Public Property Let tres_C(val As Double)
    If val >= 0 And val <= 300 Then
        ' больше 300 С в пласте не ждем
        tres_C_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "tres_C"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
  
 ' молярная масса газа   (используется например в штуцере)
 Public Property Get m_g_kgmol() As Double
    m_g_kgmol = const_m_a_kgmol * gamma_g_
 End Property
 Public Property Get sal_ppm() As Double
    sal_ppm = salinity_ppm_
 End Property
 
 Public Property Let sal_ppm(val As Double)
    salinity_ppm_ = val
 End Property
 
 Public Property Get PVT_CORRELATION() As Integer
    PVT_CORRELATION = PVT_correlation_
 End Property
 
 Public Property Let PVT_CORRELATION(val As Integer)
   PVT_correlation_ = val
 End Property
 ' ----- gamma_o ----------------------------------------------------------------------------------------
 Public Property Get gamma_o() As Double
    gamma_o = gamma_o_
 End Property
 
 Public Property Get rho_oil_sckgm3() As Double
    rho_oil_sckgm3 = gamma_o_ * const_rho_ref
 End Property
 
 Public Property Get rho_gas_sckgm3() As Double
    rho_gas_sckgm3 = gamma_g_ * const_rho_air
 End Property
 Public Property Get rho_wat_sckgm3() As Double
    rho_wat_sckgm3 = gamma_w_ * const_rho_ref
 End Property
 
 Public Property Let gamma_o(val As Double)
   
    If (val > const_gamma_oil_min) And (val < const_gamma_oil_max) Then
        gamma_o_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "gamma_o"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
 
 ' ----- gamma_g ----------------------------------------------------------------------------------------
 Public Property Get gamma_g() As Double
    gamma_g = gamma_g_
 End Property
 
 Public Property Let gamma_g(val As Double)
 'установка значения плотности газа, влияет на все зависимые флюиды
    
    If (val > const_gamma_gas_min) And (val < const_gamma_gas_max) Then
        gamma_g_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "gamma_g"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
 
 ' ----- gamma_w ----------------------------------------------------------------------------------------
 Public Property Get gamma_w() As Double
    gamma_w = gamma_w_
 End Property
 
 Public Property Let gamma_w(val As Double)
    
    If (val > const_gamma_water_min) And (val < const_gamma_water_max) Then
        gamma_w_ = val
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "gamma_w"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
 End Property
 
' ----- Rp - GOR  ----------------------------------------------------------------------------------------
Public Property Get rp_m3m3() As Double
    rp_m3m3 = rp_m3m3_
End Property
Property Let rp_m3m3(val As Double)
    If (val >= 0) Then
        rp_m3m3_ = val
        If rp_m3m3_ < rsb_m3m3_ Then   ' проверим, что газовый фактор должен быть больше чем газосодержание
            addLogMsg "Газовый фактор при вводе больше газосодержания Rp = " & Format(rp_m3m3_, "####0.00") & " < rsb = " & Format(rsb_m3m3_, "#0.00") & ". Газосодержание исправлено"
            rsb_m3m3_ = rp_m3m3_
        End If
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "rp_m3m3"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
End Property
  
' ----- rsb -----------------------------------------------------------------------------------------
Public Property Get rsb_m3m3() As Double
    rsb_m3m3 = rsb_m3m3_
End Property
Property Let rsb_m3m3(val As Double)
    If (val >= 0) Then
        rsb_m3m3_ = val
        If rp_m3m3_ < rsb_m3m3_ Then   ' проверим, что газовый фактор должен быть больше чем газосодержание
            addLogMsg "газосодержания при вводе меньше газового фактора  Rp = " & Format(rp_m3m3_, "#0.00") & " < rsb = " & Format(rsb_m3m3_, "#0.00") & ". Газосодержание исправлено"
            rsb_m3m3_ = rp_m3m3_
        End If
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "rsb_m3m3"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
End Property
 
Public Function set_rp_rsb(ByVal Rpval_m3m3 As Double, ByVal Rsbval_m3m3 As Double) As Boolean
' безопасный с точки зрения начисления штрафов способ установки произвольных значений газового фактора в системе
    If Rpval_m3m3 > 0 Then
        If Rpval_m3m3 >= Rsbval_m3m3 Then
            rp_m3m3_ = Rpval_m3m3
            If Rsbval_m3m3 > 0 Then
                rsb_m3m3_ = Rsbval_m3m3
            Else
                rsb_m3m3_ = Rpval_m3m3
            End If
            set_rp_rsb = True
        Else
            addLogMsg "CPVT.set_rp_rsb: Газосодержание при вводе больше газового фактора  Rp = " & Format(Rpval_m3m3, "#0.00") & " < rsb = " & Format(Rsbval_m3m3, "#0.00") & ". Газосодержание исправлено"
            rp_m3m3_ = Rpval_m3m3
            rsb_m3m3_ = Rpval_m3m3
            set_rp_rsb = True
        End If
    Else
        If Rpval_m3m3 <= 0 And Rsbval_m3m3 > 0 Then
            rp_m3m3_ = Rsbval_m3m3
            rsb_m3m3_ = Rsbval_m3m3
            set_rp_rsb = True
        Else
            set_rp_rsb = False
        End If
    End If
    ' устновим все значения для зависимых флюидов
    rp_m3m3 = rp_m3m3
    rsb_m3m3 = rsb_m3m3
End Function
'----- Pb -----------------------------------------------------------------------------------------
Public Property Get pb_atma() As Double
    If pb_atma_ > 0 Then       ' ноль не допустим, это значит что значение отсутствует
    ' если известно калибровочное значение при пластовой температуре, то возвращаем его
        pb_atma = pb_atma_
    Else
    ' иначе считаем что получится из расчета по корреляции по газосодержанию
        pb_atma = calc_pb_atma(rsb_m3m3, tres_C)
    End If
End Property
Property Let pb_atma(val As Double)
    If (val >= 0) Then
        pb_atma_ = val
    ElseIf (val = -1) Then
        pb_atma_ = -1 ' явный сброс значения давления насыщения после которого оно будет вычисляться по корреляции
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "pb_atma"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
End Property
'----- Bo -----------------------------------------------------------------------------------------
Public Property Get bob_m3m3() As Double
    bob_m3m3 = bob_m3m3_
End Property
Property Let bob_m3m3(val As Double)
    If (val >= 0) Then
        bob_m3m3_ = val
    ElseIf val = -1 Then
        ' явный сброс значения давления насыщения после которого оно будет вычисляться по корреляции
        bob_m3m3_ = -1
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "bob_m3m3"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
End Property
Public Property Get muob_cP() As Double
    muob_cP = muob_cP_
End Property
Property Let muob_cP(val As Double)
    If (val >= 0) Then
        muob_cP_ = val
    ElseIf val = -1 Then
        muob_cP_ = -1 ' явный сброс значения давления насыщения после которого оно будет вычисляться по корреляции
    Else
        ' унифицированная реакция на ошибочный ввод ключевых параметров класса
        Dim msg As String, fname As String
        fname = "muob_cP"
        msg = class_name_ & "." & fname & ": input - wrong " & fname & " = " & S(val)
        addLogMsg msg
        Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
    End If
End Property
Public Property Get rs_m3m3() As Double
    rs_m3m3 = rs_m3m3_
End Property
Public Property Get bo_m3m3() As Double
    bo_m3m3 = bo_m3m3_
End Property
Public Property Get bg_m3m3() As Double
    bg_m3m3 = bg_m3m3_
End Property
Public Property Get bw_m3m3() As Double
    bw_m3m3 = bw_m3m3_
End Property
Public Property Get mu_oil_cP() As Double
 mu_oil_cP = mu_oil_cP_
End Property
Public Property Get mu_wat_cP() As Double
 mu_wat_cP = mu_wat_cP_
End Property
Public Property Get mu_gas_cP() As Double
 mu_gas_cP = mu_gas_cP_
End Property
Public Property Get mu_liq_cP() As Double
'
' todo надо уточнить как считать вязкость для смеси - быть может надо холдап использовать
'
    Dim fw_rc_fr As Double
    If qliq_rc_m3day > 0 Then
        fw_rc_fr = q_wat_rc_m3day / qliq_rc_m3day
    Else
        fw_rc_fr = fw_fr_
    End If
    
    mu_liq_cP = (mu_oil_cP * (1 - fw_rc_fr) + _
                mu_wat_cP * fw_rc_fr)
End Property
Public Property Get mu_mix_cP() As Double
    mu_mix_cP = mu_mix_cP_
End Property
' кинематическая вязкость смеси в сантистоксах
Public Property Get mu_mix_cSt() As Double
    mu_mix_cSt = mu_mix_cP_ / (rho_mix_rc_kgm3_ / 1000)
End Property
' массовый расход нефти
Public Property Get mo_kgsec() As Double
    mo_kgsec = q_oil_rc_m3day * rho_oil_rc_kgm3 / const_conver_day_sec
End Property
' массовый расход воды
Public Property Get mw_kgsec() As Double
    mw_kgsec = q_wat_rc_m3day * rho_wat_rc_kgm3 / const_conver_day_sec
End Property
' массовый расход газа
Public Property Get mg_kgsec() As Double
    mg_kgsec = q_gas_rc_m3day * rho_gas_rc_kgm3 / const_conver_day_sec
End Property
Public Property Get z() As Double
    z = z_
End Property
Public Property Get pcalc_atma() As Double
    pcalc_atma = PT_calc_.p_atma
End Property
Public Property Get pcalc_MPaa() As Double
    pcalc_MPaa = pcalc_atma * const_convert_atma_MPa
End Property
Public Property Get t_calc_C() As Double
    t_calc_C = PT_calc_.t_C
End Property
Public Property Get t_calc_K() As Double
    t_calc_K = t_calc_C + const_t_K_min
End Property
Public Property Get t_calc_F() As Double
    t_calc_F = t_calc_C * 1.8 + 32
End Property
Public Property Get mu_deadoil_cP() As Double
    mu_deadoil_cP = mu_deadoil_cP_
End Property
'===================================================================================
' функции и процедуры
'===================================================================================
 
 Private Sub Class_Initialize()
        class_name_ = "CPVT"
        PVT_correlation_ = Standing_based
        gamma_o = 0.86
        gamma_g = 0.6
        gamma_w = 1
        rp_m3m3 = 100
        rsb_m3m3 = 100
        pb_atma = -1  ' по умолчанию нет калибровок, только корреляция
        bob_m3m3 = -1  ' по умолчанию нет калибровок, только корреляция
        tres_C = 90
        sigma_oil_gas_Nm = const_sigma_oil_Nm
        sigma_wat_gas_Nm = const_sigma_wat_gas_Nm
        fw_perc = 0
        qliq_sm3day_ = 100
        q_gas_free_sm3day_ = 0
        ' для начала для простоты инициализируем теплоемкость флюидов как константы
        ' потом можно будет добавить расчет в зависимости от условий
        co_JkgC_ = 2100
        cw_JkgC_ = 4100
        cg_JkgC_ = 2200
        zCorr = z_Kareem
        gas_only = False
 End Sub
 
 
 Public Sub Init(Optional ByVal gamma_gas = 0.6, _
                 Optional ByVal gamma_oil = 0.86, _
                 Optional ByVal gamma_wat = 1, _
                 Optional ByVal rsb_m3m3 = 100, _
                 Optional ByVal pb_atma = -1, _
                 Optional ByVal bob_m3m3 = -1, _
                 Optional ByVal PVTcorr = 0, _
                 Optional ByVal tres_C = 90, _
                 Optional ByVal rp_m3m3 = -1, _
                 Optional ByVal muob_cP = -1)
' P давление, атм
' Т температура,  С
' gamma_gas плотность газа
' gamma_oil плотность нефти
        gamma_g = gamma_gas
        gamma_o = gamma_oil
        gamma_w = gamma_wat
        Me.set_rp_rsb rp_m3m3, rsb_m3m3
        Me.pb_atma = pb_atma
        Me.tres_C = tres_C
        Me.bob_m3m3 = bob_m3m3
        Me.muob_cP = muob_cP
        PVT_CORRELATION = PVTcorr
 End Sub
 
 Public Function clone()
        Dim fl As New CPVT
        Call fl.Copy(Me)
        Set clone = fl
 End Function
 
 Public Function Copy(fl As CPVT)
        PVT_CORRELATION = fl.PVT_CORRELATION
        ZNLF = fl.ZNLF
        gamma_o = fl.gamma_o
        gamma_g = fl.gamma_g
        gamma_w = fl.gamma_w
        set_rp_rsb fl.rp_m3m3, fl.rsb_m3m3
        pb_atma = fl.pb_atma
        bob_m3m3 = fl.bob_m3m3
        muob_cP = fl.muob_cP
        tres_C = fl.tres_C
        fw_fr = fl.fw_fr
        qliq_sm3day = fl.qliq_sm3day
        q_gas_free_sm3day = fl.q_gas_free_sm3day
        sigma_oil_gas_Nm = fl.sigma_oil_gas_Nm
        sigma_wat_gas_Nm = fl.sigma_wat_gas_Nm
 End Function
Public Sub calc_PVT_PT(pt As PTtype)
        Call calc_PVT(pt.p_atma, pt.t_C)
End Sub
Public Sub calc_PVT(ByVal p_atma As Double, ByVal t_C As Double)
' расчет свойств воды нефти и газа при заданных давлении и температуре
    Dim T_K As Double  ' internal K temp
    'PVT properties
    Dim rho_o As Double
    Dim bob_m3m3_sat As Double
    'internal buffers used to store output values
    Dim p_bi As Double
    Dim r_si As Double
    Dim rho_o_sat As Double
    Dim p_fact As Double
    Dim p_offs As Double
    Dim b_fact As Double
    Dim mu_fact As Double
    'Oil pressure in MPa
    Dim P_MPa As Double
    Dim Pb_calbr_MPa As Double
    Dim rsb_calbr_m3m3 As Double
    Dim Bo_calbr_m3m3 As Double
    Dim muo_calibr_cP As Double
    Dim ranges_good As Boolean
    Dim mu_deadoil_cP As Double
    Dim Muo_saturated_cP As Double
On Error GoTo err1:
    T_K = t_C + const_t_K_min
    PT_calc_.p_atma = p_atma
    PT_calc_.t_C = t_C
    rsb_calbr_m3m3 = rsb_m3m3
    Bo_calbr_m3m3 = bob_m3m3
    muo_calibr_cP = muob_cP
    P_MPa = p_atma * const_convert_atma_MPa
    'convert user specified bubblepoint pressure
    Pb_calbr_MPa = pb_atma_ * const_convert_atma_MPa    ' изменил чтобы избежать рекурсии при расчете Pb с нулевым значением
    'for saturated oil calibration is applied by application of factor p_fact to input pressure
    'for undersaturated - by shifting according to p_offs
    'calculate PVT properties
    'calculate water properties at current pressure and temperature
    bw_sc_m3m3_ = gamma_w / 1
    salinity_ppm_ = unf_calc_Sal_BwSC_ppm(bw_sc_m3m3_)
    bw_m3m3_ = unf_calc_Bw_m3m3(P_MPa, T_K) '* bw_sc_m3m3_
    mu_wat_cP_ = unf_calc_mu_wat_cP(P_MPa, T_K, salinity_ppm_)   ' откуда тут возьмется соленость?!!!
    'if no calibration gas-oil ratio specified, then set it to some very large value and
    'switch of calibration for bubblepoint and oil formation volume factor
    z_ = unf_calc_Zgas_d(T_K, P_MPa, gamma_g_, zCorr)
    bg_m3m3_ = unf_calc_Bg_z_m3m3(T_K, P_MPa, z_)
    mu_gas_cP_ = unf_calc_mu_gas_cP(T_K, P_MPa, z_, gamma_g_)
    If PVT_CORRELATION = Standing_based Then
            mu_deadoil_cP = unf_DeadOilViscosity_Beggs_Robinson(T_K, gamma_o_) 'dead oil viscosity
            Muo_saturated_cP = unf_SaturatedOilViscosity_Beggs_Robinson(rsb_calbr_m3m3, mu_deadoil_cP) 'saturated oil viscosity Beggs & Robinson
            p_bi = unf_Bubblepoint_Standing(rsb_calbr_m3m3, gamma_g_, t_res_K, gamma_o_)    ' считаем давление насыщения по корреляции Standing для пластовой температуры при которой заданны калибровочные значения
            ' дальше ищем калибровочные коэффициенты
            'Calculate bubble point correction factor
            If (Pb_calbr_MPa > 0) Then 'user specified
                p_fact = p_bi / Pb_calbr_MPa
            Else ' not specified, use from correlations
                p_fact = 1
            End If
            If (Bo_calbr_m3m3 > 0) Then 'Calculate oil formation volume factor correction factor
                bob_m3m3_sat = unf_FVF_Saturated_Oil_Standing(rsb_calbr_m3m3, gamma_g_, t_res_K, gamma_o_)  ' значение по корреляции считаем также для пластовой температуры
                b_fact = (Bo_calbr_m3m3 - 1) / (bob_m3m3_sat - 1)
            Else ' not specified, use from correlations
                b_fact = 1
            End If
            If muo_calibr_cP > 0 Then           ' рассчитаем калибровочный коэффициент для вязкости при давлении насыщения
                mu_fact = muo_calibr_cP / Muo_saturated_cP
            Else
                mu_fact = 1
            End If
            p_bi = unf_Bubblepoint_Standing(rsb_calbr_m3m3, gamma_g_, T_K, gamma_o_)   ' давление насыщения по корреляции при текущей температуре
            P_MPa = P_MPa * p_fact   ' растянем давление чтобы натянуть его на калиброванное значение
            If P_MPa > p_bi Then 'apply correction to undersaturated oil 'undersaturated oil
                 r_si = rsb_calbr_m3m3   ' результат такое будет
                 bob_m3m3_sat = b_fact * (unf_FVF_Saturated_Oil_Standing(rsb_calbr_m3m3, gamma_g_, T_K, gamma_o_) - 1) + 1 ' it is assumed that at pressure 1 atma bo=1
                 copmressibility_o_1atm_ = unf_Compressibility_Oil_VB(rsb_calbr_m3m3, gamma_g_, T_K, gamma_o_, P_MPa) 'calculate compressibility at bubble point pressure
                 bo_m3m3_ = bob_m3m3_sat * Exp(copmressibility_o_1atm_ * (p_bi - P_MPa))
                 mu_oil_cP_ = mu_fact * unf_OilViscosity_Vasquez_Beggs(Muo_saturated_cP, P_MPa, p_bi)  'Vesquez&Beggs
            Else 'apply correction to saturated oil
                r_si = unf_GOR_Standing(P_MPa, gamma_g_, T_K, gamma_o_)
                bo_m3m3_ = b_fact * (unf_FVF_Saturated_Oil_Standing(r_si, gamma_g_, T_K, gamma_o) - 1) + 1 ''Standing. it is assumed that at pressure 1 atma bo=1
                mu_oil_cP_ = mu_fact * unf_SaturatedOilViscosity_Beggs_Robinson(r_si, mu_deadoil_cP)  'Beggs & Robinson
            End If
    End If
    If PVT_CORRELATION = McCain_based Then
            ranges_good = True
            ranges_good = ranges_good And CheckRanges(T_K, "t_K", const_tMcCain_K_min, const_t_K_max, "температура потока вне диапазона для корреляции маккейна", "calc_PVT (McCain)", True)
            mu_deadoil_cP = unf_DeadOilViscosity_Standing(T_K, gamma_o_)  'dead oil viscosity
            Muo_saturated_cP = unf_SaturatedOilViscosity_Beggs_Robinson(rsb_calbr_m3m3, mu_deadoil_cP) 'saturated oil viscosity Beggs & Robinson
            p_bi = unf_Bubblepoint_Valko_McCainSI(rsb_calbr_m3m3, gamma_g_, t_res_K, gamma_o_)
            'Calculate bubble point correction factor
            If (Pb_calbr_MPa > 0) Then 'user specifie
                p_fact = p_bi / Pb_calbr_MPa
            Else ' not specified, use from correlations
                p_fact = 1
            End If
            P_MPa = P_MPa * p_fact
            copmressibility_o_1atm_ = unf_Compressibility_Oil_VB(rsb_calbr_m3m3, gamma_g_, t_res_K, gamma_o, p_bi) 'calculate compressibility at bubble point pressure
            If (Bo_calbr_m3m3 > 0) Then 'Calculate oil formation volume factor correction factor
                  rho_o_sat = unf_Density_McCainSI(p_bi, gamma_g_, t_res_K, gamma_o, rsb_calbr_m3m3, p_bi, copmressibility_o_1atm_)    ' тут формально есть зависимость от сжимаемости но реально она не влияет (так как расчет идет при давлении насыщения)
                  bob_m3m3_sat = unf_FVF_McCainSI(rsb_calbr_m3m3, gamma_g_, gamma_o_ * const_rho_ref, rho_o_sat)
                  b_fact = (Bo_calbr_m3m3 - 1) / (bob_m3m3_sat - 1)
            Else ' not specified, use from correlations
                  b_fact = 1
            End If
            p_bi = unf_Bubblepoint_Valko_McCainSI(rsb_calbr_m3m3, gamma_g_, T_K, gamma_o_)
            r_si = unf_GOR_VelardeSI(P_MPa, p_bi, gamma_g_, T_K, gamma_o_, rsb_calbr_m3m3)
            If P_MPa > p_bi Then 'apply correction to undersaturated oil
                  copmressibility_o_1atm_ = unf_Compressibility_Oil_VB(rsb_calbr_m3m3, gamma_g_, T_K, gamma_o_, P_MPa)  'calculate compressibility at bubble point pressure
                  rho_o_sat = unf_Density_McCainSI(p_bi, gamma_g_, T_K, gamma_o_, rsb_calbr_m3m3, p_bi, copmressibility_o_1atm_)
                  bob_m3m3_sat = unf_FVF_McCainSI(rsb_calbr_m3m3, gamma_g_, gamma_o_ * const_rho_ref, rho_o_sat)
                  bob_m3m3_sat = b_fact * (bob_m3m3_sat - 1) + 1 ' it is assumed that at pressure 1 atma bo=1
                  bo_m3m3_ = bob_m3m3_sat * Exp(copmressibility_o_1atm_ * (p_bi - P_MPa))
            Else 'apply correction to saturated oil
                  rho_o = unf_Density_McCainSI(P_MPa, gamma_g_, T_K, gamma_o_, r_si, p_bi, copmressibility_o_1atm_)
                  bo_m3m3_ = b_fact * (unf_FVF_McCainSI(r_si, gamma_g_, gamma_o_ * const_rho_ref, rho_o) - 1) + 1 ' it is assumed that at pressure 1 atma bo=1
            End If
            If muo_calibr_cP > 0 Then           ' рассчитаем калибровочный коэффициент для вязкости при давлении насыщения
                  If (rsb_calbr_m3m3 < 350) Then
                       mu_fact = muo_calibr_cP / unf_Oil_Viscosity_Standing(rsb_calbr_m3m3, mu_deadoil_cP, p_bi, p_bi)
                  Else
                        mu_fact = muo_calibr_cP / Muo_saturated_cP
                  End If
            Else
                  mu_fact = 1
            End If
            If (rsb_calbr_m3m3 < 350) Then 'Calculate oil viscosity acoording to Standing
                  mu_oil_cP_ = mu_fact * unf_Oil_Viscosity_Standing(r_si, mu_deadoil_cP, P_MPa, p_bi)
            Else 'Calculate according to Begs&Robinson (saturated) and Vasquez&Begs (undersaturated)
               If P_MPa > p_bi Then 'undersaturated oil
                  mu_oil_cP_ = mu_fact * unf_OilViscosity_Vasquez_Beggs(Muo_saturated_cP, P_MPa, p_bi)
               Else 'saturated oil
                 'Beggs & Robinson
                 mu_oil_cP_ = mu_fact * unf_SaturatedOilViscosity_Beggs_Robinson(r_si, mu_deadoil_cP)
               End If
            End If
    End If
    If PVT_CORRELATION = 2 Then  'Debug mode. Linear Rs and bo vs P, Pb_calbr_atma should be specified.
         'gas properties
         z_ = 0.95 'ideal gas
         bg_m3m3_ = unf_calc_Bg_z_m3m3(T_K, P_MPa, z_)
         mu_gas_cP_ = 0.0000000001
         p_fact = 1         'Set to default. b_rb should be specified by user!
         p_offs = 0
         If Pb_calbr_MPa <= 0 Then
            ' can not be estimated without calibration properties
            Err.Raise kErrPVTinput, "CPVT.calc_PVT", "PVT correlation = 2 without Pb input not allowed"
         End If
         p_bi = Pb_calbr_MPa
         If P_MPa > (p_bi) Then 'undersaturated oil
            r_si = rsb_calbr_m3m3
         Else 'saturate
            r_si = P_MPa / Pb_calbr_MPa * rsb_calbr_m3m3
         End If
         'if bob_m3m3 is not specified by the user then
         'set bob_m3m3 so, that oil density, recalculated with Rs_m3m3 would be equal to dead oil density
         If (Bo_calbr_m3m3 <= 0) Then
            addLogMsg ("warning:CPVT.calc_PVT, PVT correlation = 2 without Bob input")
            bo_m3m3_ = (1 + r_si * (gamma_g_ * const_rho_air) / (gamma_o_ * const_rho_ref))
         Else
            If P_MPa > (p_bi) Then 'undersaturated oil
                bo_m3m3_ = Bo_calbr_m3m3
            Else 'saturate
                bo_m3m3_ = 1 + (Bo_calbr_m3m3 - 1) * ((P_MPa - const_convert_atma_MPa) / (p_bi - const_convert_atma_MPa))
            End If
         End If
         If muo_calibr_cP >= 0 Then
             mu_oil_cP_ = muo_calibr_cP
         Else
            addLogMsg ("warning:CPVT.calc_PVT, PVT correlation = 2 without Muob input")
            mu_oil_cP_ = 1
         End If
    End If
    'Assign output variables
    pb_calc_atma_ = p_bi / p_fact / const_convert_atma_MPa
    rs_m3m3_ = r_si
    mu_deadoil_cP_ = mu_deadoil_cP
    q_oil_rc_m3day_ = qliq_sm3day_ * (1 - fw_fr_) * bo_m3m3_   ' для ускорения расчетов потом все что можно подсчитаем тут
    q_wat_rc_m3day_ = qliq_sm3day_ * fw_fr_ * bw_m3m3_
    q_gas_rc_m3day_ = (qliq_sm3day_ * (1 - fw_fr_) * rp_m3m3_ + q_gas_free_sm3day_ - rs_m3m3_ * qliq_sm3day_ * (1 - fw_fr_)) * bg_m3m3_
    qliq_rc_m3day_ = q_wat_rc_m3day_ + q_oil_rc_m3day_
    If (q_wat_rc_m3day_ + q_oil_rc_m3day_ + q_gas_rc_m3day_) > 0 Then
        gas_fraction_d_ = q_gas_rc_m3day_ / (q_wat_rc_m3day_ + q_oil_rc_m3day_ + q_gas_rc_m3day_)
        If qliq_rc_m3day_ > 0 Then
            mu_mix_cP_ = (mu_oil_cP_ * q_oil_rc_m3day_ / qliq_rc_m3day_ + _
                      mu_wat_cP_ * q_wat_rc_m3day_ / qliq_rc_m3day_) * (1 - gas_fraction_d_) + _
                      mu_gas_cP_ * (1 - gas_fraction_d_)
        Else
            mu_mix_cP_ = mu_gas_cP_
        End If
    Else
        gas_fraction_d_ = 0
        mu_mix_cP_ = 0
    End If
    rho_oil_rc_kgm3_ = 1000 * (gamma_o_ + rs_m3m3_ * gamma_g_ * const_rho_air / 1000) / bo_m3m3_
    rho_wat_rc_kgm3_ = 1000 * (gamma_w_) / bw_m3m3_
    rho_liq_rc_kgm3_ = (1 - fw_fr_) * rho_oil_rc_kgm3 + fw_fr_ * rho_wat_rc_kgm3
    rho_mix_rc_kgm3_ = rho_liq_rc_kgm3 * (1 - f_g) + rho_gas_rc_kgm3 * f_g
    Call calc_ST(p_atma, t_C)
    Exit Sub
err1:
    Dim errmsg As String
    errmsg = "Error:CPVT.calc_PVT:" & Err.Description
    addLogMsg (errmsg)
    Err.Raise kErrPVTcalc, "CPVT.calc_PVT", errmsg
End Sub
Private Sub calc_ST(ByVal p_atma As Double, ByVal t_C As Double)
' calculate surface tension according Baker Sverdloff correlation
On Error GoTo err1:
'Расчет коэффициента поверхностного натяжения газ-нефть
    Dim ST68 As Double, ST100 As Double
    Dim STw74 As Double, STw280 As Double
    Dim Tst As Double, Tstw As Double
    Dim STo As Double, STw As Double, ST As Double
    Dim t_F As Double
    Dim P_psia As Double, P_MPa As Double
        t_F = t_C * 1.8 + 32
        P_psia = p_atma / 0.068046
        P_MPa = p_atma / 10
        ST68 = 39 - 0.2571 * oil_API
        ST100 = 37.5 - 0.2571 * oil_API
        If t_F < 68 Then
            STo = ST68
        Else
            Tst = t_F
            If t_F > 100 Then Tst = 100
            STo = (68 - (((Tst - 68) * (ST68 - ST100)) / 32)) * (1 - (0.024 * (P_psia) ^ 0.45))
            If STo < 0 Then STo = ST68  ' todo rnt20190312 надо будет исправить когда то
        End If
        'Расчет коэффициента поверхностного натяжения газ-вода  (два способа)
        STw74 = (75 - (1.108 * (P_psia) ^ 0.349))
        STw280 = (53 - (0.1048 * (P_psia) ^ 0.637))
        If t_F < 74 Then
            STw = STw74
        Else
            Tstw = t_F
            If t_F > 280 Then Tstw = 280
            STw = STw74 - (((Tstw - 74) * (STw74 - STw280)) / 206)
        End If
        ' далее второй способ
        STw = 10 ^ (-(1.19 + 0.01 * P_MPa)) * 1000
        ' Расчет коэффициента поверхностного натяжения газ-жидкость
        ST = (STw * fw_fr_) + STo * (1 - fw_fr_)
        ST_oilgas_dyncm_ = STo
        ST_watgas_dyncm_ = STw
        ST_liqgas_dyncm_ = ST
    Exit Sub
err1:
    Dim errmsg As String
    errmsg = "Error:CPVT.calc_ST:" & Err.Description
    addLogMsg (errmsg)
    Err.Raise kErrPVTcalc, "CPVT.calc_ST", errmsg
End Sub
Public Function calc_rs_m3m3(ByVal p_atma As Double, ByVal t_C As Double) As Double
'function calculates solution gas oil ratio
    Call calc_PVT(p_atma, t_C)
    calc_rs_m3m3 = rs_m3m3_
End Function
Public Function calc_pb_atma(ByVal rsb_m3m3 As Double, ByVal t_C As Double) As Double
'function calculates oil bubble point pressure
    rsb_m3m3_ = rsb_m3m3
    Call calc_PVT(1, t_C)
    calc_pb_atma = pb_calc_atma_
End Function
Public Function calc_bo_m3m3(ByVal p_atma As Double, ByVal t_C As Double) As Double
'Function calculates oil formation volume factor
    Call calc_PVT(p_atma, t_C)
    calc_bo_m3m3 = bo_m3m3_
End Function
Public Function calc_mu_oil_cP(ByVal p_atma As Double, ByVal t_C As Double) As Double
'function calculates oil viscosity
    Call calc_PVT(p_atma, t_C)
    calc_mu_oil_cP = mu_oil_cP_
End Function
Public Function gas_fraction_d(Optional ByVal Ksep As Double = 0) As Double
' метод расчета доли газа в потоке для заданной жидкости при заданных условиях
' предполагается что свойства нефти газа и воды уже расчитаны и заданы при необходимых условиях
On Error GoTo err1:
    Dim q_mix_ As Double
    gas_fraction_d = 0
    q_mix_ = q_mix_rc_m3day   ' сохраним чтобы немного сэкономить на проверку нулевого значения
    If q_mix_ > 0 And Ksep >= 0 And Ksep < 1 Then
        gas_fraction_d = q_gas_rc_m3day * (1 - Ksep) / (q_wat_rc_m3day + q_oil_rc_m3day + q_gas_rc_m3day * (1 - Ksep))
    End If
    Exit Function
err1:
    Dim errmsg As String
    errmsg = "Error:CPVT.gas_fraction_d:" & Err.Description
    addLogMsg errmsg
    gas_fraction_d = 0
End Function
Public Function p_gas_fraction_atma(FreeGas, t_C As Double, Optional Es As Double = 0, Optional P_init_atma = 300) As Double
    'P_init     - давление инициализации, атм
    'FreeGas    - доля газ на приеме целевая
    'Es         - коэффициент сепарации насоса
    Dim p1 As Double
    Dim p2 As Double
    Dim max_iter As Integer, i As Integer
    Dim E As Double
    Dim p_gas As Double, p As Double
    max_iter = 100
    E = 0.0001
    p1 = P_init_atma
    p2 = 0
On Error GoTo err1:
    For i = 1 To max_iter
        p = (p1 + p2) / 2
        Call calc_PVT(p, t_C)
        p_gas = gas_fraction_d(Es)
        If Abs(p_gas - FreeGas) <= E Then Exit For
        If p_gas > FreeGas Then
           p2 = p
        Else
           p1 = p
        End If
    Next
    p_gas_fraction_atma = p
    Exit Function
err1:
    p_gas_fraction_atma = 0
End Function
Public Function rp_gas_fraction_m3m3(FreeGas, p_atma As Double, t_C As Double, Optional Es As Double = 0, Optional Rp_init_m3m3 = 500) As Double
    'P_init     - давление инициализации, атм
    'FreeGas    - доля газ на приеме целевая
    'Es         - коэффициент сепарации насоса
    Dim G1 As Double
    Dim g2 As Double
    Dim max_iter As Integer, i As Integer
    Dim E As Double
    Dim p_gas As Double, g As Double
    max_iter = 100
    E = 0.0001
    G1 = Rp_init_m3m3
    g2 = 0
On Error GoTo err1:
    For i = 1 To max_iter
        g = (G1 + g2) / 2
        rp_m3m3 = g
        Call calc_PVT(p_atma, t_C)
        p_gas = gas_fraction_d(Es)
        If Abs(p_gas - FreeGas) <= E Then Exit For
        If p_gas > FreeGas Then
           G1 = g
        Else
           g2 = g
        End If
    Next
    rp_gas_fraction_m3m3 = g
    Exit Function
err1:
    rp_gas_fraction_m3m3 = 0
End Function
Public Function get_clone_mod_after_separation(p_atma As Double, t_C As Double, Ksep As Double, _
                                         Optional ByVal GasSol As GAS_INTO_SOLUTION = GasnotGoesIntoSolution) As CPVT
    Dim newfluid As CPVT
    Set newfluid = Me.clone
    Call newfluid.mod_after_separation(p_atma, t_C, Ksep, GasSol)
    Set get_clone_mod_after_separation = newfluid
End Function
Public Sub mod_after_separation(ByVal p_atma As Double, ByVal t_C As Double, ByVal Ksep As Double, _
                                         Optional ByVal GasSol As GAS_INTO_SOLUTION = GasnotGoesIntoSolution) 'As CPVT
' функция модификации свойств нефти после сепарации
' удаление части газа меняет свойства нефти - причем добавление газа свойства не трогает
' на входе условия при которых проходила сепарация
    Dim Rs As Double
    Dim Bo As Double
    Dim Pb_Rs_curve As New CInterpolation ' хранилище кривой зависимости газосодержания от давления насыщения
    Dim Bo_Rs_curve As New CInterpolation
    Dim pb_atma_tab As Double, rsb_m3m3_tab As Double, Bo_m3m3_tab As Double
    Dim Delta As Double
    Dim i As Integer
    Const n = 10
    Dim Rpnew_with_Ksep As Double   ' новый ГФ с учетом сепарации газа
    Dim Rpnew_Ksep_1 As Double      ' новый ГФ без учета сепарации
    Dim Rpnew As Double
        ' найдем сколько газа осталось в растворе при условиях сепарации
On Error GoTo err1:
        
    With Me
        Rs = .calc_rs_m3m3(p_atma, t_C)
        Bo = .calc_bo_m3m3(p_atma, t_C)
        
        ' оценим как изменится газовый фактор за счет ухода части газа из потока
        ' оцениваем двумя способами - буду влиять на работу опции растворения газа (фазовой неравновесности)
        '   - с учетом сепарации (показывает новый ГФ если газ может потом растворяться)
        '   - без учета сепарации (Ksep = 1 показывает ГФ если газ может только сжиматься)
        
        Rpnew_with_Ksep = .rp_m3m3 - (.rp_m3m3 - Rs) * Ksep
        Rpnew_Ksep_1 = .rp_m3m3 - (.rp_m3m3 - Rs)
        
        
        Delta = (.pb_atma - 1) / n    ' считать будет только в диапазоне где определены Pb за ним будет линейно экстраполировать
        ' запишем зависимость газосодержания от давления насыщения на память
        For i = 0 To n
            pb_atma_tab = 1 + Delta * i
            rsb_m3m3_tab = .calc_rs_m3m3(pb_atma_tab, .tres_C)
            Pb_Rs_curve.AddPoint rsb_m3m3_tab, pb_atma_tab
            Bo_m3m3_tab = .calc_bo_m3m3(pb_atma_tab, .tres_C)
            Bo_Rs_curve.AddPoint rsb_m3m3_tab, Bo_m3m3_tab
        Next i
        ' найдем сколько всего газа осталось в потоке
        
        If GasSol = GasGoesIntoSolution Then   ' тогда газ успеет растворится
            Rpnew = Rpnew_with_Ksep
        Else                                   ' газ не растворяется, то же самое, что Ксеп = 1
            Rpnew = Rpnew_Ksep_1
        End If
        
        If Rpnew < .rsb_m3m3 Then
            ' Если газовый фактор становится меньше газосодержания, тогда надо скорректировать газосодержание и давление насыщения,
            ' которое будет от него зависеть
            .pb_atma = Pb_Rs_curve.getPoint(Rpnew)
            .bob_m3m3 = Bo_Rs_curve.getPoint(Rpnew)
            .rsb_m3m3 = Rpnew
            ' иначе газа из раствора не сепарировался - свойства не менялись ничего делать не надо
        End If
        ' итоговый газовый фактор всегда с учетом сепараци
        .rp_m3m3 = Rpnew_with_Ksep
    End With
     Exit Sub
err1:
    Dim errmsg As String
    errmsg = "Error:CPVT.mod_after_separation:" & Err.Description
    addLogMsg errmsg
    Err.Raise kErrPVTcalc, "CPVT.mod_after_separation", errmsg
End Sub

