'=======================================================================================
'Unifloc 7.17  Test                                          khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
'
' база характеристик погружного оборудования - ЭЦН и пр
' умеет считывать базу и проводить по ней поиск и анализ
Option Explicit
' класс для доступа к базе насосов
Private ESPload As CESPpump
Private SpreadSheetName_ESP_ As String
Private Motorload As CESPMotor   ' считыватель для двигателей
Private SpreadSheetName_Motor_ As String
Public ESPcollection As New Collection
Public MotorCollection As New Collection  ' список всех двигателей в базе
Public Function num_pumps() As Integer
    num_pumps = ESPcollection.Count
End Function
Public Function get_best_pump(q_mix_rc_m3day As Double) As CESPpump
    Dim ESP As CESPpump
    Dim maxEff As Double
    Dim CurEff As Double
    maxEff = 0
     
     For Each ESP In ESPcollection
         CurEff = ESP.get_ESP_effeciency_fr(q_mix_rc_m3day)
         If CurEff > maxEff Then
            maxEff = CurEff
            Set get_best_pump = ESP
         End If
     Next
     If maxEff = 0 Then get_best_pump = Nothing
End Function
Private Sub clear_db()
  Dim i As Long
  
  For i = 1 To ESPcollection.Count      ' Remove name from the collection.
        ESPcollection.Remove 1          ' Since collections are reindexed
                                        ' automatically, remove the first
  Next                                  ' member on each iteration.
  
  For i = 1 To MotorCollection.Count    ' Remove name from the collection.
        MotorCollection.Remove 1        ' Since collections are reindexed
                                        ' automatically, remove the first
  Next                                  ' member on each iteration.
End Sub
Public Sub load_db_ESP(ESP_sheet)
' load all pumps from db here
    Dim i As Long, j As Integer, num As Integer
    Dim StartCell As Long
    Dim EndCell As Long
    Dim currID As Integer, currIDnew As Integer
    Dim frNom As Double
    Dim num_pumps As Integer
    Dim esp_db As ESP_PARAMS
    Dim rateRange
    Dim headRange
    Dim powerRange
    Dim effRange
    Dim Item
    Dim Index
    Dim zero_found As Boolean
    Dim res
           
    num_pumps = 0
    Call clear_db
    i = 4   ' все начинается с 4 строки
    
    With ESP_sheet
        Do
            StartCell = i
            currID = .Cells(i, 2)
            Do
                EndCell = i
                i = i + 1
                currIDnew = .Cells(i, 2)
            Loop Until currIDnew <> currID Or currID = 0
            
            If EndCell - StartCell > 3 Then
       On Error GoTo err_load_pump:
                Set ESPload = New CESPpump
                
                num = EndCell - StartCell + 1 ' num point in pump characteristic
                rateRange = .range(.Cells(StartCell, 12), .Cells(EndCell, 12)).Value2
                headRange = .range(.Cells(StartCell, 13), .Cells(EndCell, 13)).Value2
                powerRange = .range(.Cells(StartCell, 14), .Cells(EndCell, 14)).Value2
                effRange = .range(.Cells(StartCell, 15), .Cells(EndCell, 15)).Value2
                
                frNom = .Cells(StartCell, 10).Value2
                esp_db.freq_Hz = frNom
                
                ReDim esp_db.head_points(1 To num)
                ReDim esp_db.rate_points(1 To num)
                ReDim esp_db.power_points(1 To num)
                ReDim esp_db.eff_points(1 To num)
                                
                For j = 1 To num
                       esp_db.head_points(j) = headRange(j, 1)
                       esp_db.rate_points(j) = rateRange(j, 1)
                       esp_db.power_points(j) = powerRange(j, 1)
                       esp_db.eff_points(j) = effRange(j, 1)
                Next j
                ' read all data from furst line in DB table
                esp_db.ID = currID
                esp_db.manufacturer = .Cells(StartCell, 3).Value2
                esp_db.name = .Cells(StartCell, 4).Value2
                esp_db.stages_max = .Cells(StartCell, 5).Value2
                esp_db.rate_nom_m3day = .Cells(StartCell, 6).Value2
                esp_db.rate_opt_min_m3day = .Cells(StartCell, 7).Value2
                esp_db.rate_opt_max_m3day = .Cells(StartCell, 8).Value2
                esp_db.w_nom_slip_rpm = .Cells(StartCell, 9).Value2
                esp_db.eff_max = .Cells(StartCell, 11).Value2
                
                
                ' оценим максимальную точку характеристики заданной в базе
                
                esp_db.rate_max_m3day = 0
                zero_found = False
                For j = 1 To num
                    If esp_db.rate_max_m3day < esp_db.rate_points(j) Then
                        esp_db.rate_max_m3day = esp_db.rate_points(j)
                        If esp_db.head_points(j) = 0 Then
                            zero_found = True
                            Exit For
                        End If
                    End If
                Next j
                If Not zero_found Then
                ' найдем zero
                    res = crv_solve(esp_db.rate_points, esp_db.head_points, 0)
                    esp_db.rate_max_m3day = res(1)
                End If
                
                ESPload.db = esp_db
                ESPcollection.Add ESPload, CStr(currID)
                num_pumps = num_pumps + 1
next_pump:
            End If
        Loop Until currID = 0
    End With
    Exit Sub
    
err_load_pump:
   ' On Error Resume Next
    addLogMsg "Problem while loading pump . " & CStr(currID) & " " & Err.Description
    Resume next_pump:
End Sub
Private Sub Class_Initialize()
    SpreadSheetName_ESP_ = "ESPbase"
    'Call load_db_ESP
    SpreadSheetName_Motor_ = "База двигателей"
End Sub
Public Function get_pump(ByVal ID As Integer) As CESPpump
    On Error GoTo err1:
        Set get_pump = ESPcollection.Item(CStr(ID))
    Exit Function
err1:
        addLogMsg "Ошибка при загрузке из базы насоса ID = " & ID & " ."
        Err.Raise kErrESPbase, , "Не удалось найти насос " & ID & " в базе"
End Function
Public Sub loadDB_Motor()
' метод загрузки базы двигателей
'Dim i As Long
'Dim StartCell As Long
'Dim EndCell As Long
'Dim currID As Integer, currIDnew As Integer
'Dim frNom As Double
'Dim num_pumps As Integer
'num_pumps = 0
'Dim Item
'Dim Index
'Call clear_db
'i = 4   ' все начинается с 4 строки
'With Worksheets(SpreadSheetName_Motor_)
'Do
'    StartCell = i
'    EndCell = i    ' вся информация по двигателю хранится в одной строке пока
'
'    currID = .Cells(i, 2)
'
'    If currID > 0 Then    ' если есть ID в базе считаем, что там есть данные
'
'
'        Set Motorload = New CESPMotor
'        Motorload.ID = .Cells(StartCell, 2)
'        Motorload.manufacturer_name = .Cells(StartCell, 3)
'        Motorload.MotorName = .Cells(StartCell, 4)
'        Motorload.Pnom_kW = .Cells(StartCell, 5)
'        Motorload.Unom_lin_V = .Cells(StartCell, 6)
'        Motorload.Inom_lin_A = .Cells(StartCell, 7)
'        Motorload.Effnom_d = .Cells(StartCell, 8)
'        Motorload.CosPhinom_d = .Cells(StartCell, 9)
'        Motorload.Snom_d = .Cells(StartCell, 10)
'
'        Motorload.minDcas_mm = .Cells(StartCell, 11)
'        Motorload.minVliq_msec = .Cells(StartCell, 12)
'        Motorload.NumSections = .Cells(StartCell, 13)
'        Motorload.Length_m = .Cells(StartCell, 14)
'        Motorload.M_kg = .Cells(StartCell, 15)
'
'        Motorload.Lambda_d = .Cells(StartCell, 16)
'
'
'        MotorCollection.Add Motorload, CStr(currID)
'
'    End If
'    i = i + 1
'Loop Until currID = 0
'End With
End Sub
Public Function get_motor(ID As Integer) As CESPMotor
On Error GoTo err1:
    Set get_motor = MotorCollection.Item(CStr(ID))
Exit Function
err1:
    addLogMsg "Ошибка при загрузке из базы двигателя ID = " & ID & " ."
End Function

