'=======================================================================================
'Unifloc 7.17  Test                                          khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
'
' база характеристик погружного оборудования - ЭЦН и пр
' умеет считывать базу и проводить по ней поиск и анализ
Option Explicit
' класс для доступа к базе насосов
Private ESPload As CESPpump
Private SpreadSheetName_ESP_ As String
Private Motorload As CESPMotor   ' считыватель для двигателей
Private SpreadSheetName_Motor_ As String
Public ESPcollection As New Collection
Public MotorCollection As New Collection  ' список всех двигателей в базе
Public Function num_pumps() As Integer
    num_pumps = ESPcollection.Count
End Function
Public Function get_best_pump(q_mix_rc_m3day As Double) As CESPpump
    Dim ESP As CESPpump
    Dim maxEff As Double
    Dim CurEff As Double
    maxEff = 0
     
     For Each ESP In ESPcollection
         CurEff = ESP.get_ESP_effeciency_fr(q_mix_rc_m3day)
         If CurEff > maxEff Then
            maxEff = CurEff
            Set get_best_pump = ESP
         End If
     Next
     If maxEff = 0 Then get_best_pump = Nothing
End Function
Private Sub clear_db()
  Dim i As Long
  
  For i = 1 To ESPcollection.Count      ' Remove name from the collection.
        ESPcollection.Remove 1          ' Since collections are reindexed
                                        ' automatically, remove the first
  Next                                  ' member on each iteration.
  
  For i = 1 To MotorCollection.Count    ' Remove name from the collection.
        MotorCollection.Remove 1        ' Since collections are reindexed
                                        ' automatically, remove the first
  Next                                  ' member on each iteration.
End Sub
Private Function create_arr(line_from_file)
    Dim num As Integer
    Dim i As Integer
    Dim ar   ' list of data items in line
    Dim ar_out
    Dim ar_temp
    
    ar = Split(line_from_file, ";")
    num = UBound(ar) - LBound(ar) + 1
    
    ReDim ar_out(LBound(ar) To UBound(ar))
    For i = LBound(ar) To UBound(ar)
        ReDim ar_temp(0 To 0)
        ar_temp(0) = CDbl_safe(ar(i))
        ar_out(i) = ar_temp
    Next i
    create_arr = ar_out
End Function
Private Sub update_arr(line_from_file, ByRef arr_in)
    Dim ar
    Dim ar_out
    Dim num As Integer
    Dim num_in As Integer
    Dim num_pt As Integer
    Dim i As Integer
    Dim ar_list
    Dim ar_temp
    
    ar = Split(line_from_file, ";")
    num = UBound(ar) - LBound(ar) + 1
    num_in = UBound(arr_in(0)) - LBound(arr_in(0)) + 1
    num_pt = UBound(arr_in) - LBound(arr_in) + 1
    
    If num > num_pt Then
        Debug.Print "esp.db strange behavior detected"
    End If
    
    ReDim Preserve arr_in(0 To num_pt)
    For i = LBound(ar) To UBound(ar)
        ar_temp = arr_in(i)
        ReDim Preserve ar_temp(0 To num_in)
        ar_temp(num_in) = CDbl_safe(ar(i))
        arr_in(i) = ar_temp
    Next i
 
End Sub
Public Sub load_db_file_ESP(ESP_db_file)
' load all pumps from db file here
    Dim i As Long, j As Integer, num As Integer
    Dim num_pumps As Integer
    Dim esp_db As ESP_PARAMS
    Dim zero_found As Boolean
    Dim res
    Dim line_from_file As String
    Dim ar0, ar, ar2
    Dim ID
           
    ReDim ar2(0)
    num_pumps = 0
    Call clear_db
On Error GoTo err_load_pump:
    i = 4   ' все начинается с 4 строки
    Open ESP_db_file For Input As #1
    ' read first line with titles
    Line Input #1, line_from_file
    ar0 = Split(line_from_file, ";")
    ID = ar0(0)
                
                
    Do While Not EOF(1)
        Line Input #1, line_from_file
        ar = Split(line_from_file, ";")
        If ID <> ar(0) Then
            If UBound(ar2) > 3 Then
                num = UBound(ar2(10)) + 1
                    
                ReDim esp_db.head_points(1 To num)
                ReDim esp_db.rate_points(1 To num)
                ReDim esp_db.power_points(1 To num)
                ReDim esp_db.eff_points(1 To num)
                                
                For j = 1 To num
                       esp_db.head_points(j) = ar2(11)(j - 1)
                       esp_db.rate_points(j) = ar2(10)(j - 1)
                       esp_db.power_points(j) = ar2(12)(j - 1)
                       esp_db.eff_points(j) = ar2(11)(j - 1)
                Next j
                       
                ' read all data from furst line in DB table
                esp_db.ID = ar2(0)(0)
                esp_db.manufacturer = ar2(1)(0)
                esp_db.name = ar2(2)(0)
                esp_db.stages_max = ar2(3)(0)
                esp_db.rate_nom_sm3day = ar2(4)(0)
                esp_db.rate_opt_min_sm3day = ar2(5)(0)
                esp_db.rate_opt_max_sm3day = ar2(6)(0)
                esp_db.w_nom_slip_rpm = ar2(7)(0)
                esp_db.freq_Hz = ar2(8)(0)
                esp_db.eff_max = ar2(9)(0)
                    
                    ' оценим максимальную точку характеристики заданной в базе
                    
                esp_db.rate_max_sm3day = 0
                zero_found = False
                For j = 1 To num
                    If esp_db.rate_max_sm3day < esp_db.rate_points(j) Then
                        esp_db.rate_max_sm3day = esp_db.rate_points(j)
                        If esp_db.head_points(j) = 0 Then
                            zero_found = True
                            Exit For
                        End If
                    End If
                Next j
                If Not zero_found Then
                ' найдем zero
                    res = crv_solve(esp_db.rate_points, esp_db.head_points, 0)
                    esp_db.rate_max_sm3day = res(1)
                End If
                
                Set ESPload = New CESPpump
                ESPload.db = esp_db
                ESPcollection.Add ESPload, CStr(esp_db.ID)
                num_pumps = num_pumps + 1
                
            End If
            
            ar2 = create_arr(line_from_file)
            ID = ar(0)
        Else
            update_arr line_from_file, ar2
        End If
next_pump:
    Loop
    Close #1
    Exit Sub
    
err_load_pump:
   ' On Error Resume Next
    addLogMsg "Problem while loading pump . " & CStr(ID) & " " & Err.Description
    Resume next_pump:
End Sub
Private Sub Class_Initialize()
    SpreadSheetName_ESP_ = "ESPbase"
    'Call load_db_ESP
    SpreadSheetName_Motor_ = "База двигателей"
End Sub
Public Function get_pump(ByVal ID As Integer) As CESPpump
    On Error GoTo err1:
        Set get_pump = ESPcollection.Item(CStr(ID))
    Exit Function
err1:
        addLogMsg "Ошибка при загрузке из базы насоса ID = " & ID & " ."
        Err.Raise kErrESPbase, , "Не удалось найти насос " & ID & " в базе"
End Function
Public Sub loadDB_Motor()
' метод загрузки базы двигателей
'Dim i As Long
'Dim StartCell As Long
'Dim EndCell As Long
'Dim currID As Integer, currIDnew As Integer
'Dim frNom As Double
'Dim num_pumps As Integer
'num_pumps = 0
'Dim Item
'Dim Index
'Call clear_db
'i = 4   ' все начинается с 4 строки
'With Worksheets(SpreadSheetName_Motor_)
'Do
'    StartCell = i
'    EndCell = i    ' вся информация по двигателю хранится в одной строке пока
'
'    currID = .Cells(i, 2)
'
'    If currID > 0 Then    ' если есть ID в базе считаем, что там есть данные
'
'
'        Set Motorload = New CESPMotor
'        Motorload.ID = .Cells(StartCell, 2)
'        Motorload.manufacturer_name = .Cells(StartCell, 3)
'        Motorload.MotorName = .Cells(StartCell, 4)
'        Motorload.Pnom_kW = .Cells(StartCell, 5)
'        Motorload.Unom_lin_V = .Cells(StartCell, 6)
'        Motorload.Inom_lin_A = .Cells(StartCell, 7)
'        Motorload.Effnom_d = .Cells(StartCell, 8)
'        Motorload.CosPhinom_d = .Cells(StartCell, 9)
'        Motorload.Snom_d = .Cells(StartCell, 10)
'
'        Motorload.minDcas_mm = .Cells(StartCell, 11)
'        Motorload.minVliq_msec = .Cells(StartCell, 12)
'        Motorload.NumSections = .Cells(StartCell, 13)
'        Motorload.Length_m = .Cells(StartCell, 14)
'        Motorload.M_kg = .Cells(StartCell, 15)
'
'        Motorload.Lambda_d = .Cells(StartCell, 16)
'
'
'        MotorCollection.Add Motorload, CStr(currID)
'
'    End If
'    i = i + 1
'Loop Until currID = 0
'End With
End Sub
Public Function get_motor(ID As Integer) As CESPMotor
On Error GoTo err1:
    Set get_motor = MotorCollection.Item(CStr(ID))
Exit Function
err1:
    addLogMsg "Ошибка при загрузке из базы двигателя ID = " & ID & " ."
End Function

