''=======================================================================================
''Unifloc 7.7  Vulpes zerda                                           khabibullin.ra@gubkin.ru
''Petroleum engineering calculations modules (macroses)
''2000 - 2019
''
''=======================================================================================
'Функция для вычисления соответствующего диаметра порта клапана через заданный расход газа и давления в затрубе и в НКТ на глубине клапан
'Для вычисления используется уравнение Thornhill-Crave
'Возвращает диаметр порта клапана в мм
Public Function GL_dchoke_mm(Qg_m3d As Double, Pu_atma As Double, Pd_atma As Double, gamma_g As Double, Tu_C As Double)
On Error GoTo err1:
    If Qg_m3d <= 0 Then
        GL_dchoke_mm = 0
        Exit Function
    End If
    
    If Pu_atma < Pd_atma Then
        GL_dchoke_mm = -1
        Exit Function
    End If
    Dim K As Double
    K = 1.31   ' = Cp/Cv (approx 1.31 for natural gases(R Brown) or 1.25 (Mischenko) )
    
    Dim Pu_psi As Double
    Dim Pd_psi As Double
    Pu_psi = Pu_atma * 14.2233 'upstream pressure, psi
    Pd_psi = Pd_atma * 14.2233 'downstream pressure, psi
    
    Dim Tu_F As Double
    Tu_F = Tu_C / 100 * 180 + 32
    
    Dim CD As Double  ' discharge coefficient
    CD = 0.865
    
    Dim G As Double
    G = 32.17 'ft/sec^2
    
    Dim Qg_Mcfd As Double
    Qg_Mcfd = Qg_m3d / 28.31993658
    
    Dim Pd_Pu_crit As Double
    Pd_Pu_crit = (2 / (K + 1)) ^ (K / (K - 1))
    
    Dim Pd_Pu As Double
    Pd_Pu = Pd_atma / Pu_atma
    
    Dim C0 As Double, C1 As Double, c2 As Double
    C0 = ((Pd_Pu ^ (2 / K) - Pd_Pu ^ (1 + 1 / K))) ^ 0.5
    C1 = (Pd_Pu_crit ^ (2 / K) - Pd_Pu_crit ^ (1 + 1 / K)) ^ 0.5
    c2 = (2 * G * K / (K - 1)) ^ 0.5
    
    Dim A As Double
    
    If Pd_Pu <= Pd_Pu_crit Then
        A = Qg_Mcfd / (155.5 * CD * Pu_psi * C1 * c2 / (gamma_g * (Tu_F + 460)) ^ 0.5)
    Else
        A = Qg_Mcfd / (155.5 * CD * Pu_psi * C0 * c2 / (gamma_g * (Tu_F + 460)) ^ 0.5)
    End If
    
    Dim d_in As Double
    d_in = (A * 4 / Application.Pi) ^ 0.5
    
    GL_dchoke_mm = d_in / 0.03937
    
    
    Exit Function
err1:
    GL_dchoke_mm = -1
    addLogMsg "error in function : GL_dchoke_mm"
End Function
Function GL_dPgasPipe_atmg(ByVal H_m As Double, ByVal P_atmg As Double, ByVal t_C As Double, _
                               Optional ByVal d_cas_mm As Double = 125, _
                               Optional ByVal dtub_mm As Double = 73, _
                               Optional ByVal gamma_gas As Double = 0.8, _
                               Optional ByVal Qg_scm3day As Double = 10000, _
                               Optional ByVal roughness As Double = 0.001, _
                               Optional ByVal THETA As Double = 90 _
                               ) As Double
  
'de - external diameter, m
'di - interior diameter, m
'gamma_gas - relative density of gas
'qg_sc - gas flow, m3/d
'eps - pipe roughness, m
'theta - ,degree
'length - pipe length, m
'T - temperature, C
'P - pressure, atma
On Error GoTo err1:
Dim de, Di, qg_sc, EPS, length, T, P
de = d_cas_mm / 1000
Di = dtub_mm / 1000
qg_sc = Qg_scm3day
EPS = roughness
length = H_m
T = t_C
P = P_atmg
    
    'convert m3/d to scf/d
    qg_sc = qg_sc * 3.28 ^ 3
    
    Dim P_MPa As Double, P_psi As Double
    P_MPa = P * 0.1013 'convert atma to Mpa
    P_psi = P * 14.696 ' convert atma to psi
    
    
    Dim T_K As Double, t_F As Double
    T_K = T + 273 'convert Celcsius to Kelvin
    t_F = (9 / 5) * T + 32 'convert Celcsius to Fahrengheit
     
    Dim T_pc As Double
    Dim p_pc As Double
    Dim Z As Double
    
'        T_pc = PseudoTemperatureStanding(gamma_gas)
'        p_pc = PseudoPressureStanding(gamma_gas)
'        Z = ZFactorDranchuk(T_K / T_pc, P_MPa / p_pc)
    Z = unf_calc_Zgas_d(T_K, P_MPa, gamma_gas)
    
    EPS = EPS * 39.3701 'convert m to in
    
    Dim de_in As Double, di_in As Double
    di_in = Di * 39.3701 'convert m to in
    de_in = de * 39.3701 'convert m to in
    Dim dh As Double, DA As Double, deq As Double
    dh = de_in - di_in
    DA = (de_in ^ 2 - di_in ^ 2) ^ 0.5
    If di_in = 0 Then
        deq = de_in
    Else
        deq = (de_in ^ 2 + di_in ^ 2 - (de_in ^ 2 - di_in ^ 2) / Log(de_in / di_in)) / (de_in - di_in)
    End If
    Dim mu_g As Double
    mu_g = unf_calc_mu_gas_cP(T_K, P_MPa, Z, gamma_gas)
    Dim Re As Double
    Re = 0.020107 * gamma_gas * Abs(qg_sc) * deq / mu_g / DA ^ 2
    Dim A As Double, B As Double
    A = (2.457 * Log(1 / ((7 / Re) ^ 0.9 + 0.27 * EPS / deq))) ^ 16
    B = (37530 / Re) ^ 16
    Dim f_moody As Double
    f_moody = 8 * ((8 / Re) ^ 12 + 1 / ((A + B) ^ 1.5)) ^ (1 / 12)
    
    Dim gradP As Double
    
    gradP = -0.018786 * gamma_gas * (P_psi + 14.7) * Sin(THETA * Application.Pi / 180) / (t_F + 460) / Z + (1.2595 * 10 ^ (-11)) * f_moody * (t_F + 460) * Z * gamma_gas * (qg_sc ^ 2) / (P_psi + 14.7) / dh / DA ^ 4
    gradP = gradP * 0.068 / 0.3048 'convert psi/ft to atma/m
    
    GL_dPgasPipe_atmg = P + gradP * length
    
    Exit Function
err1:
    GL_dPgasPipe_atmg = -1
    addLogMsg "error in function : GL_dPgasPipe_atmg"
    
End Function
' function to calculated gas passage trough orifice or gas valve
' link in K Brawn AL 2A - Craft, Holden, Graves (p.111)
' also found in Mischenko book
Public Function GL_Qgasvalve_m3day(d_mm As Double, Pu_atma As Double, Pd_atma As Double, gamma_g As Double, Tu_C As Double)
    
On Error GoTo err1:
    Dim K As Double
    K = 1.31   ' = Cp/Cv (approx 1.31 for natural gases(R Brown) or 1.25 (Mischenko) )
    
    Dim d_in As Double
    d_in = d_mm * 0.03937
    
    Dim Pu_psi As Double
    Dim Pd_psi As Double
    Pu_psi = Pu_atma * 14.2233 'upstream pressure, psi
    Pd_psi = Pd_atma * 14.2233 'downstream pressure, psi
    
    Dim Tu_F As Double
    Tu_F = Tu_C / 100 * 180 + 32
    
    Dim Pd_Pu_crit As Double
    Pd_Pu_crit = (2 / (K + 1)) ^ (K / (K - 1))
    
    
    Dim CD As Double  ' discharge coefficient
    CD = 0.865
    
    Dim G As Double
    G = 32.17 'ft/sec^2
    
    Dim C0 As Double, C1 As Double, c2 As Double
    C1 = (Pd_Pu_crit ^ (2 / K) - Pd_Pu_crit ^ (1 + 1 / K)) ^ 0.5
    c2 = (2 * G * K / (K - 1)) ^ 0.5
    
    Dim A As Double
    A = Application.Pi * d_in ^ 2 / 4 'area of choke, sq in.
    
    Dim Qg_crit As Double
    Qg_crit = 155.5 * CD * A * Pu_psi * C1 * c2 / (gamma_g * (Tu_F + 460)) ^ 0.5 'critical flow ratio, Mcf/d
    
    Dim Pd_Pu As Double
    Pd_Pu = Pd_atma / Pu_atma
    
    If Pd_Pu >= 1 Then
        GL_Qgasvalve_m3day = 0
        Exit Function
    End If
    
    If Pd_Pu <= 0 Then
        GL_Qgasvalve_m3day = 0
        Exit Function
    End If
    
    If Pd_Pu <= Pd_Pu_crit Then
        GL_Qgasvalve_m3day = Qg_crit * 28.31993658
    Else
        C0 = ((Pd_Pu ^ (2 / K) - Pd_Pu ^ (1 + 1 / K))) ^ 0.5
        GL_Qgasvalve_m3day = Qg_crit * 28.31993658 * C0 / C1
    End If
    
    Exit Function
err1:
    GL_Qgasvalve_m3day = -1
    addLogMsg "error in function : GL_Qgasvalve_m3day"
End Function
Public Function GL_Pd_gas_valve_atma(d_mm As Double, Pu_atma As Double, Qg_m3day As Double, gamma_g As Double, Tu_C As Double)
' расчет перепада давления на клапане при проходе газа через него
On Error GoTo err1:
    Dim Qmax_m3day As Double
    Dim Qtest_sm3day As Double
    Dim Pd As Double
    Dim Pd2 As Double
    Dim Pd1 As Double
    
    Pd = 1
    Dim K As Double
    K = 1.31   ' = Cp/Cv (approx 1.31 for natural gases(R Brown) or 1.25 (Mischenko) )
    
    Dim Pd_Pu_crit As Double
    Pd_Pu_crit = (2 / (K + 1)) ^ (K / (K - 1))
    
    Dim i As Integer
    i = 0
    
    Qmax_m3day = GL_Qgasvalve_m3day(d_mm, Pu_atma, Pd, gamma_g, Tu_C)
    If Qmax_m3day > Qg_m3day Then
        Pd1 = Pd_Pu_crit * Pu_atma
        Pd2 = Pu_atma
        Do
            i = i + 1
            Pd = (Pd2 + Pd1) / 2
            Qtest_sm3day = GL_Qgasvalve_m3day(d_mm, Pu_atma, Pd, gamma_g, Tu_C)
            If Qg_m3day > Qtest_sm3day Then
                Pd2 = Pd
            Else
                Pd1 = Pd
            End If
        Loop While (Abs(Qg_m3day - Qtest_sm3day) > 0.01) And (i < 100)
        GL_Pd_gas_valve_atma = Pd
    Else
        GL_Pd_gas_valve_atma = Pu_atma
    End If
    
        
    Exit Function
err1:
    GL_Pd_gas_valve_atma = -1
    addLogMsg "error in function : GL_Pd_gas_valve_atma"
End Function
    
