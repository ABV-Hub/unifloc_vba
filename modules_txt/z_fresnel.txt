''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Cephes Math Library Release 2.8:  June, 2000
'Copyright by Stephen L. Moshier
'
'Contributors:
'    * Sergey Bochkanov (ALGLIB project). Translation from C to
'      pseudocode.
'
'See subroutines comments for additional copyrights.
'
'>>> SOURCE LICENSE >>>
'This program is free software; you can redistribute it and/or modify
'it under the terms of the GNU General Public License as published by
'the Free Software Foundation (www.fsf.org); either version 2 of the
'License, or (at your option) any later version.
'
'This program is distributed in the hope that it will be useful,
'but WITHOUT ANY WARRANTY; without even the implied warranty of
'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'GNU General Public License for more details.
'
'A copy of the GNU General Public License is available at
'http://www.fsf.org/licensing/licenses
'
'>>> END OF LICENSE >>>
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Routines
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Fresnel integral
'
'Evaluates the Fresnel integrals
'
'          x
'          -
'         | |
'C(x) =   |   cos(pi/2 t**2) dt,
'       | |
'        -
'         0
'
'          x
'          -
'         | |
'S(x) =   |   sin(pi/2 t**2) dt.
'       | |
'        -
'         0
'
'
'The integrals are evaluated by a power series for x < 1.
'For x >= 1 auxiliary functions f(x) and g(x) are employed
'such that
'
'C(x) = 0.5 + f(x) sin( pi/2 x**2 ) - g(x) cos( pi/2 x**2 )
'S(x) = 0.5 - f(x) cos( pi/2 x**2 ) - g(x) sin( pi/2 x**2 )
'
'
'
'ACCURACY:
'
' Relative error.
'
'Arithmetic  function   domain     # trials      peak         rms
'  IEEE       S(x)      0, 10       10000       2.0e-15     3.2e-16
'  IEEE       C(x)      0, 10       10000       1.8e-15     3.3e-16
'
'Cephes Math Library Release 2.8:  June, 2000
'Copyright 1984, 1987, 1989, 2000 by Stephen L. Moshier
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub FresnelIntegral(ByVal X As Double, _
         ByRef C As Double, _
         ByRef S As Double)
    Dim XXA As Double
    Dim F As Double
    Dim G As Double
    Dim CC As Double
    Dim SS As Double
    Dim T As Double
    Dim U As Double
    Dim X2 As Double
    Dim SN As Double
    Dim SD As Double
    Dim CN As Double
    Dim CD As Double
    Dim FN As Double
    Dim FD As Double
    Dim GN As Double
    Dim GD As Double
    Dim MPI As Double
    Dim MPIO2 As Double
    MPI = 3.14159265358979
    MPIO2 = 1.5707963267949
    XXA = X
    X = Abs(XXA)
    X2 = X * X
    If X2 < 2.5625 Then
        T = X2 * X2
        SN = -2991.8191940102
        SN = SN * T + 708840.045257739
        SN = SN * T - 62974148.6205863
        SN = SN * T + 2548908805.73376
        SN = SN * T - 44297951805.9698
        SN = SN * T + 318016297876.568
        SD = 1#
        SD = SD * T + 281.376268889994
        SD = SD * T + 45584.7810806533
        SD = SD * T + 5173438.88770096
        SD = SD * T + 419320245.898111
        SD = SD * T + 22441179564.5341
        SD = SD * T + 607366389490.085
        CN = -4.98843114573574E-08
        CN = CN * T + 9.5042806282986E-06
        CN = CN * T - 6.45191435683965E-04
        CN = CN * T + 1.88843319396704E-02
        CN = CN * T - 0.205525900955014
        CN = CN * T + 1#
        CD = 3.99982968972496E-12
        CD = CD * T + 9.15439215774657E-10
        CD = CD * T + 1.25001862479599E-07
        CD = CD * T + 1.22262789024179E-05
        CD = CD * T + 8.68029542941784E-04
        CD = CD * T + 0.04121420907222
        CD = CD * T + 1#
        S = Sgn(XXA) * X * X2 * SN / SD
        C = Sgn(XXA) * X * CN / CD
        Exit Sub
    End If
    If X > 36974# Then
        C = Sgn(XXA) * 0.5
        S = Sgn(XXA) * 0.5
        Exit Sub
    End If
    X2 = X * X
    T = MPI * X2
    U = 1# / (T * T)
    T = 1# / T
    FN = 0.421543555043678
    FN = FN * U + 0.143407919780759
    FN = FN * U + 1.15220955073586E-02
    FN = FN * U + 3.45017939782574E-04
    FN = FN * U + 4.63613749287867E-06
    FN = FN * U + 3.05568983790258E-08
    FN = FN * U + 1.02304514164907E-10
    FN = FN * U + 1.72010743268162E-13
    FN = FN * U + 1.34283276233063E-16
    FN = FN * U + 3.76329711269988E-20
    FD = 1#
    FD = FD * U + 0.751586398353379
    FD = FD * U + 0.116888925859191
    FD = FD * U + 6.44051526508859E-03
    FD = FD * U + 1.55934409164153E-04
    FD = FD * U + 1.84627567348931E-06
    FD = FD * U + 1.12699224763999E-08
    FD = FD * U + 3.60140029589371E-11
    FD = FD * U + 5.88754533621578E-14
    FD = FD * U + 4.5200143407413E-17
    FD = FD * U + 1.25443237090011E-20
    GN = 0.504442073643383
    GN = GN * U + 0.197102833525523
    GN = GN * U + 1.87648584092575E-02
    GN = GN * U + 6.84079380915393E-04
    GN = GN * U + 1.15138826111884E-05
    GN = GN * U + 9.82852443688422E-08
    GN = GN * U + 4.4534441586175E-10
    GN = GN * U + 1.08268041139021E-12
    GN = GN * U + 1.37555460633262E-15
    GN = GN * U + 8.36354435630677E-19
    GN = GN * U + 1.86958710162783E-22
    GD = 1#
    GD = GD * U + 1.47495759925128
    GD = GD * U + 0.33774898912002
    GD = GD * U + 2.53603741420339E-02
    GD = GD * U + 8.14679107184306E-04
    GD = GD * U + 1.27545075667729E-05
    GD = GD * U + 1.04314589657572E-07
    GD = GD * U + 4.6068072814652E-10
    GD = GD * U + 1.1027321506624E-12
    GD = GD * U + 1.38796531259579E-15
    GD = GD * U + 8.39158816283119E-19
    GD = GD * U + 1.86958710162783E-22
    F = 1# - U * FN / FD
    G = T * GN / GD
    T = MPIO2 * X2
    CC = Cos(T)
    SS = Sin(T)
    T = MPI * X
    C = 0.5 + (F * SS - G * CC) / T
    S = 0.5 - (F * CC + G * SS) / T
    C = C * Sgn(XXA)
    S = S * Sgn(XXA)
End Sub
