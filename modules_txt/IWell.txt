'=======================================================================================
'Unifloc 7.11  Apodemus agrarius                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' abstract well class (interface) - declares behavior but do not implement it
'
' declares functions and properties needed for nodal and system analysis
'          purpose - make same nodal analysis algorithms for different well types
'
'   works only with pressures
'        temperature calc methods must be provided by specific well objects
'
'
' абстрактный класс скважины, показывающий интерфейс, но ничего не реализующий
'
'   интерфейс должен описывать
'       основные параметры скважины принимающие участие в расчете
'       основную логику расчета скважины в виде функций и методов расчета
'   тогда в алгоритмах расчета системы скважина пласт, можно будет оперирвать только
'   функциями интерфейса и это позволит выполнять базовые расчеты для любых типов скважин
'   но это не точно
Option Explicit
' ------------------------------------------------------
' basic well properties needed for nodal analysis
' ------------------------------------------------------
Public Property Get Pwf() As Double
    
End Property
 
Public Property Get Pwh() As Double
    
End Property
 
Public Property Get Pline() As Double
    
End Property
Public Property Get Pintake() As Double
' for ESP wells represents intake pressure
' for other types of well can be neglected
'
End Property
 
Public Property Get Qliq() As Double
    
End Property
Public Property Let Qliq(RHS As Double)
End Property
Public Property Get Qgascas() As Double
End Property
 
Public Property Get Qgasinj() As Double
End Property
 
Public Property Get fw() As Double
    
End Property
 
' ------------------------------------------------------
' basic well tuning parameters    (no underlines allowed here)
' ------------------------------------------------------
Public Property Get cDegradChoke() As Double
' choke correction factor
' 0 - no correction
End Property
Public Property Get cfESP() As Double
' ESP head correction factor
' 0 - no correction
End Property
Public Property Get cfGLinj() As Double
' gas lift injection gas rate correction factor
' 0 - no correction
End Property
Public Property Get cfFw() As Double
' water fraction correction factor
' 0 - no correction
End Property
Public Property Get cfRp() As Double
' GOR (Rp) production gas ratio correction factor
' 0 - no correction
End Property
Public Property Get cfBettaGrav() As Double
' gravity in multiphase correlation correction factor
' 0 - no correction
End Property
 
Public Property Get cfBettaFric() As Double
' friction in multiphase correlation correction factor
' 0 - no correction
End Property
 
' ============================================================
' basic calc functions
' ============================================================
Public Function CalcUp(pwf_atma As Double, _
                       Optional saveCurve As CALC_RESULTS = nocurves) As Double
' basic simplest and fastest well calc function
' just calc all data from p_wf to p_line with given tuning params
'
End Function
Public Function CalcDown(p_line_atma As Double, _
                       Optional saveCurve As CALC_RESULTS = nocurves) As Double
' top to bottom calc function
' sometime can be much slower than CalcUp (if iterations needed)
' takes given tuning options
End Function
Public Function CalcWell(pwf_atma As Double, _
                       Optional saveCurve As CALC_RESULTS = nocurves) As Double
' calc tuning params in order to
'
End Function

