''=======================================================================================
''Unifloc7.3  Testudines                                           khabibullinra@gmail.com
''Библиотека расчетных модулей по нефтяному инжинирингу
''2000 - 2018 г
''
''=======================================================================================
'
'' Модуль для расчета конструкции скважины на основании входных данных
''
''
''
''
'
'Public Function H_incl(Hmeas, Angle, Habs, Hek, Dek, Hnkt, Dnkt, Hvd, Hsp, l_max As Integer, Optional Hd As Double = -1, Optional NumArra As Integer = 1)
'' ключевая функция выполняющая подготовку данных для проведения расчетов
'' обеспечивает запись на лист excel преобразованных данных по конструкции скважины, которые потом будут являться исходными данными для расчетных функций
''
'
'Dim H1_arr(1000) As Double
'Dim H2_arr(1000) As Double
'Dim D1_arr(1000) As Double
'Dim D2_arr(1000) As Double
'Dim dimarr As Integer
'dimarr = fill_inc(Hmeas, Angle, Habs, Hek, Dek, Hnkt, Dnkt, Hsp, Hvd, H1_arr, H2_arr, D1_arr, D2_arr, l_max, Hd)
'
'If NumArra = 1 Then H_incl = Array(H1_arr)
'If NumArra = 2 Then H_incl = Array(H2_arr)
'If NumArra = 3 Then H_incl = Array(D1_arr)
'If NumArra = 4 Then H_incl = Array(D2_arr)
'End Function
'
'
'
'
'Function fill_inc(Hm, ang, Ha, Hek, D_ek, Hnkt, D_nkt, Hsp, Hvd, ByRef H1_arr, ByRef H2_arr, ByRef D1_arr, ByRef D2_arr, l_max As Integer, Optional ByVal Hd As Double = -1) As Integer
' Dim H11, H12, H21, H22, D11, D12, D21, D22, a1, a2, delta_a As Double
' Dim Hmeas(1000)
' Dim Habs(1000)
' Dim Angle(1000)
' Dim Hmeas_out(1000)
' Dim Hvert_out(1000)
' Dim Angle_out(1000)
' Dim Dek(1000)
' Dim Dnkt(1000)
' a = delim_incl(Hm, ang, Ha, l_max, 1000, Hmeas_out, Angle_out, Hvert_out)
' Call fill_constr(Hmeas_out, Angle_out, Hvert_out, Hek, D_ek, Hnkt, D_nkt, Hvd, Hmeas, Habs, Angle, Dek, Dnkt)
' H11 = 0
' H12 = 0
' H21 = 0
' H22 = 0
' D11 = Dek(1)
' D21 = Dek(1)
' D12 = Dnkt(1)
' D22 = Dnkt(1)
'
' i = 1
' j = 0
' delta_a = 0
' If Hmeas(i) <> 0 Then
'        j = j + 1
'        H1_arr(j) = 0
'        H2_arr(j) = 0
'        D1_arr(j) = Dek(1)
'        D2_arr(j) = Dnkt(1)
'        st = 1
' Else
'        j = j + 1
'        H1_arr(j) = 0
'        H2_arr(j) = 0
'        D1_arr(j) = Dek(1)
'        D2_arr(j) = Dnkt(1)
'        st = 2
' End If
'    For i = st To 1000
'    If Hmeas(i) = "" Then Exit For
'    H21 = Hmeas(i)
'    H22 = Habs(i)
'    D21 = Dek(i)
'    D22 = Dnkt(i)
'       da = Abs(Angle(i + 1) - Angle(i))
'       d1 = Dek(i) - Dek(i + 1)
'       d2 = Dnkt(i) - Dnkt(i + 1)
'        delta_a = delta_a + da
'    If ((H21 >= Hd) And (H11 < Hd)) And (Hd > 0) Then
'        h1 = H21 - H11
'        H2 = H22 - H12
'        If H21 >= Hd Then
'            l = H21
'            j = j + 1
'            Hd1 = Hd - H11
'            Hd2 = Hd1 * (H2 / h1) + H12
'            H1_arr(j) = (Hd)
'            H2_arr(j) = (Hd2)
'            D1_arr(j) = D21
'            D2_arr(j) = D22
'        End If
'     End If
'    If ((H21 >= Hvd) And (H11 < Hvd)) Or (H21 < H11) Then
'        If H21 < H11 Then
'          H21 = Hvd
'        End If
'
'        h1 = H21 - H11
'        H2 = H22 - H12
'        If H21 >= Hvd Then
'            l = H21
'            j = j + 1
'            Hvd1 = Hvd - H11
'            Hvd2 = Hvd1 * (H2 / h1) + H12
'            H1_arr(j) = (Hvd)
'            H2_arr(j) = (Hvd2)
'            D1_arr(j) = D21
'            D2_arr(j) = D22
'        End If
'        H21 = Hvd
'    End If
'
'    If H21 > 0 And H21 = Hvd Then Exit For
'
'    If H21 - l >= l_max Or i = 1 Or delta_a >= ang_max Or d1 <> 0 Or d2 <> 0 Then
'        l = H21
'        j = j + 1
'        H1_arr(j) = H21
'        H2_arr(j) = H22
'        D1_arr(j) = D21
'        D2_arr(j) = D22
'        delta_a = 0
'    End If
'   H11 = H21
'   H12 = H22
'   D11 = D21
'   D12 = D22
'Next
' fill_inc = j
'
'End Function
'
'
'
'
'Public Function delim_incl(Hmeas_in, Angle_in, Hvert_in, maxLen, maxIndex, ByRef Hmeas_out As Variant, ByRef Angle_out As Variant, ByRef Hvert_out As Variant) As Integer
'
'  Hmeas_out(1) = Hmeas_in(1)
'  Angle_out(1) = Angle_in(1)
'  Hvert_out(1) = Hvert_in(1)
'  j = 1
'  For i = 2 To maxIndex
'    If Hmeas_in(i) = "" Then Exit For
'    If (Hmeas_in(i) - Hmeas_in(i - 1)) > maxLen Then
'      l = Hmeas_in(i) - Hmeas_in(i - 1)
'      h1 = Hmeas_in(i - 1)
'      H2 = Hvert_in(i - 1)
'      While l >= maxLen
'        j = j + 1
'        l = l - maxLen
'        Hmeas_out(j) = h1 + maxLen
'        Angle_out(j) = Angle_in(i)
'        Hvert_out(j) = H2 + maxLen * Cos(Angle_in(i) * const_Pi / 180)
'        h1 = Hmeas_out(j)
'        H2 = Hvert_out(j)
'      Wend
'        j = j + 1
'        Hmeas_out(j) = h1 + l
'        Angle_out(j) = Angle_in(i)
'        Hvert_out(j) = H2 + l * Cos(Angle_in(i) * const_Pi / 180)
'
'    Else
'      j = j + 1
'      Hmeas_out(j) = Hmeas_in(i)
'      Angle_out(j) = Angle_in(i)
'      Hvert_out(j) = Hvert_in(i)
'
'    End If
'  Next i
'  delim_incl = j
'End Function
'
'
'Public Function max_in_arr(arr)
'i = 2
'max_arr = arr(1)
'While arr(i) <> ""
'    If max_arr < arr(i) Then max_arr = arr(i)
'    i = i + 1
'Wend
'max_in_arr = max_arr
'End Function
'Public Function min_in_arr(arr)
'i = 2
'min_arr = arr(1)
'While arr(i) <> ""
'    If min_arr > arr(i) Then min_arr = arr(i)
'    i = i + 1
'Wend
'min_in_arr = min_arr
'End Function
'Function Get_D(H_test, Harr, Darr)
'i = 1
'cur_d = Darr(i)
'prev_h = 0
'While Harr(i) <> ""
'    If ((H_test > prev_h) And (H_test <= Harr(i))) Then
'        cur_d = Darr(i + 1)
'        GoTo end_loop
'    Else
'        prev_h = Harr(i)
'        i = i + 1
'    End If
'Wend
'end_loop:
'Get_D = cur_d
'End Function
'Function Brake_H_id(H_test, Harr, Optional istart = 1)
'cur_H_id = -1
'i = istart
'While Harr(i) <> ""
'    If (H_test = Harr(i)) Then
'        cur_H_id = i
'        GoTo end_loop
'    Else
'        i = i + 1
'    End If
'Wend
'end_loop:
'Brake_H_id = cur_H_id
'
'End Function
'Public Function Consolid_Arr(Hmeas, Hek, Hnkt, Hvd, ByRef H_all As Variant) As Variant
'Dim tmp
'Dim a
'Dim b
'i = 1
'j = 0
'While Hmeas(i) <> ""
'    j = j + 1
'    H_all(j) = Hmeas(i)
'    i = i + 1
'Wend
'i = 1
'While Hek(i) <> ""
'    j = j + 1
'    H_all(j) = Hek(i)
'    i = i + 1
'Wend
'i = 1
'While Hnkt(i) <> ""
'    j = j + 1
'    H_all(j) = Hnkt(i)
'    i = i + 1
'Wend
'j = j + 1
'H_all(j) = Hvd
'
'Call insertSort(H_all, j)
'
'Consolid_Arr = j
'
'End Function
'Public Sub insertSort(ByRef arr, j)
'
'    For i = 2 To j
'        tmp = arr(i)
'
'        For K = i - 1 To 1 Step -1
'        If Not (arr(K) > tmp) Then Exit For
'            arr(K + 1) = arr(K)
'        Next
'        arr(K + 1) = tmp
'    Next
'End Sub
'Sub fill_constr(Hmeas, Angle, Habs, Hek, Dek, Hnkt, Dnkt, Hvd, ByRef H1_arr As Variant, ByRef H2_arr As Variant, ByRef Ang_arr As Variant, ByRef D1_arr As Variant, ByRef D2_arr As Variant)
'Dim H_all(2000)
'
' Size_Arr = Consolid_Arr(Hmeas, Hek, Hnkt, Hvd, H_all)
' j = 1
' H1_arr(j) = 0
' H2_arr(j) = 0
' Ang_arr(j) = 0
' D1_arr(j) = Dek(1)
' D2_arr(j) = Dnkt(1)
' Hsp = max_in_arr(Hnkt)
' cur_ang = Angle(1)
' cur_Dek = Dek(1)
' cur_Dnkt = Dnkt(1)
' i_11 = 1
' i_21 = 1
' i_31 = 1
' For i = 1 To Size_Arr
'    h = H_all(i)
'    i_1 = Brake_H_id(h, Hmeas, i_11)
'    i_2 = Brake_H_id(h, Hek, i_21)
'    i_3 = Brake_H_id(h, Hnkt, i_31)
'
'   If (h > 0) And ((i_1 > -1) Or (i_2 > -1) Or (i_3 > -1) Or (h = Hvd)) Then
'        j = j + 1
'    If (i_1 > -1) Then
'        i_11 = i_1
'        H1_arr(j) = Hmeas(i_1)
'        H2_arr(j) = Habs(i_1)
'        D1_arr(j) = cur_Dek
'        D2_arr(j) = cur_Dnkt
'        Ang_arr(j) = cur_ang
'        cur_ang = IIf(Angle(i_1 + 1) = "", cur_ang, Angle(i_1 + 1))
'        If h >= Hvd Then Exit Sub
'    End If
'    If (i_2 > -1) Then
'        i_21 = i_2
'        Ang_arr(j) = cur_ang
'        H1_arr(j) = Hek(i_2)
'        H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * const_Pi / 180)
'        D1_arr(j) = cur_Dek
'        D2_arr(j) = cur_Dnkt
'        If H1_arr(j) <> Hvd Then cur_Dek = IIf(Get_D(h, Hek, Dek) = "", 0, Get_D(h, Hek, Dek))
'    End If
'    If (i_3 > -1) Then
'        i_31 = i_3
'        Ang_arr(j) = cur_ang
'        H1_arr(j) = Hnkt(i_3)
'        H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * const_Pi / 180)
'        D1_arr(j) = cur_Dek
'        D2_arr(j) = cur_Dnkt
'        If H1_arr(j) <> Hvd Then cur_Dnkt = IIf(Get_D(h, Hnkt, Dnkt) = "", 0, Get_D(h, Hnkt, Dnkt))
'    End If
'    If (h = Hvd) Then
'        Ang_arr(j) = cur_ang
'        H1_arr(j) = Hvd
'        H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * const_Pi / 180)
'        D1_arr(j) = cur_Dek
'        D2_arr(j) = cur_Dnkt
'        If h >= Hvd Then Exit Sub
'    End If
'
'   End If
' Next
'
'End Sub
'
'
'
'' дополнительный набор функций преобразования конструкции с учетом наличия в скважине газлифтных клапанов
'
'Public Function H_incl_gl(Hmeas, Angle, Habs, Hek, Dek, Hnkt, Dnkt, Hkl, Hvd, Hsp, l_max As Integer, Optional Hd As Double = -1, Optional NumArra As Integer = 1)
'' new version of well construction preparation function
'
'
'Dim out_arr(1000, 1 To 4) As Double
'Dim dimarr As Integer
'
'dimarr = fill_inc_gl(Hmeas, Angle, Habs, Hek, Dek, Hnkt, Dnkt, Hkl, Hsp, Hvd, out_arr, l_max, Hd)
'
'H_incl_gl = out_arr
'
''If NumArra = 1 Then
''If NumArra = 2 Then H_incl_gl = Array(H2_arr)
''If NumArra = 3 Then H_incl = Array(D1_arr)
''If NumArra = 4 Then H_incl = Array(D2_arr)
'
'
'End Function
'
'
'Function fill_inc_gl(Hm, ang, Ha, Hek, D_ek, Hnkt, D_nkt, Hkl, Hsp, Hvd, ByRef out_arr, l_max As Integer, Optional ByVal Hd As Double = -1) As Integer
'
' Dim H11, H12, H21, H22, D11, D12, D21, D22, a1, a2, delta_a As Double
' Dim Hmeas(1000)
' Dim Habs(1000)
' Dim Angle(1000)
' Dim Hmeas_out(1000)
' Dim Hvert_out(1000)
' Dim Angle_out(1000)
' Dim Dek(1000)
' Dim Dnkt(1000)
'
' Dim H1_arr(1000)
' Dim H2_arr(1000)
' Dim D1_arr(1000)
' Dim D2_arr(1000)
'
'
'
' a = delim_incl(Hm, ang, Ha, l_max, 1000, Hmeas_out, Angle_out, Hvert_out)
'
' Call fill_constr_gl(Hmeas_out, Angle_out, Hvert_out, Hek, D_ek, Hnkt, D_nkt, Hkl, Hvd, Hmeas, Habs, Angle, Dek, Dnkt, l_max)
'
' H11 = 0
' H12 = 0
' H21 = 0
' H22 = 0
' H31 = 0
' H32 = 0
'
'
' D11 = Dek(1)
' D21 = Dek(1)
' D12 = Dnkt(1)
' D22 = Dnkt(1)
'
' D31 = Dek(1)
' D32 = Dnkt(1)
'
'
' i = 1
' j = 0
' delta_a = 0
' If Hmeas(i) <> 0 Then
'        j = j + 1
'        H1_arr(j) = 0
'        H2_arr(j) = 0
'        D1_arr(j) = Dek(1)
'        D2_arr(j) = Dnkt(1)
'        st = 1
' Else
'        j = j + 1
'        H1_arr(j) = 0
'        H2_arr(j) = 0
'        D1_arr(j) = Dek(1)
'        D2_arr(j) = Dnkt(1)
'        st = 2
' End If
'
' l = 0
'
' For i = st To 1000
'    If Hmeas(i) = "" Then Exit For
'    H21 = Hmeas(i)
'    H22 = Habs(i)
'    D21 = Dek(i)
'    D22 = Dnkt(i)
'
'    H31 = Hmeas(i + 1)
'    H32 = Habs(i + 1)
'    D31 = Dek(i + 1)
'    D32 = Dnkt(i + 1)
'
'
'       da = Abs(Angle(i + 1) - Angle(i))
'       d1 = Dek(i) - Dek(i + 1)
'       d2 = Dnkt(i) - Dnkt(i + 1)
'       If Brake_H_id(H21, Hkl, 1) > 0 Then
'        d3 = True
'       Else
'        d3 = False
'       End If
'
'
'        delta_a = delta_a + da
'    If ((H21 >= Hd) And (H11 < Hd)) And (Hd > 0) Then
'        h1 = H21 - H11
'        H2 = H22 - H12
'        If H21 >= Hd Then
'            l = H21
'            j = j + 1
'            Hd1 = Hd - H11
'            Hd2 = Hd1 * (H2 / h1) + H12
'            H1_arr(j) = (Hd)
'            H2_arr(j) = (Hd2)
'            D1_arr(j) = D21
'            D2_arr(j) = D22
'        End If
'     End If
'
'    If ((H21 >= Hvd) And (H11 < Hvd)) Or (H21 < H11) Then
'        If H21 < H11 Then
'          H21 = Hvd
'        End If
'
'        h1 = H21 - H11
'        H2 = H22 - H12
'        If H21 >= Hvd Then
'            l = H21
'            j = j + 1
'            Hvd1 = Hvd - H11
'            Hvd2 = Hvd1 * (H2 / h1) + H12
'            H1_arr(j) = (Hvd)
'            H2_arr(j) = (Hvd2)
'            D1_arr(j) = D21
'            D2_arr(j) = D22
'        End If
'        H21 = Hvd
'    End If
'
'    If H21 > 0 And H21 = Hvd Then Exit For
'
'    If H21 - l >= l_max Or i = 1 Or delta_a >= ang_max Or d1 <> 0 Or d2 <> 0 Or d3 Then
'        If d3 = False Then
'        If H31 - H21 <= l_max / 2 Then
'            l = H21
'            j = j + 1
'            H1_arr(j) = H31
'            H2_arr(j) = H32
'            D1_arr(j) = D31
'            D2_arr(j) = D32
'            delta_a = 0
'
'            i = i + 1
'       Else
'            If H21 - H11 < l_max / 2 Then
'                l = H11
'                j = j + 1
'                H1_arr(j) = H11
'                H2_arr(j) = H12
'                D1_arr(j) = D11
'                D2_arr(j) = D12
'                delta_a = 0
'            Else
'                l = H21
'                j = j + 1
'                H1_arr(j) = H21
'                H2_arr(j) = H22
'                D1_arr(j) = D21
'                D2_arr(j) = D22
'                delta_a = 0
'            End If
'       End If
'       Else
'                l = H21
'                j = j + 1
'
'                H1_arr(j) = H21
'                H2_arr(j) = H22
'                D1_arr(j) = D21
'                D2_arr(j) = D22
'                delta_a = 0
'       End If
'    End If
'   H11 = H21
'   H12 = H22
'   D11 = D21
'   D12 = D22
'Next
'
' For i = LBound(H1_arr) To UBound(H1_arr)
'  out_arr(i, 1) = H1_arr(i)
'  out_arr(i, 2) = D1_arr(i)
'  out_arr(i, 3) = H2_arr(i)
'  out_arr(i, 4) = D2_arr(i)
' Next i
'
' fill_inc_gl = j
'
'End Function
'
'
'
'Sub fill_constr_gl(Hmeas, Angle, Habs, Hek, Dek, Hnkt, Dnkt, Hkl, Hvd, ByRef H1_arr As Variant, ByRef H2_arr As Variant, ByRef Ang_arr As Variant, ByRef D1_arr As Variant, ByRef D2_arr As Variant, ByRef l_max)
'Dim H_all(2000)
'Dim Hprev, Hnext
'
' Size_Arr = Consolid_Arr_gl(Hmeas, Hek, Hnkt, Hvd, Hkl, H_all)
' j = 1
' H1_arr(j) = 0
' H2_arr(j) = 0
' Ang_arr(j) = 0
' D1_arr(j) = Dek(1)
' D2_arr(j) = Dnkt(1)
' Hsp = max_in_arr(Hnkt)
' cur_ang = Angle(1)
' cur_Dek = Dek(1)
' cur_Dnkt = Dnkt(1)
' i_11 = 1
' i_21 = 1
' i_31 = 1
' i_41 = 1
' For i = 1 To Size_Arr
'    h = H_all(i)
'    Hprev = H_all(i - 1)
'    Hnext = H_all(i + 1)
'    If (i > 1) And (H_all(i) > H_all(i - 1)) Then
'
'    i_1 = Brake_H_id(h, Hmeas, i_11)
'    i_2 = Brake_H_id(h, Hek, i_21)
'    i_3 = Brake_H_id(h, Hnkt, i_31)
'    i_4 = Brake_H_id(h, Hkl, i_41)
'
'   If ((i_1 > -1) Or (i_2 > -1) Or (i_3 > -1) Or (i_4 > -1) Or (h = Hvd)) Then
'        j = j + 1
'        If (i_1 > -1) And (i_2 < 0) And (i_3 < 0) And (i_4 < 0) Then
'            i_11 = i_1
'            H1_arr(j) = Hmeas(i_1)
'            H2_arr(j) = Habs(i_1)
'            D1_arr(j) = cur_Dek
'            D2_arr(j) = cur_Dnkt
'            Ang_arr(j) = cur_ang
'            cur_ang = IIf(Angle(i_1 + 1) = "", cur_ang, Angle(i_1 + 1))
'            If h >= Hvd Then Exit Sub
'        End If
'        If (i_2 > -1) Then
'            i_21 = i_2
'            Ang_arr(j) = cur_ang
'            H1_arr(j) = Hek(i_2)
'            H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * PI / 180)
'            D1_arr(j) = cur_Dek
'            D2_arr(j) = cur_Dnkt
'            If H1_arr(j) <> Hvd Then cur_Dek = IIf(Get_D(h, Hek, Dek) = "", 0, Get_D(h, Hek, Dek))
'        End If
'        If (i_3 > -1) Then
'            If (i_2 < 0) Then
'                i_31 = i_3
'                Ang_arr(j) = cur_ang
'                H1_arr(j) = Hnkt(i_3)
'                H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * PI / 180)
'                D1_arr(j) = cur_Dek
'                D2_arr(j) = cur_Dnkt
'            End If
'            If H1_arr(j) <> Hvd Then cur_Dnkt = IIf(Get_D(h, Hnkt, Dnkt) = "", 0, Get_D(h, Hnkt, Dnkt))
'
'        End If
'        If (i_4 > -1) Then
'
'        If (i_2 < 0) And (i_3 < 0) Then
'            i_41 = i_4
'            Ang_arr(j) = cur_ang
'            H1_arr(j) = Hkl(i_4)
'            H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * PI / 180)
'            D1_arr(j) = cur_Dek
'            D2_arr(j) = cur_Dnkt
'        End If
'
'          '  If H1_arr(j) <> Hvd Then cur_Dnkt = IIf(Get_D(h, Hnkt, Dnkt) = "", 0, Get_D(h, Hnkt, Dnkt))
'        End If
'        If (h = Hvd) Then
'            Ang_arr(j) = cur_ang
'            H1_arr(j) = Hvd
'            H2_arr(j) = H2_arr(j - 1) + (H1_arr(j) - (H1_arr(j - 1))) * Cos(cur_ang * PI / 180)
'            D1_arr(j) = cur_Dek
'            D2_arr(j) = cur_Dnkt
'            If h >= Hvd Then Exit Sub
'        End If
'
'   End If
'   End If
' Next
'
'
'For i = 1 To sizearr
'
'Next i
'
'End Sub
'
'Public Function Consolid_Arr_gl(Hmeas, Hek, Hnkt, Hvd, Hkl, ByRef H_all As Variant) As Variant
'Dim tmp
'Dim a
'Dim b
'i = 1
'j = 0
'While Hmeas(i) <> ""
'    j = j + 1
'    H_all(j) = Hmeas(i)
'    i = i + 1
'Wend
'i = 1
'While Hek(i) <> ""
'    j = j + 1
'    H_all(j) = Hek(i)
'    i = i + 1
'Wend
'i = 1
'While Hnkt(i) <> ""
'    j = j + 1
'    H_all(j) = Hnkt(i)
'    i = i + 1
'Wend
'i = 1
'While Hkl(i) <> ""
'    j = j + 1
'    H_all(j) = Hkl(i)
'    i = i + 1
'Wend
'
'j = j + 1
'H_all(j) = Hvd
'
'Call insertSort(H_all, j)
'
'Consolid_Arr_gl = j
'
'End Function
'
'
