'=======================================================================================
'Unifloc 7.6  Vulpes zerda                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' функции расчета скважины для проведения расчетов из интерфейса Excel
Option Explicit
' ==============  функции для расчета скважины ==========================
' =====================================================================
Private Function well_InitData(Q_m3Day, fw_perc, _
                      Optional Pcas_atma As Double = 10, _
                      Optional wellStr As String = WELL_DEFAULT, _
                      Optional PVTstr As String = PVT_DEFAULT, _
                      Optional ESPStr As String = ESP_DEFAULT, _
                      Optional HydrCorr As H_CORRELATION = 0, _
                      Optional Ksep_fr As Double = 0, _
                      Optional Kdegr_d As Double = 0) As CWellESP
    ' функция для шаблонного чтения данных по скважине в интерфейсных функциях
    '
    ' на входе данные по конструкции скважины, PVT, ЭЦН берутся из строк с закодированными параметрами
    '    следует использовать функции Encode для передачи параметров
    ' на выходе объект скважина с загруженными данными
    Dim well As New CWellESP
    Dim PVT As New CPVT
    Dim pmp As CESPpump
    Dim ESPsystem As New CESPsystemSimple
    
    Set PVT = PVT_Decode_string(PVTstr)
    PVT.Qliq_scm3day = Q_m3Day
    PVT.wc_fr = fw_perc / 100
    
    Set well = Well_Decode_string(wellStr)
    Set well.Fluid = PVT
  '  well.Pan_atma = Pcas_atma
    well.HFlowCorrelation = HydrCorr
     
    Set ESPsystem = ESP_Decode_string(ESPStr)
    Set well.ESP = ESPsystem
    well.ESP.cfHead_fr = Kdegr_d
    If Ksep_fr > 0 And Ksep_fr <= 1 Then
        Call well.SetKseptotal_d(valueManual, Ksep_fr, 0)
    Else
        Call well.SetKseptotal_d(byCorrealation, Ksep_fr)
    End If
        
    Set well_InitData = well
End Function
Private Function Well_out_arr(well As CWellESP, Optional FirsrCol As Integer = 0)
    Dim ar1, ar2
    With well
        ' подготовим данные для вывода
        ' данные выводятся в одну линию, чтобы, хотя бы теоретически, можно было вывести данные по скважине в таблице
        ' во второй строке выводятся подписи параметров, если необходимо
        ReDim ar1(20)
        ReDim ar2(20)
        Dim i As Integer
        ' первый параметр настраиваемый
        i = 0
        ar1(0) = "":  ar2(0) = ""
        ' блок параметров по давлениям
        i = i + 1
        ar1(i) = .Pline_atma:  ar2(i) = "Pline_atma"
        i = i + 1
        ar1(i) = .Pbuf_atma:  ar2(i) = "Pbuf_atma"
        i = i + 1
        ar1(i) = .Pdis_atma:  ar2(i) = "Pdis_atma"
        i = i + 1
        ar1(i) = .Pint_atma:  ar2(i) = "Pint_atma"
        i = i + 1
        ar1(i) = .Pwf_atma:  ar2(i) = "Pwf_atma"
        i = i + 1
        ar1(i) = .Pan_atma:   ar2(i) = "Pan_atma"
        ' динамический уровень
        i = i + 1
        ar1(i) = .Hdyn_m:   ar2(i) = "Hdyn_m"
        ' электрические параметры
        i = i + 1
        ar1(i) = .ESP.Power_CS_calc_W:  ar2(i) = ".Power_W"
        i = i + 1
        ar1(i) = .ESP.freq_Hz:  ar2(i) = "freq_Hz"
        i = i + 1
        ar1(i) = .ESP.I_A:  ar2(i) = "I_A"
        i = i + 1
        ar1(i) = .ESP.Load_fr:  ar2(i) = "Load_fr"
        i = i + 1
        ar1(i) = .ESP.ESPpump.EffiencyESP_d:  ar2(i) = "EffESP_d"
        ' параметры сепарации
        i = i + 1
        ar1(i) = .ESP.KsepTotal_fr:  ar2(i) = "KsepTotal_fr"
        i = i + 1
        ar1(i) = .ESP.KsepNat_fr:  ar2(i) = "KsepNat_fr"
        i = i + 1
        ar1(i) = .ESP.KSepGasSep_fr:   ar2(i) = "KSepGasSep_fr "
        ' параметры температуры
        i = i + 1
        ar1(i) = .Tsurf_C:  ar2(i) = "Tsurf_C"
        i = i + 1
        ar1(i) = .Twh_C:  ar2(i) = "Twh_C"
        i = i + 1
        ar1(i) = .Tdis_C:  ar2(i) = "Tdis_C"
        i = i + 1
        ar1(i) = .Tint_C:  ar2(i) = "Tint_C"
        i = i + 1
        ar1(i) = .Tbh_C:  ar2(i) = "Tbh_C"
        
        
'        ar1 = Array(0, "", .Pline_atma, .Pbuf_atma, .Pdis_atma, .Pint_atma, .Pwf_atma, "Давления атм, линейное, буферное, на выкиде насоса, на приеме насоса, забойное")
'        ar2 = Array(0, "", .Tsurf_C, .Twh_C, .Tdis_C, .Tint_C, .Tbh_C, "Температура С, на поверхности, буферное, на выкиде насоса, на приеме насоса, забойное")
'        ar3 = Array(0, "", .ESP.Power_CS_calc_W, .ESP.I_A, .ESP.Load_fr, .ESP.KsepTotal_fr, .ESP.ESPpump.EffiencyESP_d, "Мощность, Ток, Загрузка, Сепарация ")
        
        Select Case FirsrCol
            Case 0
                ar1(0) = .Pline_atma: ar2(0) = "Plin"
            Case 1
                ar1(0) = .Pwf_atma:   ar2(0) = "Pwf"
            Case 2
                ar1(0) = .Qliq_scm3day:   ar2(0) = "Qliq"
        End Select
        
        Well_out_arr = Array(ar1, ar2)
    ' можно еще добавить сюда вывод кривых распределения давления и температуры по стволу и еще 4 параметров  (потом)
    End With
End Function
Public Function Well_Plin_Pwf_atma(ByVal Pwf_atma As Double, ByVal Q_m3Day As Double, ByVal fw_perc As Double, _
                      Optional ByVal Pcas_atma As Double = 10, _
                      Optional wellStr As String = WELL_DEFAULT, _
                      Optional PVTstr As String = PVT_DEFAULT, _
                      Optional ESPStr As String = ESP_DEFAULT, _
                      Optional ByVal HydrCorr As H_CORRELATION = 0, _
                      Optional ByVal Ksep_fr As Double = 0, _
                      Optional ByVal Kdegr_d As Double = 0, _
                      Optional ByVal param_num As Integer = 0)
' функция расчета линейного давления скважины по забойному
    Dim well As CWellESP
    Set well = well_InitData(Q_m3Day, fw_perc, Pcas_atma, _
                             wellStr, PVTstr, ESPStr, AnsariCor, Ksep_fr, Kdegr_d)
    Call well.Calc_Plin_Pwf_atma(Pwf_atma)          ' проведем расчет
    ' в качестве результата выведем ряд расчитанных значений давления
    Well_Plin_Pwf_atma = Well_out_arr(well, 0)
End Function
Public Function Well_calc(ByVal Pwf_atma As Double, ByVal Q_m3Day As Double, ByVal fw_perc As Double, _
                      Optional ByVal Pcas_atma As Double = 10, _
                      Optional wellStr As String = WELL_DEFAULT, _
                      Optional PVTstr As String = PVT_DEFAULT, _
                      Optional ESPStr As String = ESP_DEFAULT, _
                      Optional ByVal HydrCorr As H_CORRELATION = 0, _
                      Optional ByVal Ksep_fr As Double = 0, _
                      Optional ByVal Kdegr_d As Double = 0, _
                      Optional ByVal param_num As Integer = 0)
' функция расчета прозвольного параметра скважины по забойному давлению
    Dim well As CWellESP
    Dim ar
    Set well = well_InitData(Q_m3Day, fw_perc, Pcas_atma, _
                             wellStr, PVTstr, ESPStr, AnsariCor, Ksep_fr, Kdegr_d)
    Call well.Calc_Plin_Pwf_atma(Pwf_atma)         ' проведем расчет
    ' в качестве результата выведем ряд расчитанных значений давления
    
    ar = Well_out_arr(well, 0)
    Well_calc = Array(ar(0)(param_num), ar(1)(param_num))
    If param_num > 0 Then
        Well_calc = Array(ar(0)(param_num), ar(1)(param_num))
    Else
        Well_calc = ar
    End If
End Function
Public Function Well_Pwf_Plin_atma(Plin_atma, Q_m3Day, fw_perc, _
                      Optional ByVal Pcas_atma As Double = 10, _
                      Optional wellStr As String = WELL_DEFAULT, _
                      Optional PVTstr As String = PVT_DEFAULT, _
                      Optional ESPStr As String = ESP_DEFAULT, _
                      Optional ByVal HydrCorr As H_CORRELATION = 0, _
                      Optional ByVal Ksep_fr As Double = -1, _
                      Optional ByVal Psep_atma As Double = 40, _
                      Optional ByVal Tsep_C As Double = 40, _
                      Optional ByVal Kdegr_d As Double = 0, _
                      Optional ByVal param_num As Integer = 0)
' функция расчета забойного давления скважины по линейному
' на основе устьевых параметров работы скважины
    Dim well As CWellESP
    Dim ar
    Set well = well_InitData(Q_m3Day, fw_perc, Pcas_atma, _
                             wellStr, PVTstr, ESPStr, AnsariCor, Ksep_fr, Kdegr_d)
    ' при расчете сверху вниз задаем какие то значения сепарации наугад
    Call well.SetKseptotal_d(fullyManual, Ksep_fr, 0, Psep_atma, Tsep_C)
    well.isCalcCasing = True
    Call well.Calc_Pwf_Plin_atma(Plin_atma, well.Tbh_C, fast:=True)
    ' проведем расчет
    ' в качестве результата выведем ряд расчитанных значений давления
    ar = Well_out_arr(well, 1)
    If param_num > 0 Then
        Well_Pwf_Plin_atma = Array(ar(0)(param_num), ar(1)(param_num))
    Else
        Well_Pwf_Plin_atma = ar
    End If
End Function
Public Function Well_calcKdegr_fr(Pwf_atma, Pbuf_atma, Q_m3Day, _
                      Optional ByVal Hperf_m = 2500, Optional ByVal Hpump_m = 2000, Optional ByVal Udl_m = 0, Optional ByVal dCas_mm = 127, Optional ByVal dTub_mm = 62, Optional ByVal dchoke_mm = -1, _
                      Optional ByVal fw_perc = 0, Optional ByVal Rp_m3m3 As Double = -1, Optional ByVal rsb_m3m3 As Double = 100, Optional ByVal Pb_atma As Double = -1, Optional ByVal Tres_C As Double = 90, _
                      Optional ByVal gamma_oil As Double = const_gamma_oil_default, Optional ByVal gamma_wat As Double = const_gamma_wat_default, Optional ByVal gamma_gas As Double = const_gamma_gas_default, _
                      Optional ByVal Bob_m3m3 As Double = -1, Optional ByVal Twh_C As Double = 10, Optional ByVal Tbh_C As Double = 80, _
                      Optional ByVal roughness_m As Double = 0.0001, _
                      Optional ByVal ESP_ID = 0, Optional ByVal ESP_numStages = 0, Optional ByVal ESP_freq_Hz = 50, _
                      Optional ByVal PVTcorr As PVT_CORRELATION = 0, Optional ByVal HydrCorr As H_CORRELATION = 0, Optional ByVal Ksep_fr As Double = 0)
' функция расчета линейного давления скважины по забойному
'    Dim well As CWellESP
'    Set well = InitWellData(Q_m3Day, _
'                       Hperf_m, Hpump_m, Udl_m, dCas_mm, dTub_mm, dchoke_mm, _
'                       fw_perc, Rp_m3m3, rsb_m3m3, Pb_atma, Tres_C, _
'                       gamma_oil, gamma_wat, gamma_gas, _
'                       Bob_m3m3, Twh_C, Tbh_C, _
'                       roughness_m, _
'                       ESP_ID, ESP_numStages, ESP_freq_Hz, _
'                       PVTcorr, HydrCorr, Ksep_fr)
''    Set well.Pbuf_atma = Pbuf_atma
'    Call well.Calc_Well(Pbuf_atma, Pbuf_atma, Pwf_atma, Tbh_C, CalcChoke:=False)
''    Call well.fin(SetPT(Pwf_atma, Tbh_C))     ' проведем расчет
''    Call well.Calc_Plin_Pwf_atma(SetPT(Pwf_atma, Tbh_C))     ' проведем расчет
'    ' в качестве результата выведем рад расчитанных значений давления
'    With well
'        Well_calcKdegr_fr = Array(Array(.ESP.cfHead_fr, .Pline_atma, .Pbuf_atma, .Pdis_atma, .Pint_atma, .Pwf_atma, "деградация ЭЦН ,Давления атм, линейное, буферное, на приеме насоса, на выкиде насоса, забойное"), _
'                                  Array(.Kseptotal_d, .Tsurf_C, .Twh_C, .Tdis_C, .Tint_C, .Tbh_C, "Ксеп,Температура С, на поверхности, буферное, на приеме насоса, на выкиде насоса, забойное"))
'    ' можно еще добавить сюда вывод кривых распределения давления и температуры по стволу и еще 4 параметров  (потом)
'    End With
End Function
Public Function Well_Pwf_Hdyn_atma(Pwf_atma, Q_m3Day, fw_perc, _
                      Optional ByVal Pcas_atma As Double = 10, _
                      Optional ByVal Hdyn_m As Double = 0, _
                      Optional wellStr As String = WELL_DEFAULT, _
                      Optional PVTstr As String = PVT_DEFAULT, _
                      Optional ESPStr As String = ESP_DEFAULT, _
                      Optional ByVal HydrCorr As H_CORRELATION = 0, _
                      Optional ByVal Ksep_fr As Double = 0, _
                      Optional ByVal Kdegr_d As Double = 0, _
                      Optional ByVal param_num As Integer = 0)
' функция расчета прозвольного параметра скважины по забойному давлению
    Dim well As CWellESP
    Set well = well_InitData(Q_m3Day, fw_perc, Pcas_atma, _
                             wellStr, PVTstr, ESPStr, AnsariCor, Ksep_fr, Kdegr_d)
    Call well.Calc_Pwf_PanHd_atma(Pcas_atma, Hdyn_m, well.Tbh_C)          ' проведем расчет
    ' в качестве результата выведем ряд расчитанных значений давления
    Dim ar
    ar = Well_out_arr(well, 0)
    If param_num > 0 Then
        Well_Pwf_Hdyn_atma = Array(ar(0)(param_num), ar(1)(param_num))
    Else
        Well_Pwf_Hdyn_atma = ar
    End If
End Function
Public Function Nodal_Qliq_scm3day(PI_m3dayatm, Plin_atma, fw_perc, _
                      Optional ByVal Pres_atma = 250, _
                      Optional ByVal Pcas_atma As Double = 10, _
                      Optional wellStr As String = WELL_DEFAULT, _
                      Optional PVTstr As String = PVT_DEFAULT, _
                      Optional ESPStr As String = ESP_DEFAULT, _
                      Optional ByVal HydrCorr As H_CORRELATION = 0, _
                      Optional ByVal Ksep_fr As Double = 0, _
                      Optional ByVal Kdegr_d As Double = 0, _
                      Optional ByVal param_num As Integer = 0)
' расчет узлового анализа по скважине
    Dim PS As New CProdSys
    Dim well As CWellESP
    Dim Res As New CReservoirVogel
    
    Set well = well_InitData(0, fw_perc, Pcas_atma, _
                             wellStr, PVTstr, ESPStr, AnsariCor, Ksep_fr, Kdegr_d)
    Res.InitProp Pres_atma, well.Fluid.Pb_atma, fw_perc
    Res.PI_m3dayatm = PI_m3dayatm
    
    Set PS.well = well
    Set PS.Reservoir = Res
    
    PS.Nodal_Qliq_scm3day Plin_atma
        
    Call well.Calc_Plin_Pwf_atma(PS.Pwfsol_atma)          ' проведем расчет
    ' в качестве результата выведем ряд расчитанных значений давления
    Dim ar
    ar = Well_out_arr(well, 0)
    If param_num > 0 Then
        Nodal_Qliq_scm3day = Array(ar(0)(param_num), ar(1)(param_num))
    Else
        Nodal_Qliq_scm3day = Well_out_arr(well, 2)
    End If
End Function
