''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'>>> SOURCE LICENSE >>>
'This program is free software; you can redistribute it and/or modify
'it under the terms of the GNU General Public License as published by
'the Free Software Foundation (www.fsf.org); either version 2 of the
'License, or (at your option) any later version.
'
'This program is distributed in the hope that it will be useful,
'but WITHOUT ANY WARRANTY; without even the implied warranty of
'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'GNU General Public License for more details.
'
'A copy of the GNU General Public License is available at
'http://www.fsf.org/licensing/licenses
'
'>>> END OF LICENSE >>>
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Routines
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Calculation of the value of the Hermite polynomial.
'
'Parameters:
'    n   -   degree, n>=0
'    x   -   argument
'
'Result:
'    the value of the Hermite polynomial Hn at x
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function HermiteCalculate(ByRef N As Long, ByRef X As Double) As Double
    Dim Result As Double
    Dim i As Long
    Dim A As Double
    Dim B As Double
    
    '
    ' Prepare A and B
    '
    A = 1#
    B = 2# * X
    
    '
    ' Special cases: N=0 or N=1
    '
    If N = 0# Then
        Result = A
        HermiteCalculate = Result
        Exit Function
    End If
    If N = 1# Then
        Result = B
        HermiteCalculate = Result
        Exit Function
    End If
    
    '
    ' General case: N>=2
    '
    For i = 2# To N Step 1
        Result = 2# * X * B - 2# * (i - 1#) * A
        A = B
        B = Result
    Next i
    HermiteCalculate = Result
End Function
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Summation of Hermite polynomials using Clenshaw’s recurrence formula.
'
'This routine calculates
'    c[0]*H0(x) + c[1]*H1(x) + ... + c[N]*HN(x)
'
'Parameters:
'    n   -   degree, n>=0
'    x   -   argument
'
'Result:
'    the value of the Hermite polynomial at x
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function HermiteSum(ByRef C() As Double, _
         ByRef N As Long, _
         ByRef X As Double) As Double
    Dim Result As Double
    Dim b1 As Double
    Dim b2 As Double
    Dim i As Long
    b1 = 0#
    b2 = 0#
    For i = N To 0# Step -1
        Result = 2# * (X * b1 - (i + 1#) * b2) + C(i)
        b2 = b1
        b1 = Result
    Next i
    HermiteSum = Result
End Function
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Representation of Hn as C[0] + C[1]*X + ... + C[N]*X^N
'
'Input parameters:
'    N   -   polynomial degree, n>=0
'
'Output parameters:
'    C   -   coefficients
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub HermiteCoefficients(ByRef N As Long, ByRef C() As Double)
    Dim i As Long
    ReDim C(0# To N)
    For i = 0# To N Step 1
        C(i) = 0#
    Next i
    C(N) = Exp(N * Log(2#))
    For i = 0# To N \ 2# - 1# Step 1
        C(N - 2# * (i + 1#)) = -(C(N - 2# * i) * (N - 2# * i) * (N - 2# * i - 1#) / 4# / (i + 1#))
    Next i
End Sub
