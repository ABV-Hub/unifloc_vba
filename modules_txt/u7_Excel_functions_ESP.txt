'=======================================================================================
'Unifloc 7.7  Vulpes zerda                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' функции для проведения расчетов по режимам работы УЭЦН из интерфейса Excel
Option Explicit
' =============== функции для расчета УЭЦН  ============================
'
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный напор ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_head_m( _
        ByVal Qliq_m3day As Double, _
        Optional ByVal NumStages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal PumpID = 674, _
        Optional ByVal mu_cSt As Double = -1) As Double
' Qliq_m3day - дебит жидкости в условиях насоса (стенд)
' NumStages  - количество ступеней
' freq_Hz    - частота вращения насоса
' PumpID     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'description_end
On Error GoTo err1:
    If Not checkID_ESP(PumpID) Then
        ESP_head_m = 0
        Exit Function
    End If
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = NumStages
    ESP_head_m = ESP.Get_ESP_Head_m(Qliq_m3day, NumStages, mu_cSt)
    
    Exit Function
err1:
    ESP_head_m = "error"
    addLogMsg "error in function : ESP_head_m"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальная мощность потребляемая ЭЦН с вала (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_Power_W( _
        ByVal Qliq_m3day As Double, _
        Optional ByVal NumStages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal PumpID = 674, _
        Optional ByVal mu_cSt As Double = -1) As Double
' мощность УЭЦН номинальная потребляемая
' Qliq_m3day - дебит жидкости в условиях насоса (стенд)
' NumStages  - количество ступеней
' freq_Hz       - частота вращения насоса
' PumpID     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'description_end
    
On Error GoTo err1:
    If Not checkID_ESP(PumpID) Then
        ESP_Power_W = 0
        Exit Function
    End If
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = NumStages
    ESP_Power_W = ESP.Get_ESP_Power_W(Qliq_m3day, NumStages, mu_cSt)
    Exit Function
err1:
    ESP_Power_W = "error"
    addLogMsg "error in function : ESP_Power_W"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный КПД ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_eff_fr( _
        ByVal Qliq_m3day As Double, _
        Optional ByVal NumStages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal PumpID = 674, _
        Optional ByVal mu_cSt As Double = -1) As Double
' Qliq_m3day - дебит жидкости в условиях насоса (стенд)
' NumStages  - количество ступеней
' freq_Hz       - частота вращения насоса
' PumpID     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'description_end
    
On Error GoTo err1:
    
    If Not checkID_ESP(PumpID) Then
        ESP_eff_fr = 0
        Exit Function
    End If
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = NumStages
    ESP_eff_fr = ESP.Get_ESP_effeciency_fr(Qliq_m3day, mu_cSt)
    
    Exit Function
err1:
    ESP_eff_fr = "error"
    addLogMsg "error in function : ESP_eff_fr"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' название ЭЦН по номеру
Public Function ESP_name(Optional ByVal PumpID = 674) As String
' PumpID    - идентификатор насоса в базе данных
' результат - название насоса
'description_end
    
On Error GoTo err1:
    If Not checkID_ESP(PumpID) Then
        ESP_name = ""
        Exit Function
    End If
    ESP_name = ESP.PumpName
    
    Exit Function
err1:
    ESP_name = "error"
    addLogMsg "error in function : ESP_name"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' максимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function esp_maxRate_m3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal PumpID = 674) As Double
' freq_Hz   - частота вращения ЭЦН
' PumpID    - идентификатор насоса в базе данных
'description_end
    If Not checkID_ESP(PumpID) Then
        esp_maxRate_m3day = 0
        Exit Function
    End If
    ESP.freq_Hz = freq_Hz
    esp_maxRate_m3day = ESP.MaxRate_m3day
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' оптимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_optRate_m3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal PumpID = 674) As Double
' freq_Hz   - частота вращения ЭЦН
' PumpID    - идентификатор насоса в базе данных
'description_end
    If Not checkID_ESP(PumpID) Then
        ESP_optRate_m3day = 0
        Exit Function
    End If
    ESP.freq_Hz = freq_Hz
    ESP_optRate_m3day = ESP.nom_rate_m3day
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция возвращает идентификатор типового насоса по значению
' номинального дебита
Public Function ESP_IDbyRate(Q As Double)
' возвращает ID в зависимости от диапазона дебитов
' насосы подобраны вручную из текущей базы
' функция нужна для удобства использования
' непосредственно в Excel для тестовых заданий и учебных примеров
    If Q > 0 And Q < 20 Then ESP_IDbyRate = 738: ' ВНН5-15
    If Q >= 20 And Q < 40 Then ESP_IDbyRate = 740: ' ВНН5-30
    If Q >= 40 And Q < 60 Then ESP_IDbyRate = 1005: ' ВНН5-50
    If Q >= 60 And Q < 100 Then ESP_IDbyRate = 1006: ' ВНН5-80
    If Q >= 100 And Q < 150 Then ESP_IDbyRate = 737: ' ВНН5-125
    If Q >= 150 And Q < 250 Then ESP_IDbyRate = 1010: ' ЭЦН5A-200
    If Q >= 250 And Q < 350 Then ESP_IDbyRate = 1033: ' ЭЦН5A-320Э
    If Q >= 350 And Q < 600 Then ESP_IDbyRate = 753: ' ВНН5А-500
    If Q >= 600 And Q < 800 Then ESP_IDbyRate = 754: ' ВНН5А-700
    If Q >= 800 And Q < 1200 Then ESP_IDbyRate = 755: ' ВНН6-1000
    If Q > 1200 Then ESP_IDbyRate = 264
End Function
'description_end
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета перепада давления ЭЦН в рабочих условиях
Public Function ESP_dP_atm( _
                 ByVal Qliq_sm3day As Double, _
                 ByVal fw_perc As Double, _
                 ByVal P_atma As Double, _
        Optional ByVal NumStages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal PumpID = 674, _
        Optional ByVal PVTstr As String = PVT_DEFAULT, _
        Optional ByVal Tin_C As Double = 50, _
        Optional ByVal Tdis_C As Double = 50, _
        Optional ByVal CalcFromIntake As Boolean = 1, _
        Optional ByVal GasDegtType As Integer = 0, _
        Optional ByVal Kdegr As Double = 0)
' Qliq_sm3day       - дебит жидкости на поверхности
' fw_perc           - обводненность
' P_atma            - давление для которого делается расчет
'                     либо давление на приеме насоса
'                     либо давление на выкиде насоса
'                     определяется параметром CalcFromIntake
' NumStages         - количество ступеней
' freq_Hz           - частота, Гц
' PumpID            - идентификатор насоса
' PVTstr            - набор данных PVT
' Tin_C             - температура на приеме насоа
' Tdis_C            - температура на выкиде насоса.
'                     если = 0 и CalcFromIntake = 1 то рассчитывается
' CalcFromIntake    - режим расчета снизу вверх или сверху вниз
'                 CalcFromIntake = True => P_atma давление на приеме
'                 CalcFromIntake = False => P_atma давление на выкиде
' GasDegtType       - тип насоса по работе с газом
'      GasDegtType = 0 нет коррекции
'      GasDegtType = 1 стандартный ЭЦН (предел 25%)
'      GasDegtType = 2 ЭЦН с газостабилизирующим модулем (предел 50%)
'      GasDegtType = 3 ЭЦН с осевым модулем (предел 75%)
'      GasDegtType = 4 ЭЦН с модифицированным ступенями (предел 40%)
'                 предел по доле газа на входе в насос после сепарации
'                 на основе статьи SPE 117414 (с корректировкой)
'                 поправка дополнительная к деградации (суммируется)
' Kdegr             - коэффициент деградации напора
' результат   - массив значений включающий
'                   перепад давления
'                   перепад температур
'                   мощность потребляемая с вала, Вт
'                   мощность гидравлическая по перекачке жидкости, Вт
'                   КПД ЭЦН
'description_end
On Error GoTo er1:
    If Not checkID_ESP(PumpID) Then
        ESP_dP_atm = 0
        Exit Function
    End If
    Dim Fluid As CPVT
    
    If PVTstr <> "" Then
        Set Fluid = PVT_decode_string(PVTstr)
    End If
    
    Fluid.Qliq_scm3day = Qliq_sm3day
    Fluid.wc_perc = fw_perc
    
    Set ESP.Fluid = Fluid
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = NumStages
    ESP.cfHead_fr = Kdegr
    ESP.GasDegrType = GasDegtType
    If CalcFromIntake Then
        Call ESP.Calc_ESP(P_atma, Tin_C, Tdis_C, CalcFromIntake)
    Else
        Call ESP.Calc_ESP(P_atma, Tin_C, Tdis_C, CalcFromIntake)
    End If
    
    ESP_dP_atm = Array(ESP.Pdis_atma - ESP.Pint_atma, ESP.Tdis_C - ESP.Tintake_C, ESP.PowerESP_Wt, ESP.PowerFluid_Wt, ESP.EffiencyESP_d)
        Exit Function
er1:
    ESP_dP_atm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет производительности системы УЭЦН
' считает перепад давления, электрические параметры и деградацию КПД
Public Function ESP_system_calc( _
                 ByVal Qliq_sm3day As Double, _
                 ByVal fw_perc As Double, _
                 ByVal P_atma As Double, _
        Optional ByVal PVTstr As String, _
        Optional ByVal ESPstr As String, _
        Optional ByVal CalcFromIntake As Boolean = 1 _
        )
' Qliq_sm3day       - дебит жидкости на поверхности
' fw_perc           - обводненность
' P_atma            - давление для которого делается расчет
'                     либо давление на приеме насоса
'                     либо давление на выкиде насоса
'                     определяется параметром CalcFromIntake
' PVTstr            - набор данных PVT
' ESPstr            - набор данных ЭЦН
' CalcFromIntake    - режим расчета снизу вверх или сверху вниз
'                 CalcFromIntake = True => P_atma давление на приеме
'                 CalcFromIntake = False => P_atma давление на выкиде
' результат   - массив значений включающий
'                   перепад давления
'                   перепад температур
'                   мощность потребляемая с вала, Вт
'                   мощность гидравлическая по перекачке жидкости, Вт
'                   КПД ЭЦН
'                   список неполон
'description_end
    Dim ESP As CESPpump
    Dim ESPsys As New CESPsystemSimple
    Dim Fluid As CPVT
    
    Set ESPsys = ESP_decode_string(ESPstr)
    Set Fluid = PVT_decode_string(PVTstr)
    
    Set ESPsys.Fluid = Fluid
    Set ESPsys.ESPpump.Fluid = Fluid
    Fluid.Qliq_scm3day = Qliq_sm3day
    Fluid.wc_perc = fw_perc
    Call ESPsys.calc_ESPsys(P_atma, CalcFromIntake)
    
    ' на выходе будет много данных
    ' надо подготовить их для удобного отображения
    '
    Dim ar_val(10) As Double
    Dim ar_titles(10) As String
    Dim i As Integer
    i = 0
    ar_titles(i) = "dP_atm":  ar_val(i) = ESP.Pdis_atma - ESP.Pint_atma
    i = i + 1
    ar_titles(i) = "dT_C":  ar_val(i) = ESP.Tdis_C - ESP.Tintake_C
    i = i + 1
    ar_titles(i) = "I, A":  ar_val(i) = ESPsys.I_A
    i = i + 1
    ar_titles(i) = "Power kW":  ar_val(i) = ESPsys.Power_CS_calc_W / 1000
    i = i + 1
    ar_titles(i) = "Pint_atma":  ar_val(i) = ESP.Pint_atma
    i = i + 1
    ar_titles(i) = "Pdis_atma":  ar_val(i) = ESP.Pdis_atma
    i = i + 1
    ar_titles(i) = "dP_atm":  ar_val(i) = ESPsys.I_A
    i = i + 1
    ar_titles(i) = "dP_atm":  ar_val(i) = ESPsys.I_A
    i = i + 1
    ar_titles(i) = "dP_atm":  ar_val(i) = ESPsys.I_A
    i = i + 1
    ar_titles(i) = "dP_atm":  ar_val(i) = ESPsys.I_A
    i = i + 1
    
'    ESP_system_calc = Array(ESP.Pdis_atma - ESP.Pint_atma, ESP.Tdis_C - ESP.Tintake_C)
    ESP_system_calc = Array(ar_val, ar_titles)
End Function
'--------------------- Двигатель -----------------------
'' функция загрузки параметров двигателя с листа
'Public Function LoadMotorManually(Optional  Byval P_kW = 30, Optional  Byval U_V = 1000, Optional  Byval I_A = 10, _
'                    Optional  Byval Eff = 0.8, Optional  Byval CosPhi = 0.8, Optional  Byval F_Hz = 50, _
'                    Optional  Byval s = 0.05, Optional  Byval lambda = 2, Optional  Byval Diam = 117) As String
'    ' возвращаяет код двигателя
''On Error GoTo er1:
''    With Motor
''        .ID = 0
''        .MotorName = "_ПЭД_" & P_kW & "-" & Diam & "-" & U_V
''        .ManufacturerName = "Ручной ввод"
''        .Pnom_kW = P_kW
''        .Unom_lin_V = U_V
''        .Inom_phase_A = I_A
''        .Effnom_d = Eff
''        .CosPhinom_d = Cosphi
''        .fnom_Hz = f_Hz
''        .Snom_d = s
''        .Lambda_d = lambda
''        .minDcas_mm = Diam + 6
''
''        Call .CalcModelGridin
''    End With
''    LoadMotorManually = Motor.MotorName
''    Exit Function
''er1:
'' addLogMsg "Не удалось загрузить вручную параметры двигателя. Загружены параметры по умолчанию"
'' Set Motor = New CESPMotor
'End Function
'' функция расчета загрузки двигателя от скольжения
'' rnt 03/2016
'Public Function MotorLoad_d(s As Double, _
'                    Optional  Byval freq_HzU_Hz As Double = 50, _
'                    Optional  Byval U_V As Double = -1, _
'                    Optional  Byval MotorID As Integer = 0) As Double
''
''   s           - скольжение от 0 до 1
'' опциональные параметры
''   freq_HzU_Hz    - частота вращения внешнего поля
''   U_V         - напряжение питания двигателя, фазовое, В
'' выход
''   число       - значение момента двигателя при заданных частоте и напряжении
'
'
''    Application.Volatile (True)  ' поскольку пока есть зависимость от внешнего объекта - сделаем функцию чувствительной к пересчету
''
''
'''    Dim Motor As New CESPmotor
'''    Motor.CalcModelGridin
''
''    If freq_HzU_Hz > 0 Then Motor.f_Hz = freq_HzU_Hz
''    If U_V > 0 Then Motor.Ulin_V = U_V
''
''    Motor.S_d = s
''    MotorLoad_d = Motor.Load_d
'
'End Function
' функция расчета момента двигателя от проскальзования
' rnt 03/2016
Public Function MotorM_slip_Nm(s As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorM_slip_Nm = Motor.M_Nm
    
End Function
Public Function MotorI_slip_A(s As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorI_slip_A = Motor.I_lin_A
    
End Function
Public Function MotorCosPhi_slip(s As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorCosPhi_slip = Motor.CosPhi_d
    
End Function
Public Function MotorEff_slip(s As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorEff_slip = Motor.Eff_d
    
End Function
' функция расчета момента двигателя от мощности на валу
' rnt 03/2016
Public Function MotorM_Nm(Pshaft_kW As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorM_Nm = Motor.M_Nm
    
End Function
' функция расчета рабочего тока двигателя
' rnt 03/2016
Public Function MotorI_A(Pshaft_kW As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorI_A = Motor.I_lin_A
    
End Function
' функция расчета коэффициента мощности двигателя
' rnt 03/2016
Public Function MotorCosPhi_d(Pshaft_kW As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorCosPhi_d = Motor.CosPhi_d
    
End Function
' функция расчета КПД двигателя
' rnt 03/2016
Public Function MotorEff_d(Pshaft_kW As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorEff_d = Motor.Eff_d
    
End Function
' функция расчета скольжения от мощности на валу
' rnt 07/2018
Public Function MotorS_d(Pshaft_kW As Double, _
                    Optional ByVal freq_Hz As Double = 50, _
                    Optional ByVal U_V As Double = -1, _
                    Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorS_d = Motor.S_d
    
End Function
' функция выдает название двигателя по его характеристикам
' rnt 07/2018
Public Function MotorName(Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0)
'
' опциональные параметры
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    MotorName = Motor.MotorName
    
End Function
' функция выдает название номинальную мощность по его характеристикам
' rnt 07/2018
Public Function MotorPnom_kW(Optional ByVal Unom_V As Double = 500, _
                    Optional ByVal Inom_A As Double = 10, _
                    Optional ByVal Fnom_Hz As Double = 50, _
                    Optional ByVal MotorID As Integer = 0)
'
' опциональные параметры
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
0
Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    MotorPnom_kW = Motor.Pnom_kW
    
End Function
