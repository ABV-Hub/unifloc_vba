'=======================================================================================
'Unifloc 7.7  Vulpes zerda                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' функции для проведения расчетов по режимам работы УЭЦН из интерфейса Excel
Option Explicit
' =============== функции для расчета УЭЦН  ============================
'
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный напор ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_head_m( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id = 674, _
        Optional ByVal mu_cSt As Double = -1) As Double
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz    - частота вращения насоса
' pump_id     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'description_end
On Error GoTo err1:
    If Not checkID_ESP(pump_id) Then
        ESP_head_m = 0
        Exit Function
    End If
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = num_stages
    ESP_head_m = ESP.get_ESP_head_m(qliq_m3day, num_stages, mu_cSt)
    
    Exit Function
err1:
    ESP_head_m = -1
    addLogMsg "Error:ESP_head_m:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальная мощность потребляемая ЭЦН с вала (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_power_W( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id = 674, _
        Optional ByVal mu_cSt As Double = -1) As Double
' мощность УЭЦН номинальная потребляемая
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz       - частота вращения насоса
' pump_id     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'description_end
    
On Error GoTo err1:
    If Not checkID_ESP(pump_id) Then
        ESP_power_W = 0
        Exit Function
    End If
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = num_stages
    ESP_power_W = ESP.get_ESP_power_W(qliq_m3day, num_stages, mu_cSt)
    Exit Function
err1:
    ESP_power_W = -1
    addLogMsg "Error:ESP_power_W:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный КПД ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_eff_fr( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id = 674, _
        Optional ByVal mu_cSt As Double = -1) As Double
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz       - частота вращения насоса
' pump_id     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'description_end
    
On Error GoTo err1:
    
    If Not checkID_ESP(pump_id) Then
        ESP_eff_fr = 0
        Exit Function
    End If
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = num_stages
    ESP_eff_fr = ESP.get_ESP_effeciency_fr(qliq_m3day, mu_cSt)
    
    Exit Function
err1:
    ESP_eff_fr = -1
    addLogMsg "Error:ESP_eff_fr:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' название ЭЦН по номеру
Public Function ESP_name(Optional ByVal pump_id = 674) As String
' pump_id    - идентификатор насоса в базе данных
' результат - название насоса
'description_end
    
On Error GoTo err1:
    If Not checkID_ESP(pump_id) Then
        ESP_name = ""
        Exit Function
    End If
    ESP_name = ESP.PumpName
    
    Exit Function
err1:
    ESP_name = -1
    addLogMsg "Error:ESP_name:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' максимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_max_rate_m3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal pump_id = 674) As Double
' freq_Hz   - частота вращения ЭЦН
' pump_id    - идентификатор насоса в базе данных
'description_end
On Error GoTo err1:
    If Not checkID_ESP(pump_id) Then
        ESP_max_rate_m3day = 0
        Exit Function
    End If
    ESP.freq_Hz = freq_Hz
    ESP_max_rate_m3day = ESP.MaxRate_m3day
    Exit Function
err1:
    ESP_max_rate_m3day = -1
    addLogMsg "Error:ESP_max_rate_m3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' оптимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_optRate_m3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal pump_id = 674) As Double
' freq_Hz   - частота вращения ЭЦН
' pump_id    - идентификатор насоса в базе данных
'description_end
On Error GoTo err1:
    If Not checkID_ESP(pump_id) Then
        ESP_optRate_m3day = 0
        Exit Function
    End If
    ESP.freq_Hz = freq_Hz
    ESP_optRate_m3day = ESP.nom_rate_m3day
    Exit Function
err1:
    ESP_optRate_m3day = -1
    addLogMsg "Error:ESP_optRate_m3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция возвращает идентификатор типового насоса по значению
' номинального дебита
Public Function ESP_id_by_rate(Q As Double)
' возвращает ID в зависимости от диапазона дебитов
' насосы подобраны вручную из текущей базы
' функция нужна для удобства использования
' непосредственно в Excel для тестовых заданий и учебных примеров
    If Q > 0 And Q < 20 Then ESP_id_by_rate = 738: ' ВНН5-15
    If Q >= 20 And Q < 40 Then ESP_id_by_rate = 740: ' ВНН5-30
    If Q >= 40 And Q < 60 Then ESP_id_by_rate = 1005: ' ВНН5-50
    If Q >= 60 And Q < 100 Then ESP_id_by_rate = 1006: ' ВНН5-80
    If Q >= 100 And Q < 150 Then ESP_id_by_rate = 737: ' ВНН5-125
    If Q >= 150 And Q < 250 Then ESP_id_by_rate = 1010: ' ЭЦН5A-200
    If Q >= 250 And Q < 350 Then ESP_id_by_rate = 1033: ' ЭЦН5A-320Э
    If Q >= 350 And Q < 600 Then ESP_id_by_rate = 753: ' ВНН5А-500
    If Q >= 600 And Q < 800 Then ESP_id_by_rate = 754: ' ВНН5А-700
    If Q >= 800 And Q < 1200 Then ESP_id_by_rate = 755: ' ВНН6-1000
    If Q > 1200 Then ESP_id_by_rate = 264
End Function
'description_end
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета перепада давления ЭЦН в рабочих условиях
Public Function ESP_dp_atm( _
                 ByVal qliq_sm3day As Double, _
                 ByVal fw_perc As Double, _
                 ByVal p_atma As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id = 674, _
        Optional ByVal PVTstr As String = PVT_DEFAULT, _
        Optional ByVal t_intake_C As Double = 50, _
        Optional ByVal Tdis_C As Double = 50, _
        Optional ByVal CalcFromIntake As Boolean = 1, _
        Optional ByVal GasDegtType As Integer = 0, _
        Optional ByVal Kdegr As Double = 0)
' qliq_sm3day       - дебит жидкости на поверхности
' fw_perc           - обводненность
' p_atma            - давление для которого делается расчет
'                     либо давление на приеме насоса
'                     либо давление на выкиде насоса
'                     определяется параметром CalcFromIntake
' num_stages        - количество ступеней
' freq_Hz           - частота вращения вала ЭЦН, Гц
' pump_id           - идентификатор насоса
' PVTstr            - набор данных PVT
' t_intake_C        - температура на приеме насоа
' Tdis_C            - температура на выкиде насоса.
'                     если = 0 и CalcFromIntake = 1 то рассчитывается
' CalcFromIntake    - режим расчета снизу вверх или сверху вниз
'                 CalcFromIntake = True => p_atma давление на приеме
'                 CalcFromIntake = False => p_atma давление на выкиде
' GasDegtType       - тип насоса по работе с газом
'      GasDegtType = 0 нет коррекции
'      GasDegtType = 1 стандартный ЭЦН (предел 25%)
'      GasDegtType = 2 ЭЦН с газостабилизирующим модулем (предел 50%)
'      GasDegtType = 3 ЭЦН с осевым модулем (предел 75%)
'      GasDegtType = 4 ЭЦН с модифицированным ступенями (предел 40%)
'                 предел по доле газа на входе в насос после сепарации
'                 на основе статьи SPE 117414 (с корректировкой)
'                 поправка дополнительная к деградации (суммируется)
' Kdegr             - коэффициент деградации напора
' результат   - массив значений включающий
'                   перепад давления
'                   перепад температур
'                   мощность потребляемая с вала, Вт
'                   мощность гидравлическая по перекачке жидкости, Вт
'                   КПД ЭЦН
'description_end
On Error GoTo er1:
    If Not checkID_ESP(pump_id) Then
        ESP_dp_atm = 0
        Exit Function
    End If
    Dim fluid As CPVT
    
    If PVTstr <> "" Then
        Set fluid = PVT_decode_string(PVTstr)
    End If
    
    fluid.qliq_sm3day = qliq_sm3day
    fluid.fw_perc = fw_perc
    
    Set ESP.fluid = fluid
    
    ESP.freq_Hz = freq_Hz
    ESP.StageNum = num_stages
    ESP.cfHead_fr = Kdegr
    ESP.GasDegrType = GasDegtType
    If CalcFromIntake Then
        Call ESP.calc_ESP(p_atma, t_intake_C, Tdis_C, CalcFromIntake)
    Else
        Call ESP.calc_ESP(p_atma, t_intake_C, Tdis_C, CalcFromIntake)
    End If
    
    ESP_dp_atm = Array(ESP.Pdis_atma - ESP.Pint_atma, ESP.Tdis_C - ESP.Tintake_C, ESP.PowerESP_Wt, ESP.Powerfluid_Wt, ESP.EffiencyESP_d)
    Exit Function
er1:
    ESP_dp_atm = -1
    addLogMsg "Error:ESP_dp_atm:" & Err.Description
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет производительности системы УЭЦН
' считает перепад давления, электрические параметры и деградацию КПД
Public Function ESP_system_calc( _
                 ByVal qliq_sm3day As Double, _
                 ByVal fw_perc As Double, _
                 ByVal p_atma As Double, _
        Optional ByVal PVTstr As String, _
        Optional ByVal ESPstr As String, _
        Optional ByVal CalcFromIntake As Boolean = 1 _
        )
' qliq_sm3day       - дебит жидкости на поверхности
' fw_perc           - обводненность
' p_atma            - давление для которого делается расчет
'                     либо давление на приеме насоса
'                     либо давление на выкиде насоса
'                     определяется параметром CalcFromIntake
' PVTstr            - набор данных PVT
' ESPstr            - набор данных ЭЦН
' CalcFromIntake    - режим расчета снизу вверх или сверху вниз
'                 CalcFromIntake = True => p_atma давление на приеме
'                 CalcFromIntake = False => p_atma давление на выкиде
' результат   - массив значений включающий
'                   перепад давления
'                   перепад температур
'                   мощность потребляемая с вала, Вт
'                   мощность гидравлическая по перекачке жидкости, Вт
'                   КПД ЭЦН
'                   список неполон
'description_end
On Error GoTo er1:
    Dim ESP As CESPpump
    Dim ESPsys As New CESPsystemSimple
    Dim fluid As CPVT
    
    Set ESPsys = ESP_decode_string(ESPstr)
    Set fluid = PVT_decode_string(PVTstr)
    
    Set ESPsys.fluid = fluid
    Set ESPsys.ESPpump.fluid = fluid
    fluid.qliq_sm3day = qliq_sm3day
    fluid.fw_perc = fw_perc
    Call ESPsys.calc_ESPsys(p_atma, CalcFromIntake)
    
    ' на выходе будет много данных
    ' надо подготовить их для удобного отображения
    '
    Dim ar_val(10) As Double
    Dim ar_titles(10) As String
    Dim I As Integer
    I = 0
    ar_titles(I) = "dP_atm":  ar_val(I) = ESP.Pdis_atma - ESP.Pint_atma
    I = I + 1
    ar_titles(I) = "dT_C":  ar_val(I) = ESP.Tdis_C - ESP.Tintake_C
    I = I + 1
    ar_titles(I) = "I, A":  ar_val(I) = ESPsys.I_A
    I = I + 1
    ar_titles(I) = "power kW":  ar_val(I) = ESPsys.power_CS_calc_W / 1000
    I = I + 1
    ar_titles(I) = "Pint_atma":  ar_val(I) = ESP.Pint_atma
    I = I + 1
    ar_titles(I) = "Pdis_atma":  ar_val(I) = ESP.Pdis_atma
    I = I + 1
    ar_titles(I) = "dP_atm":  ar_val(I) = ESPsys.I_A
    I = I + 1
    ar_titles(I) = "dP_atm":  ar_val(I) = ESPsys.I_A
    I = I + 1
    ar_titles(I) = "dP_atm":  ar_val(I) = ESPsys.I_A
    I = I + 1
    ar_titles(I) = "dP_atm":  ar_val(I) = ESPsys.I_A
    I = I + 1
    
'    ESP_system_calc = Array(ESP.Pdis_atma - ESP.Pint_atma, ESP.Tdis_C - ESP.Tintake_C)
    ESP_system_calc = Array(ar_val, ar_titles)
    Exit Function
er1:
    ESP_system_calc = -1
    addLogMsg "Error:ESP_system_calc:" & Err.Description
End Function
'--------------------- Двигатель -----------------------
'' функция загрузки параметров двигателя с листа
'Public Function loadmotorManually(Optional  Byval P_kW = 30, Optional  Byval U_V = 1000, Optional  Byval I_A = 10, _
'                    Optional  Byval Eff = 0.8, Optional  Byval CosPhi = 0.8, Optional  Byval F_Hz = 50, _
'                    Optional  Byval s = 0.05, Optional  Byval lambda = 2, Optional  Byval Diam = 117) As String
'    ' возвращаяет код двигателя
''On Error GoTo er1:
''    With motor
''        .ID = 0
''        .motorName = "_ПЭД_" & P_kW & "-" & Diam & "-" & U_V
''        .ManufacturerName = "Ручной ввод"
''        .Pnom_kW = P_kW
''        .Unom_lin_V = U_V
''        .Inom_phase_A = I_A
''        .Effnom_d = Eff
''        .CosPhinom_d = Cosphi
''        .fnom_Hz = f_Hz
''        .Snom_d = s
''        .Lambda_d = lambda
''        .minDcas_mm = Diam + 6
''
''        Call .CalcModelGridin
''    End With
''    loadmotorManually = motor.motorName
''    Exit Function
''er1:
'' addLogMsg "Не удалось загрузить вручную параметры двигателя. Загружены параметры по умолчанию"
'' Set motor = New CESPmotor
'End Function
'' функция расчета загрузки двигателя от скольжения
'' rnt 03/2016
'Public Function motor_load_d(s As Double, _
'                    Optional  Byval freq_HzU_Hz As Double = 50, _
'                    Optional  Byval U_V As Double = -1, _
'                    Optional  Byval motorID As Integer = 0) As Double
''
''   s           - скольжение от 0 до 1
'' опциональные параметры
''   freq_HzU_Hz    - частота вращения внешнего поля
''   U_V         - напряжение питания двигателя, фазовое, В
'' выход
''   число       - значение момента двигателя при заданных частоте и напряжении
'
'
''    Application.Volatile (True)  ' поскольку пока есть зависимость от внешнего объекта - сделаем функцию чувствительной к пересчету
''
''
'''    Dim motor As New CESPmotor
'''    motor.CalcModelGridin
''
''    If freq_HzU_Hz > 0 Then motor.f_Hz = freq_HzU_Hz
''    If U_V > 0 Then motor.Ulin_V = U_V
''
''    motor.S_d = s
''    motorload_d = motor.load_d
'
'End Function
' rnt 03/2016
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета момента двигателя от проскальзования
Public Function motor_M_slip_Nm(ByVal S As Double, _
                      Optional ByVal freq_Hz As Double = 50, _
                      Optional ByVal U_V As Double = -1, _
                      Optional ByVal Unom_V As Double = 500, _
                      Optional ByVal Inom_A As Double = 10, _
                      Optional ByVal Fnom_Hz As Double = 50, _
                      Optional ByVal motorID As Integer = 0) As Double
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
'                 корректно работает, толко для motorID = 0
' выход
'   результат   - значение момента двигателя при заданных частоте и напряжении
'description_end
On Error GoTo er1:
    
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor_slip S, freq_Hz, U_V
    motor_M_slip_Nm = motor.M_Nm
    
    Exit Function
er1:
    motor_M_slip_Nm = -1
    addLogMsg "Error:motor_M_slip_Nm:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' Расчет потребляемого тока
' погружного ассинхронного двигателя от проскальзывания
Public Function motor_I_slip_A(ByVal S As Double, _
                     Optional ByVal freq_Hz As Double = 50, _
                     Optional ByVal U_V As Double = -1, _
                     Optional ByVal Unom_V As Double = 500, _
                     Optional ByVal Inom_A As Double = 10, _
                     Optional ByVal Fnom_Hz As Double = 50, _
                     Optional ByVal motorID As Integer = 0) As Double
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
'                 корректно работает, толко для motorID = 0
' выход
'   результат   - ток
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor_slip S, freq_Hz, U_V
    motor_I_slip_A = motor.I_lin_A
    
    Exit Function
er1:
    motor_I_slip_A = -1
    addLogMsg "Error:motor_I_slip_A:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' Расчет коэффициента мощности
' погружного ассинхронного двигателя от проскальзывания
Public Function motor_CosPhi_slip(ByVal S As Double, _
                        Optional ByVal freq_Hz As Double = 50, _
                        Optional ByVal U_V As Double = -1, _
                        Optional ByVal Unom_V As Double = 500, _
                        Optional ByVal Inom_A As Double = 10, _
                        Optional ByVal Fnom_Hz As Double = 50, _
                        Optional ByVal motorID As Integer = 0) As Double
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
'                 корректно работает, толко для motorID = 0
' выход
'   результат   - коэффициент мощности cos phi
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor_slip S, freq_Hz, U_V
    motor_CosPhi_slip = motor.CosPhi_d
    
    Exit Function
er1:
    motor_CosPhi_slip = -1
    addLogMsg "Error:motor_CosPhi_slip:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' Расчет КПД погружного ассинхронного двигателя от проскальзывания
Public Function motor_Eff_slip(ByVal S As Double, _
                     Optional ByVal freq_Hz As Double = 50, _
                     Optional ByVal U_V As Double = -1, _
                     Optional ByVal Unom_V As Double = 500, _
                     Optional ByVal Inom_A As Double = 10, _
                     Optional ByVal Fnom_Hz As Double = 50, _
                     Optional ByVal motorID As Integer = 0) As Double
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
'                 корректно работает, толко для motorID = 0
' выход
'   результат   -  КПД преобразования электрической мощности
'                 в механическую
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor_slip S, freq_Hz, U_V
    motor_Eff_slip = motor.Eff_d
    Exit Function
er1:
    motor_Eff_slip = -1
    addLogMsg "Error:motor_Eff_slip:" & Err.Description
    
End Function
' rnt 03/2016
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета момента двигателя от мощности на валу
Public Function motor_M_Nm(ByVal Pshaft_kW As Double, _
                Optional ByVal freq_Hz As Double = 50, _
                Optional ByVal U_V As Double = -1, _
                Optional ByVal Unom_V As Double = 500, _
                Optional ByVal Inom_A As Double = 10, _
                Optional ByVal Fnom_Hz As Double = 50, _
                Optional ByVal motorID As Integer = 0) As Double
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   результат   - момент на валу двигателя
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor Pshaft_kW, freq_Hz, U_V
    motor_M_Nm = motor.M_Nm
    
    Exit Function
er1:
    motor_M_Nm = -1
    addLogMsg "Error:motor_M_Nm:" & Err.Description
End Function
' rnt 03/2016
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета рабочего тока двигателя
Public Function motor_I_A(ByVal Pshaft_kW As Double, _
                Optional ByVal freq_Hz As Double = 50, _
                Optional ByVal U_V As Double = -1, _
                Optional ByVal Unom_V As Double = 500, _
                Optional ByVal Inom_A As Double = 10, _
                Optional ByVal Fnom_Hz As Double = 50, _
                Optional ByVal motorID As Integer = 0) As Double
'  Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока при данном режиме работы
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor Pshaft_kW, freq_Hz, U_V
    motor_I_A = motor.I_lin_A
    
    Exit Function
er1:
    motor_I_A = -1
    addLogMsg "Error:motor_I_A:" & Err.Description
End Function
' rnt 03/2016
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета коэффициента мощности двигателя
Public Function motor_CosPhi_d(ByVal Pshaft_kW As Double, _
                Optional ByVal freq_Hz As Double = 50, _
                Optional ByVal U_V As Double = -1, _
                Optional ByVal Unom_V As Double = 500, _
                Optional ByVal Inom_A As Double = 10, _
                Optional ByVal Fnom_Hz As Double = 50, _
                Optional ByVal motorID As Integer = 0) As Double
'   Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   результат   - коэффициент мощности двигателя
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor Pshaft_kW, freq_Hz, U_V
    motor_CosPhi_d = motor.CosPhi_d
    
    Exit Function
er1:
    motor_CosPhi_d = -1
    addLogMsg "Error:motor_CosPhi_d:" & Err.Description
End Function
' rnt 03/2016
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета КПД двигателя
Public Function motor_Eff_d(ByVal Pshaft_kW As Double, _
                Optional ByVal freq_Hz As Double = 50, _
                Optional ByVal U_V As Double = -1, _
                Optional ByVal Unom_V As Double = 500, _
                Optional ByVal Inom_A As Double = 10, _
                Optional ByVal Fnom_Hz As Double = 50, _
                Optional ByVal motorID As Integer = 0) As Double
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   результат   - КПД преобразования электрической мощности
'                 в механическую
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor Pshaft_kW, freq_Hz, U_V
    motor_Eff_d = motor.Eff_d
    
    Exit Function
er1:
    motor_Eff_d = -1
    addLogMsg "Error:motor_Eff_d:" & Err.Description
End Function
' rnt 07/2018
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'функция расчета скольжения от мощности на валу
Public Function motor_S_d(ByVal Pshaft_kW As Double, _
                Optional ByVal freq_Hz As Double = 50, _
                Optional ByVal U_V As Double = -1, _
                Optional ByVal Unom_V As Double = 500, _
                Optional ByVal Inom_A As Double = 10, _
                Optional ByVal Fnom_Hz As Double = 50, _
                Optional ByVal motorID As Integer = 0) As Double
'   Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   результат   - скольжения от мощности на валу
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor.calc_motor Pshaft_kW, freq_Hz, U_V
    motor_S_d = motor.S_d
    
    Exit Function
er1:
    motor_S_d = -1
    addLogMsg "Error:motor_S_d:" & Err.Description
End Function
' rnt 07/2018
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция выдает название двигателя по его характеристикам
Public Function motor_Name(Optional ByVal Unom_V As Double = 500, _
                          Optional ByVal Inom_A As Double = 10, _
                          Optional ByVal Fnom_Hz As Double = 50, _
                          Optional ByVal motorID As Integer = 0)
'
' опциональные параметры
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым' выход
'   результат   - формальное название ПЭД
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor_Name = motor.motorName
    
    Exit Function
er1:
    motor_Name = -1
    addLogMsg "Error:motor_Name:" & Err.Description
End Function
' rnt 07/2018
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция выдает номинальную мощность ПЭД по его характеристикам
Public Function motor_Pnom_kW(Optional ByVal Unom_V As Double = 500, _
                             Optional ByVal Inom_A As Double = 10, _
                             Optional ByVal Fnom_Hz As Double = 50, _
                             Optional ByVal motorID As Integer = 0)
' опциональные параметры
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   motorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым' выход
'   результат   - номинальная мощность ПЭД
'description_end
On Error GoTo er1:
    Dim motor As New CESPMotor
    motor.InitMotor motorID, Unom_V, Inom_A, Fnom_Hz
    motor_Pnom_kW = motor.Pnom_kW
    
    Exit Function
er1:
    motor_Pnom_kW = -1
    addLogMsg "Error:motor_Pnom_kW:" & Err.Description
End Function
