'=======================================================================================
'Unifloc 7.9  Vulpes zerda                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' набор функций для решения ДУ и уравнений для различных классов и процедур
Option Explicit
' функция градиента давления для одномерной задачи расчета
' распределения давления в трубопроводе
Public Function calc_grad_1d(l_m As Double, _
                              Y() As Double, _
                              pipe As CPipe) As Double()
    Dim out(0 To 0) As Double
    Dim res As PIPE_FLOW_PARAMS
    With pipe
        res = pipe.calc_grad(l_m, Y(0), pipe.Tinit_C(l_m), calc_dtdl:=False)
    End With
    out(0) = res.dp_dl
    calc_grad_1d = out
End Function
' функция градиента давления для двухмерной задачи расчета
' распределения давления в трубопроводе
Public Function calc_grad_2d(l_m As Double, _
                             Y() As Double, _
                             pipe As CPipe) As Double()
    Dim out(0 To 1) As Double
    Dim res As PIPE_FLOW_PARAMS
    With pipe
        res = pipe.calc_grad(l_m, Y(0), Y(1))
    End With
    out(0) = res.dp_dl
    out(1) = res.dt_dl
    calc_grad_2d = out
End Function
' расчет параметров трубы
' функция расчета ошибки в оценке давления для трубы
' в зависимости от поправки на гравитационную составляющую градиента
'Public Function calc_pipe_dp_error_atm(ByVal c_calibr_grav As Double, _
'                                 ByVal pipe As CPipe, _
'                                 ByVal p_in_atma As Double, _
'                                 ByVal p_out_atma As Double, _
'                                 Optional ByVal calc_along_flow As Boolean = True) As Double
Public Function calc_pipe_dp_error_atm(ByVal c_calibr_grav As Double, _
                                   coeffA As Variant) As Double
    Dim pt As PTtype
    Dim pipe As CPipe
    Dim p_in_atma As Double
    Dim p_out_atma As Double
    
    Set pipe = coeffA(0)
    p_in_atma = coeffA(1)
    p_out_atma = coeffA(2)
    
    With pipe
        .c_calibr_grav = c_calibr_grav
        .PARAM.FlowDirection = FlowAlongCoord
        .PARAM.tempMethod = StartEndTemp
        .InitTlinear .Tin_C, .Tout_C
        pt = .calc_dPipe(p_in_atma)
        calc_pipe_dp_error_atm = (pt.p_atma - p_out_atma)
    End With
    
End Function
