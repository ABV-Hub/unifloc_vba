'=======================================================================================
'Unifloc 7.25  coronav                                          khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
' Pump and submersible equipment base operation
Option Explicit
Const esp_db_name = "\ESP_json.db"
' only database as global variable here
' in order to reduce db file read
Public ESP_base_dictionary As Dictionary
Private Sub read_json_to_dict()
    ' read ESP database in json format
    ' ESP database in json format can be prepared with ESP_db.xlsm file
    
    Dim ss As String
    Dim line_from_file As String
    Dim lines_all As String
    Dim fname As String
    
    fname = ThisWorkbook.Path & esp_db_name
    
On Error GoTo err1:
    
    Open fname For Input As #1
    Do While Not EOF(1)
        Line Input #1, line_from_file
        lines_all = lines_all & line_from_file & vbCrLf
    Loop
    Close #1
    Set ESP_base_dictionary = ParseJson(lines_all)
    
    Exit Sub
err1:
    Dim msg As String
    msg = "read_json_to_dict:" & fname & "read error"
    Err.Raise kErrESPbase, , msg & Err.Description
End Sub
Public Function getESP(ByVal ID As String) As CESPpump
' returns an ESP with a specified number from the base
    Dim newESP As New CESPpump
    
    If ESP_base_dictionary Is Nothing Then
        Call read_json_to_dict
    End If
    Set getESP = get_ESP_dict(ESP_base_dictionary(CStr(ID)))
End Function
Private Function get_ESP_dict(dict As Dictionary) As CESPpump
' load all pumps from db array here
    Dim esp_db As ESP_PARAMS
    Dim j As Integer, num As Integer
    Dim zero_found As Boolean
    Dim esp As New CESPpump
    
On Error GoTo err_load_pump:
    num = dict("rate_points").Count
    With esp_db
        
        ReDim .head_points(1 To num)
        ReDim .rate_points(1 To num)
        ReDim .power_points(1 To num)
        ReDim .eff_points(1 To num)
              
        For j = 1 To num
               .head_points(j) = dict("head_points")(j)
               .rate_points(j) = dict("rate_points")(j)
               .power_points(j) = dict("power_points")(j)
               .eff_points(j) = dict("eff_points")(j)
        Next j
        
            ' read all data from first line in DB table
        .ID = dict("ID")
        .manufacturer = dict("manufacturer")
        .name = dict("name")
        .stages_max = dict("stages_max")
        .rate_nom_sm3day = dict("rate_nom_sm3day")
        .rate_opt_min_sm3day = dict("rate_opt_min_sm3day")
        .rate_opt_max_sm3day = dict("rate_opt_max_sm3day")
        .rate_max_sm3day = dict("rate_max_sm3day")
        .slip_nom_rpm = dict("slip_nom_rpm")
        .freq_Hz = dict("freq_Hz")
        .eff_max = dict("eff_max")
        .d_od_m = dict("d_od_mm") / 1000 ' читаем габарит насоса
        .d_motor_od_m = dict("d_motor_od_mm") / 1000  ' читаем габарит насоса
        .d_cas_min_m = dict("d_cas_min_mm") / 1000
        .d_shaft_m = dict("d_shaft_mm") / 1000
        .power_limit_shaft_kW = dict("power_limit_shaft_kW")
        .power_limit_shaft_max_kW = dict("power_limit_shaft_max_kW")
        .pressure_limit_housing_atma = dict("pressure_limit_housing_atma")
        
        If dict("height_stage_m") <> "" Then
            .height_stage_m = dict("height_stage_m")
        Else
            .height_stage_m = 0.05   ' по умолчанию 5 см высота. Можно сделать зависимость от дебита
        End If
    End With
    
        esp.db = esp_db
    Set get_ESP_dict = esp
    
    Exit Function
    
err_load_pump:
    On Error GoTo 0
    addLogMsg "Problem while loading pump . " & CStr(esp_db.ID) & Err.Description
    Set get_ESP_dict = Nothing
End Function

